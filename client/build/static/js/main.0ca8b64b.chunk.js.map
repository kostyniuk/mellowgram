{"version":3,"sources":["redux/userReducer.js","redux/types.js","redux/currentPageReducer.js","redux/postReducer.js","redux/likeReducer.js","redux/followingReducer.js","redux/followedByReducer.js","redux/loggedInFollows.js","helpers/index.js","redux/chatReducer.js","helpers/msg.js","redux/messagesReducer.js","redux/onlineUsers.js","redux/rootReducer.js","redux/actions.js","hooks/useFetch.js","hooks/useAuth.js","components/LoginInput.js","components/Header/SettingsDropdown.js","components/Direct/Badge.js","components/Header/AsyncSelect.js","components/Header/Header.js","pages/Login.js","components/SignupInput.js","pages/Signup.js","pages/NotFound.js","components/User/ToastNewMsg.js","components/User/ExpSingle.js","components/User/Experience.js","components/User/FollowingBar.js","components/User/PicturesBar.js","components/User/PictureModal.js","components/User/Post/PostInput.js","index.js","components/User/EditBioInput.js","components/User/EditModal.js","components/User/UserInfo.js","components/User/FollowRow.js","components/User/LikesModal.js","components/User/Post/Post.js","components/User/Post/Posts.js","pages/User.js","components/Table.js","components/UploadButton.js","components/SettingsCard.js","pages/Settings.js","pages/About.js","components/Direct/ChatRow.js","helpers/sorting.js","components/Direct/Chats.js","components/Direct/DateHr.js","components/Direct/Message.js","components/Direct/Messages.js","pages/Direct.js","App.js"],"names":["initialState","isAuthenticated","id","bio","username","based_in","email","fullname","number_of_posts","occupation","phone_number","picture","ready","userReducer","state","action","type","payload","uuid","currentPageReducer","newBio","user","postReducer","posts","final","length","forEach","post","post_id","number_of_likes","console","log","newCaption","caption","likeReducer","likes","loaded","user_id","likedUsers","data","filter","obj","person_id","push","alreadyLiked","newLike","followingReducer","users","followedByReducer","myPage","producer","loggedInFollows","consumer","sleep","msec","Promise","resolve","setTimeout","arrToObj","arr","prop","getTotalUnread","chats","reduce","prev","cur","unread","chatReducer","messages","me","transformed","addNumOfUnread","chatObj","message","sender_id","is_read","map","Object","keys","includes","room_id","toString","patched","info","temp","JSON","parse","stringify","roomId","latestMessage","message_id","messageId","senderId","context","send_at","date","chat","chatId","reseted","adjustTime","split","slice","num","i","Number","join","addTimeSeparator","monthNames","current","currentMessageDate","previousMessageDate","day","Date","getDate","month","getMonth","year","getFullYear","previousMessage","messagesReducer","adjustedMessages","sort","a","b","from","text","currentChat","withSeparators","ids","onlineIds","rootReducer","combineReducers","loggedInUser","loggedInUserReducer","currentPage","following","followedBy","chatsReducer","onlineUsers","onlineUsersReducer","updateProfilePicture","incrementNumberOfLikes","decrementNumberOfLikes","createLikesOnAddPost","deletePost","editPost","setFollowing","setFollowedBy","addFollow","deleteFollow","addMessage","useFetch","useState","loading","setLoading","error","setError","request","useCallback","url","params","method","signal","fetch","responce","json","success","msg","useAuth","dispatch","useDispatch","fetchUser","useEffect","LoginInput","form","changeHandler","submitHandler","err","className","name","aria-describedby","value","onChange","password","href","onClick","Dropdown","options","isOpen","toggleOpen","selected","setSelected","tabIndex","option","key","data-value","data-display-text","display","Select","defaultVal","label","history","useHistory","open","setOpen","select","setSelect","logoutHandler","window","location","reload","pathname","Badge","size","status","content","AsyncSelectCustom","handler","timeId","promiseOptions","inputValue","debounce","timeout","callback","clearTimeout","bind","placeholder","cacheOptions","noOptionsMessage","loadOptions","categoryOptions","Hamburger","Header","selectedValue","setSelectedValue","authorized","useSelector","values","unreadCount","to","AsyncSelect","e","aria-hidden","Login","setForm","headers","body","target","SignupInput","fullName","Signup","NotFound","ToastNewMsg","src","ExpSingle","company","profession","achievements","data-year","Experience","experience","single","UserRow","alt","style","marginTop","FollowingBar","PicturesBar","setSelectedImg","pictures","doc","div","layout","img","initial","opacity","animate","transition","delay","PictureModal","selectedImg","classList","contains","y","class","PostInput","store","modal","handleEdit","setCaption","result","rows","autoFocus","EditBioInput","closeModal","setNewBio","submitBio","EditModal","isBio","UserInfo","startMessagingHandler","setOpenDialog","followingLoggedIn","newMsg","followingThisUser","setFollowingThisUser","editBioModal","setEditBioModal","showNotify","useRef","same","btnClassName","curr","equal","userObj","isAlreadyFollowed","fetchFollowers","fetchFollowing","followHandler","abortController","AbortController","abort","msgInfo","btnAbout","setBtnAbout","btnExprerience","setBtnExprerience","btnContact","setBtnContact","cardClasses","setCardClasses","sectionAbout","setSectionAbout","sectionExperience","setSectionExperience","sectionContact","setSectionContact","dataState","setDataState","handleButtonClick","targetSection","getAttribute","replace","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","newestOnTop","rtl","other","data-state","viewBox","xmlns","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","data-section","FollowRow","alreadyFollowed","LikesModal","Post","numberOfLikes","postedAt","showSettings","loggedInfo","setSelectedLikes","deletePostHandler","editPostHandler","liked","setLiked","likeButtonClasses","handleLike","res","color","Posts","hasMore","setHasMore","selectedLikes","editModal","setEditModal","isParsed","setIsParsed","offset","loadLikes","arrOfPosts","requests","all","loadPosts","fetchMoreData","dataLength","next","loader","reverse","created_at","User","match","userPage","setUserPage","parseInfo","theme","createMuiTheme","typography","fontFamily","StyledTableCellField","withStyles","root","border","borderColor","fontSize","backgroundColor","TableCell","StyledTableCellValue","palette","common","white","StyledTableRow","font","hover","TableRow","useStyles","makeStyles","table","minWidth","SimpleTable","tab","classes","infoRows","field","ThemeProvider","TableContainer","component","Paper","Table","aria-label","TableBody","row","align","UploadButton","newImage","setNewImage","removed","setProfilePhoto","event","preventDefault","fd","FormData","append","response","file","files","SettingsCard","openTab","setOpenTab","edit","setEdit","updatedInfo","setUpdatedInfo","passwordToDelete","setPasswordToDelete","wrongPassword","setWrongPassword","switchTab","index","submitEdit","deleteHandlerOnClick","adjustedOverwiew","props","deleteProperties","onSubmit","Password","Settings","About","ChatRow","str","chat_id","unreadMessagesCount","openDialog","handleChatClick","empty","substring","concat","sortChatsByLatestMessage","Chats","sortedChats","sortFunction","emptyChats","element","notEmpty","sortChats","DateHr","data-content","Message","isOwner","Messages","textInput","handleMessageSend","handleChange","messagesEndRef","scrollIntoView","behavior","ref","Direct","dialog","msgs","ws","WebSocket","App","setTextInput","userInfo","send","room","userId","onmessage","evt","rooms","messageInfo","onclose","exact","path","render","createStore","compose","applyMiddleware","thunk","app","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0ca8b64b.chunk.js","sourcesContent":["import {\n  AUTH_USER,\n  UPDATE_PROFILE_PICTURE,\n  UPDATE_PROFILE_INFO,\n  SET_UUID,\n} from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  id: null,\n  bio: null,\n  username: null,\n  based_in: null,\n  email: null,\n  fullname: null,\n  number_of_posts: null,\n  occupation: null,\n  phone_number: null,\n  picture: null,\n  ready: false,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_USER:\n      return {\n        ...state,\n        isAuthenticated: true,\n        id: action.payload.id,\n        bio: action.payload.bio,\n        username: action.payload.username,\n        based_in: action.payload.based_in,\n        email: action.payload.email,\n        fullname: action.payload.fullname,\n        number_of_posts: action.payload.number_of_posts,\n        occupation: action.payload.occupation,\n        phone_number: action.payload.phone_number,\n        picture: action.payload.picture,\n        ready: true,\n      };\n    case UPDATE_PROFILE_PICTURE: {\n      return {\n        ...state,\n        picture: action.payload.picture,\n        ready: true,\n      };\n    }\n    case UPDATE_PROFILE_INFO: {\n      return {\n        ...state,\n        username: action.payload.username,\n        based_in: action.payload.based_in,\n        email: action.payload.email,\n        fullname: action.payload.fullname,\n        occupation: action.payload.occupation,\n        phone_number: action.payload.phone_number,\n        ready: true,\n      };\n    }\n\n    case SET_UUID: {\n      return { ...state, uuid: action.payload.uuid };\n    }\n\n    default: {\n      return { ...state, ready: true };\n    }\n  }\n};\n\nexport default userReducer;\n","export const AUTH_USER = 'AUTH_USER';\nexport const NOT_AUTH_USER = 'NOT_AUTH_USER';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const UPDATE_PROFILE_PICTURE = 'UPDATE_PROFILE_PICTURE';\nexport const UPDATE_PROFILE_INFO = 'UPDATE_PROFILE_INFO';\nexport const SET_POSTS = 'SET_POSTS';\nexport const ADD_POST = 'ADD_POST';\nexport const LOAD_MORE_POSTS = 'LOAD_MORE_POSTS';\nexport const SET_LIKES = 'SET_LIKES';\nexport const LOAD_MORE_LIKES = 'LOAD_MORE_LIKES';\nexport const ON_LIKE = 'ON_LIKE';\nexport const INCREMENT_NUMBER_OF_LIKES = 'INCREMENT_NUMBER_OF_LIKES';\nexport const DECREMENT_NUMBER_OF_LIKES = 'DECREMENT_NUMBER_OF_LIKES';\nexport const CREATE_LIKES_ON_ADD_POST = 'CREATE_LIKES_ON_ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const EDIT_POST = 'EDIT_POST';\nexport const SET_FOLLOWING = 'SET_FOLLOWING';\nexport const SET_FOLLOWED_BY = 'SET_FOLLOWED_BY';\nexport const SET_LOGGED_IN_FOLLOWING = 'SET_LOGGED_IN_FOLLOWING';\nexport const ADD_FOLLOW = 'ADD_FOLLOW';\nexport const DELETE_FOLLOW = 'DELETE_FOLLOW';\nexport const GET_CHATS = 'GET_CHATS';\nexport const GET_MESSAGES = 'GET_MESSAGES';\nexport const SET_UUID = 'SET_UUID';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const RESET_UNREAD_COUNTER = 'RESET_UNREAD_COUNTER';\nexport const SET_ONLINE = 'SET_ONLINE';\nexport const ADD_CHAT = 'ADD_CHAT';\nexport const UPDATE_BIO = 'UPDATE_BIO';\n","import { UPDATE_BIO } from './types';\n\nconst initialState = {\n  id: null,\n  bio: null,\n  username: null,\n  based_in: null,\n  email: null,\n  fullname: null,\n  number_of_posts: null,\n  occupation: null,\n  phone_number: null,\n  picture: null,\n  ready: false,\n};\n\nconst currentPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CURRENT_PAGE':\n      return {\n        ...state,\n        id: action.payload.id,\n        bio: action.payload.bio,\n        username: action.payload.username,\n        based_in: action.payload.based_in,\n        email: action.payload.email,\n        fullname: action.payload.fullname,\n        number_of_posts: action.payload.number_of_posts,\n        occupation: action.payload.occupation,\n        phone_number: action.payload.phone_number,\n        picture: action.payload.picture,\n        ready: true,\n      };\n\n    case UPDATE_BIO: {\n      return { ...state, bio: action.payload.newBio };\n    }\n\n    default: {\n      return { ...state, ready: true };\n    }\n  }\n};\n\nexport default currentPageReducer;\n","import {\n  SET_POSTS,\n  ADD_POST,\n  LOAD_MORE_POSTS,\n  INCREMENT_NUMBER_OF_LIKES,\n  DECREMENT_NUMBER_OF_LIKES,\n  DELETE_POST,\n  EDIT_POST,\n} from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      const { posts, user } = action.payload;\n      let final = {};\n\n      if (posts.length === 0) {\n        return { user };\n      }\n\n      posts.forEach((post) => {\n        final[post.post_id] = post;\n      });\n\n      return { ...final, user };\n\n    case ADD_POST: {\n      const { post } = action.payload;\n\n      const final = {};\n\n      final[post.post_id] = post;\n\n      return { ...state, ...final, user: state.user };\n    }\n\n    case LOAD_MORE_POSTS: {\n      const { posts } = action.payload;\n      let final = {};\n      posts.forEach((post) => {\n        final[post.post_id] = post;\n      });\n\n      return { ...state, ...final, user: state.user };\n    }\n\n    case INCREMENT_NUMBER_OF_LIKES: {\n      const { id } = action.payload;\n\n      const { number_of_likes } = state[id];\n\n      const post = state[id];\n\n      return {\n        ...state,\n        [id]: { ...post, number_of_likes: number_of_likes + 1 },\n      };\n    }\n\n    case DECREMENT_NUMBER_OF_LIKES: {\n      const { id } = action.payload;\n\n      const { number_of_likes } = state[id];\n\n      const post = state[id];\n\n      return {\n        ...state,\n        [id]: { ...post, number_of_likes: number_of_likes - 1 },\n      };\n    }\n\n    case DELETE_POST: {\n      const { id } = action.payload;\n\n      console.log({ id, state });\n\n      const final = { ...state };\n\n      delete final[id];\n\n      console.log({ final });\n\n      return final;\n    }\n\n    case EDIT_POST: {\n      const { id, newCaption } = action.payload;\n\n      const final = { ...state };\n\n      final[id].caption = newCaption;\n\n      return final;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default postReducer;\n","import {\n  SET_LIKES,\n  LOAD_MORE_LIKES,\n  ON_LIKE,\n  CREATE_LIKES_ON_ADD_POST,\n} from './types';\n\nconst initialState = {};\n\nconst likeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIKES:\n      const { likes } = action.payload;\n\n      let final = {};\n\n      if (likes.length === 0) {\n        return { loaded: true };\n      }\n\n      likes.forEach((post) => {\n        final[post.id] = post;\n      });\n\n      return final;\n\n    case LOAD_MORE_LIKES: {\n      const { likes } = action.payload;\n      let final = {};\n\n      likes.forEach((post) => {\n        final[post.id] = post;\n      });\n\n      return { ...state, ...final };\n    }\n\n    case ON_LIKE: {\n      const { user_id, id } = action.payload;\n\n      const likedUsers = state[id].data;\n\n      const final = likedUsers.filter((obj) => {\n        return obj.person_id !== action.payload.user_id;\n      });\n\n      if (likedUsers.length === final.length) {\n        final.push({\n          person_id: +user_id,\n          picture: action.payload.picture,\n          username: action.payload.username,\n        });\n        return { ...state, [id]: { id, data: final, alreadyLiked: true } };\n      } else {\n        return { ...state, [id]: { id, data: final, alreadyLiked: false } };\n      }\n    }\n\n    case CREATE_LIKES_ON_ADD_POST: {\n      const { id } = action.payload;\n\n      const newLike = {\n        id,\n        data: [],\n        alreadyLiked: false,\n      };\n\n      return { ...state, [id]: newLike };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default likeReducer;\n","import { SET_FOLLOWING } from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst followingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FOLLOWING: {\n      const { users, user } = action.payload;\n\n      return { ...state, users, user };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default followingReducer;\n","import { SET_FOLLOWED_BY, ADD_FOLLOW, DELETE_FOLLOW } from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst followedByReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FOLLOWED_BY: {\n      const { users, user } = action.payload;\n\n      return { ...state, users, user };\n    }\n\n    //need to provide parametr to distinguish where I am now, if my own page - following, else - followedBy\n\n    case ADD_FOLLOW: {\n      const { myPage } = action.payload;\n\n      const { id, picture, username } = action.payload.producer;\n\n      let { users } = state;\n      users.push({ person_id: id, picture, username });\n\n      console.log({myPage})\n\n      return { ...state, users };\n    }\n\n    case DELETE_FOLLOW: {\n      const { myPage } = action.payload;\n\n      const { id } = action.payload.producer;\n      let { users } = state;\n\n      console.log({myPage})\n\n      users = users.filter((user) => user.person_id !== id);\n\n      return { ...state, users };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default followedByReducer;\n","import { SET_LOGGED_IN_FOLLOWING, ADD_FOLLOW, DELETE_FOLLOW } from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst loggedInFollows = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGGED_IN_FOLLOWING: {\n      const { users, user } = action.payload;\n\n      return { ...state, users, user };\n    }\n\n    case ADD_FOLLOW: {\n      const { id, picture, username } = action.payload.consumer;\n      const { myPage } = action.payload;\n\n      if (myPage) return state;\n\n      let { users } = state;\n      users.push({ person_id: id, picture, username });\n\n      return { ...state, users };\n    }\n\n    case DELETE_FOLLOW: {\n      const { id } = action.payload.consumer;\n      const { myPage } = action.payload;\n\n      let { users } = state;\n      users = users.filter((user) => user.person_id !== id);\n\n      return { ...state, users };\n    }\n    default: {\n      return { ...state, ready: true };\n    }\n  }\n};\n\nexport default loggedInFollows;\n","export const deleteProperties = (obj, props) => {\n  props.map((prop) => delete obj[prop]);\n  return obj;\n};\n\nexport const deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\nexport const adjustToTable = (obj) =>\n  Object.keys(obj).map((field, i) => ({ field, value: obj[field] }));\n\nexport const sleep = (msec) =>\n  new Promise((resolve) => {\n    setTimeout(resolve, msec);\n  });\n\nexport const arrToObj = (arr, prop = 'post_id') => {\n  let final = {};\n  if (!arr) return {};\n  arr.forEach((post) => {\n    final[post[prop]] = post;\n  });\n\n  return final;\n};\n\nexport const getTotalUnread = (chats) => {\n  return chats.reduce((prev, cur) => {\n    return cur.unread + prev;\n  }, 0);\n};\n","import {\n  GET_CHATS,\n  ADD_MESSAGE,\n  RESET_UNREAD_COUNTER,\n  SET_ONLINE,\n  ADD_CHAT,\n} from './types';\nimport { arrToObj } from '../helpers/index';\nconst initialState = {};\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CHATS: {\n      const { chats, messages, me } = action.payload;\n\n      const transformed = arrToObj(chats, 'room_id');\n\n      const addNumOfUnread = (messages) => {\n        let final = { ...transformed };\n\n        for (const chatObj in final) {\n          final[chatObj] = { ...final[chatObj], unread: 0 };\n        }\n\n        if (!messages.length) return { ...state, ...final };\n\n        messages\n          .filter((message) => +message.sender_id !== +me)\n          .filter((message) => !message.is_read)\n          .map((message) => {\n            if (Object.keys(final).includes(message.room_id.toString())) {\n              final[message.room_id].unread++;\n            }\n          });\n\n        return final;\n      };\n\n      const patched = addNumOfUnread(messages);\n\n      return { ...state, ...patched };\n    }\n\n    case ADD_MESSAGE: {\n      const { info, me } = action.payload;\n\n      const temp = JSON.parse(JSON.stringify(state));\n      temp[info.roomId].latestMessage = {\n        message_id: info.messageId,\n        room_id: info.roomId,\n        sender_id: info.senderId,\n        context: info.context,\n        send_at: info.date,\n        is_read: true,\n      };\n\n      if (+me.id !== +info.senderId) {\n        temp[info.roomId].unread += 1;\n      }\n\n      return { ...state, ...temp };\n    }\n\n    case ADD_CHAT: {\n      const { chat } = action.payload;\n\n      const transformed = arrToObj([chat], 'room_id');\n\n      return { ...state, ...transformed };\n    }\n\n    case RESET_UNREAD_COUNTER: {\n      const { chatId } = action.payload;\n\n      const reseted = JSON.parse(JSON.stringify(state));\n\n      reseted[chatId].unread = 0;\n\n      return { ...state, ...reseted };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default chatReducer;\n","export const adjustTime = (date) => {\n  if (!date) return null;\n\n  const withoutTimeZone = date\n    .split('T')[1]\n    .split('.')[0]\n    .split(':')\n    .slice(0, 2);\n\n  const myTime = withoutTimeZone.map((num, i) => {\n    if (i === 0) {\n      return (Number(num) + 6).toString();\n    }\n    return num;\n  });\n\n  return myTime.join(':');\n};\n\nexport const prepareText = (str) => {\n  if (!str) return 'No messages yet';\n\n  if (str.length > 34) {\n    return str.toString().substring(0, 36).concat('...');\n  } else {\n    return str;\n  }\n};\n\nexport const addTimeSeparator = (messages) => {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const reduced = messages.reduce((prev, current) => {\n    const currentMessageDate = {};\n    const previousMessageDate = {};\n\n    currentMessageDate.day = new Date(current.date).getDate();\n    currentMessageDate.month = new Date(current.date).getMonth();\n    currentMessageDate.year = new Date(current.date).getFullYear();\n\n    const previousMessage = prev[prev.length - 1];\n\n    if (prev.length === 0)\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          }`,\n        },\n        current,\n      ];\n\n    previousMessageDate.day = new Date(previousMessage.date).getDate();\n    previousMessageDate.month = new Date(previousMessage.date).getMonth();\n    previousMessageDate.year = new Date(previousMessage.date).getFullYear();\n\n    if (previousMessageDate.day !== currentMessageDate.day) {\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          room_id: current.room_id,\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          }`,\n        },\n        current,\n      ];\n    }\n\n    if (previousMessageDate.month !== currentMessageDate.month) {\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          }`,\n        },\n        current,\n      ];\n    }\n\n    if (previousMessageDate.year !== currentMessageDate.year) {\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          } ${currentMessageDate.year}`,\n        },\n        current,\n      ];\n    }\n\n    return [...prev, current];\n  }, []);\n\n  return reduced;\n};\n","import { GET_MESSAGES, ADD_MESSAGE, ADD_CHAT } from './types';\nimport { arrToObj } from '../helpers/index';\nimport { adjustTime, addTimeSeparator } from '../helpers/msg';\n\nconst initialState = {};\n\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MESSAGES: {\n      const { messages, chats } = action.payload;\n\n      const adjustedMessages = messages\n        .sort((a, b) => a.message_id - b.message_id)\n        .map((message) => ({\n          message_id: message.message_id,\n          room_id: message.room_id,\n          from: message.sender_id,\n          text: message.context,\n          date: message.send_at,\n        }));\n\n      const final = chats.map((chat) => {\n        const currentChat = adjustedMessages.filter(\n          (message) => +message.room_id === +chat.room_id\n        );\n\n        return {\n          room_id: +chat.room_id,\n          username: chat.username,\n          picture: chat.picture,\n          messages: currentChat,\n        };\n      });\n\n      let withSeparators = final.map((chat) => {\n        chat.messages = addTimeSeparator(chat.messages);\n        return chat;\n      });\n\n      withSeparators = withSeparators.map((chat) => {\n        chat.messages = chat.messages.map((message) => {\n          if (!message.type) return { ...message, date: adjustTime(message.date) };\n          return message;\n        });\n        return chat;\n      });\n\n      const obj = arrToObj(withSeparators, 'room_id');\n      return { ...state, ...obj };\n    }\n\n    case ADD_MESSAGE: {\n      const { info } = action.payload;\n\n      const temp = { ...state };\n\n      temp[info.roomId].messages.push({\n        message_id: info.messageId,\n        room_id: info.roomId,\n        from: info.senderId,\n        text: info.context,\n        date: info.date,\n      });\n\n      return { ...state, ...temp };\n    }\n\n    case ADD_CHAT: {\n      const { chat } = action.payload;\n\n      const { latestMessage, unread, person_id, ...messages } = chat;\n\n      messages.messages = [];\n\n      const transformed = arrToObj([messages], 'room_id');\n\n      return { ...state, ...transformed };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default messagesReducer;\n","import { SET_ONLINE } from './types';\nconst initialState = { ids: [] };\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ONLINE: {\n      const { onlineIds } = action.payload;\n      console.log({ onlineIds });\n      return { ...state, ids: onlineIds };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default chatReducer;\n","import { combineReducers } from 'redux';\n\nimport loggedInUserReducer from './userReducer';\nimport currentPageReducer from './currentPageReducer';\nimport postReducer from './postReducer';\nimport likeReducer from './likeReducer';\nimport followingReducer from './followingReducer';\nimport followedByReducer from './followedByReducer';\nimport loggedInFollows from './loggedInFollows';\nimport chatsReducer from './chatReducer';\nimport messagesReducer from './messagesReducer';\nimport onlineUsersReducer from './onlineUsers';\n\nconst rootReducer = combineReducers({\n  loggedInUser: loggedInUserReducer,\n  loggedInFollows: loggedInFollows,\n  currentPage: currentPageReducer,\n  posts: postReducer,\n  likes: likeReducer,\n  following: followingReducer,\n  followedBy: followedByReducer,\n  chats: chatsReducer,\n  messages: messagesReducer,\n  onlineUsers: onlineUsersReducer,\n});\n\nexport default rootReducer;\n","import {\n  AUTH_USER,\n  NOT_AUTH_USER,\n  SET_CURRENT_PAGE,\n  UPDATE_PROFILE_PICTURE,\n  UPDATE_PROFILE_INFO,\n  SET_POSTS,\n  ADD_POST,\n  LOAD_MORE_POSTS,\n  SET_LIKES,\n  LOAD_MORE_LIKES,\n  ON_LIKE,\n  UPDATE_NUMBER_OF_LIKES,\n  INCREMENT_NUMBER_OF_LIKES,\n  DECREMENT_NUMBER_OF_LIKES,\n  CREATE_LIKES_ON_ADD_POST,\n  DELETE_POST,\n  EDIT_POST,\n  SET_FOLLOWING,\n  SET_FOLLOWED_BY,\n  SET_LOGGED_IN_FOLLOWING,\n  ADD_FOLLOW,\n  DELETE_FOLLOW,\n  GET_CHATS,\n  GET_MESSAGES,\n  SET_UUID,\n  ADD_MESSAGE,\n  RESET_UNREAD_COUNTER,\n  SET_ONLINE,\n  ADD_CHAT,\n  UPDATE_BIO,\n} from './types';\n\nexport const authUser = ({\n  id,\n  bio,\n  username,\n  based_in,\n  email,\n  fullname,\n  number_of_posts,\n  occupation,\n  phone_number,\n  picture,\n}) => ({\n  type: AUTH_USER,\n  payload: {\n    id,\n    bio,\n    username,\n    based_in,\n    email,\n    fullname,\n    number_of_posts,\n    occupation,\n    phone_number,\n    picture,\n  },\n});\n\nexport const notAuthUser = () => ({\n  type: NOT_AUTH_USER,\n});\n\nexport const setCurrentPage = ({\n  id,\n  bio,\n  username,\n  based_in,\n  email,\n  fullname,\n  number_of_posts,\n  occupation,\n  phone_number,\n  picture,\n}) => ({\n  type: SET_CURRENT_PAGE,\n  payload: {\n    id,\n    bio,\n    username,\n    based_in,\n    email,\n    fullname,\n    number_of_posts,\n    occupation,\n    phone_number,\n    picture,\n  },\n});\n\nexport const updateProfilePicture = (picture) => ({\n  type: UPDATE_PROFILE_PICTURE,\n  payload: { picture },\n});\n\nexport const updateProfileInfo = ({\n  username,\n  based_in,\n  email,\n  fullname,\n  occupation,\n  phone_number,\n}) => ({\n  type: UPDATE_PROFILE_INFO,\n  payload: { username, based_in, email, fullname, occupation, phone_number },\n});\n\nexport const setPosts = ({ posts, user }) => ({\n  type: SET_POSTS,\n  payload: { posts, user },\n});\n\nexport const addPost = ({ post }) => ({\n  type: ADD_POST,\n  payload: { post },\n});\n\nexport const loadMorePosts = ({ posts }) => ({\n  type: LOAD_MORE_POSTS,\n  payload: { posts },\n});\n\nexport const setLikes = ({ likes }) => ({\n  type: SET_LIKES,\n  payload: { likes },\n});\n\nexport const loadMoreLikes = ({ likes }) => ({\n  type: LOAD_MORE_LIKES,\n  payload: { likes },\n});\n\nexport const onLike = (info) => ({\n  type: ON_LIKE,\n  payload: info,\n});\n\nexport const incrementNumberOfLikes = (id) => ({\n  type: INCREMENT_NUMBER_OF_LIKES,\n  payload: { id },\n});\n\nexport const decrementNumberOfLikes = (id) => ({\n  type: DECREMENT_NUMBER_OF_LIKES,\n  payload: { id },\n});\n\nexport const createLikesOnAddPost = (id) => ({\n  type: CREATE_LIKES_ON_ADD_POST,\n  payload: { id },\n});\n\nexport const deletePost = (id) => ({\n  type: DELETE_POST,\n  payload: { id },\n});\n\nexport const editPost = (id, newCaption) => ({\n  type: EDIT_POST,\n  payload: { id, newCaption },\n});\n\nexport const setFollowing = ({ users, user }) => ({\n  type: SET_FOLLOWING,\n  payload: { users, user },\n});\n\nexport const setFollowedBy = ({ users, user }) => ({\n  type: SET_FOLLOWED_BY,\n  payload: { users, user },\n});\n\nexport const setLoggedInFollowing = ({ users, user }) => ({\n  type: SET_LOGGED_IN_FOLLOWING,\n  payload: { users, user },\n});\n\nexport const addFollow = ({ producer, consumer, myPage }) => ({\n  type: ADD_FOLLOW,\n  payload: { producer, consumer, myPage },\n});\n\nexport const deleteFollow = ({ producer, consumer, myPage }) => ({\n  type: DELETE_FOLLOW,\n  payload: { producer, consumer, myPage },\n});\n\nexport const getChats = ({ chats, messages, me }) => ({\n  type: GET_CHATS,\n  payload: { chats, messages, me },\n});\n\nexport const getMessages = ({ messages, chats }) => ({\n  type: GET_MESSAGES,\n  payload: { messages, chats },\n});\n\nexport const setUuid = ({ uuid }) => ({\n  type: SET_UUID,\n  payload: { uuid },\n});\n\nexport const addMessage = ({ info, me }) => ({\n  type: ADD_MESSAGE,\n  payload: { info, me },\n});\n\nexport const resetUnreadCounter = ({ chatId }) => ({\n  type: RESET_UNREAD_COUNTER,\n  payload: { chatId },\n});\n\nexport const setOnline = ({ onlineIds }) => ({\n  type: SET_ONLINE,\n  payload: { onlineIds },\n});\n\nexport const addChat = ({ chat }) => ({\n  type: ADD_CHAT,\n  payload: { chat },\n});\n\nexport const updateBio = ({ newBio }) => ({\n  type: UPDATE_BIO,\n  payload: { newBio },\n});\n","import { useState, useCallback } from 'react';\n\nconst useFetch = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const request = useCallback(async (url, params = { method: 'GET' }, signal) => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const responce = await fetch(url, params, signal);\n      // if (!responce.ok) {\n      //   setError(true);\n      //   throw new Error('Something wrong with your request');\n      // }\n      const json = await responce.json();\n\n      if (json.success) {\n        return json;\n      }\n\n      setError(json.msg);\n      return json;\n    } catch (e) {\n      setError(e);\n      console.log(e);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return { loading, error, request };\n};\n\nexport default useFetch;\n","import { useEffect, useCallback, useState } from 'react';\nimport useFetch from './useFetch';\n\nimport { useDispatch } from 'react-redux';\nimport { authUser, notAuthUser } from '../redux/actions';\n\nconst useAuth = () => {\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(true);\n\n  const { error, request } = useFetch();\n\n  const fetchUser = useCallback(async () => {\n    try {\n      const responce = await request('/api/whoami');\n\n      if (responce.success) {\n        const json = await request(`/api/user/${responce.data.username}`);\n        const { id, username } = responce.data;\n        const {\n          based_in,\n          bio,\n          email,\n          fullname,\n          number_of_posts,\n          occupation,\n          phone_number,\n          picture,\n        } = json.info;\n        dispatch(\n          authUser({\n            id,\n            bio,\n            username,\n            based_in,\n            email,\n            fullname,\n            number_of_posts,\n            occupation,\n            phone_number,\n            picture,\n          })\n        );\n      } else {\n        dispatch(notAuthUser());\n      }\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [request, dispatch]);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n\n  return { loading };\n};\n\nexport default useAuth;\n","import React from 'react';\n\nimport '../styles/loginInput.css';\nimport '../styles/input.css';\nimport '../styles/btn.css';\n\nconst LoginInput = ({ form, changeHandler, submitHandler, err }) => {\n  return (\n    <div className='containerInput'>\n      <div className='image'>\n        <h1>\n          Welcome To <span className='welcome'>Mellowgram</span>\n        </h1>\n      </div>\n      <div className='content'>\n        <h1>Login</h1>\n        <div className='form-group'>\n          <label>Username</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='username'\n            id='txt'\n            aria-describedby='helpId'\n            value={form.username}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Password</label>\n          <br />\n          <input\n            type='password'\n            className='form-control'\n            name='password'\n            id='txt'\n            value={form.password}\n            onChange={changeHandler}\n          />\n        </div>\n        <a className='fp' href='/accounts/password/reset'>\n          Forgot Password?\n        </a>\n        <br />\n        <button type='button' className='btn green' onClick={submitHandler}>\n          Login\n        </button>\n        {err && <h4 className='fp login-error'>{err}</h4>}\n        <hr />\n        <div className='login'>Or login with</div>\n        <div className='links'>\n          <div className='google'>\n            <i className='fa fa-google'>\n              <span>Google</span>\n            </i>\n          </div>\n          <div className='facebook'>\n            <i className='fa fa-facebook-f'>\n              <span>Facebook</span>\n            </i>\n          </div>\n          <div className='instagram' onClick={() => console.log('instagram')}>\n            <i className='fa fa-instagram'>\n              <span>Instagram</span>\n            </i>\n          </div>\n        </div>\n        <div className='signup'>\n          Don't have an account? &#8203;\n          <a href='/signup'>Sign up</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginInput;\n","import React, { useState } from 'react';\n\nimport '../../styles/settingsDropdown.css';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport useFetch from '../../hooks/useFetch';\n\nconst Select = ({ id, label, defaultVal, options }) => {\n  const history = useHistory();\n  const { error, request } = useFetch();\n\n  const [open, setOpen] = useState(false);\n  const [select, setSelect] = useState('');\n\n  const logoutHandler = async () => {\n    const json = await request('/api/logout');\n    history.push('/');\n    window.location.reload(true);\n  };\n\n  if (select === 'Account') {\n    if (history.location.pathname !== '/account') {\n      setSelect('');\n      history.push('/account');\n    }\n  }\n\n  if (select === 'Log Out') {\n    logoutHandler();\n  }\n\n  return (\n    <div className='fieldset'>\n      <div className='form-element a-header'>\n        <span>\n          <select id={id}>\n            {options.map((option, i) => (\n              <option\n                value={option.value}\n                key={i}\n                data-display-text={option.display}\n              >\n                {option.text}\n              </option>\n            ))}\n          </select>\n          <Dropdown\n            options={options}\n            isOpen={open}\n            toggleOpen={() => setOpen(!open)}\n            selected={defaultVal}\n            setSelected={setSelect}\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst Dropdown = ({ options, isOpen, toggleOpen, selected, setSelected }) => (\n  <div\n    className={`dropdown${isOpen ? ' open' : ''}`}\n    onClick={toggleOpen}\n    tabIndex='0'\n  >\n    <span className='current'>{selected}</span>\n    <div className='list'>\n      <ul>\n        {options.map((option, i) => (\n          <li\n            key={i}\n            className={`option${option.text === selected ? ' selected' : ''}`}\n            data-value={option.value}\n            data-display-text={option.display}\n            onClick={() => setSelected(option.text)}\n          >\n            {option.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nexport default Select;\n","import React from 'react';\n\nimport '../../styles/badge.css';\n\nconst Badge = ({ size, status, content }) => {\n  return (\n    <div>\n      <span className={`badge badge--${status} badge--${size}`}>{content}</span>\n    </div>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\n\nimport AsyncSelect from 'react-select/async';\n\nimport useFetch from '../../hooks/useFetch';\n\nconst AsyncSelectCustom = ({ handler }) => {\n  const { request } = useFetch();\n  let timeId = null;\n\n  const promiseOptions = async (inputValue) => {\n    const debounce = (timeout, callback) =>\n      new Promise((resolve) => {\n        clearTimeout(timeId);\n        timeId = setTimeout(async () => {\n          const responce = await callback();\n          resolve(responce);\n        }, timeout);\n      });\n    return await debounce(\n      500,\n      request.bind(null, `/api/findUser/${inputValue}`)\n    );\n  };\n\n  return (\n    <AsyncSelect\n      placeholder='Search...'\n      cacheOptions\n      noOptionsMessage={() => 'No such user'}\n      loadOptions={promiseOptions}\n      onChange={handler}\n    />\n  );\n};\n\nexport default AsyncSelectCustom;\n","import React, { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport equal from 'deep-equal';\n\nimport Select from './SettingsDropdown';\nimport Badge from '../Direct/Badge';\nimport AsyncSelect from './AsyncSelect';\n\nimport { getTotalUnread } from '../../helpers/index';\n\nimport '../../styles/header.css';\n\nconst categoryOptions = [\n  { text: 'Account', value: 'account', selected: false },\n  { text: 'Log Out', value: 'logout', selected: false },\n];\n\nconst Hamburger = ({ handler }) => {\n  return (\n    <div className='hamburger' onClick={handler}>\n      <span className='line'></span>\n      <span className='line'></span>\n      <span className='line'></span>\n    </div>\n  );\n};\n\nconst Header = () => {\n  const history = useHistory();\n  \n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const authorized = useSelector((state) => state.loggedInUser);\n  const chats = Object.values(useSelector((state) => state.chats));\n\n  const unreadCount = getTotalUnread(chats);\n\n  const handleHamburger = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleChange = (e) => {\n    setSelectedValue(e.value);\n  };\n\n  if (selectedValue) {\n    history.push(`/${selectedValue}`); // no return !!!\n  }\n\n  return (\n    <div>\n      <nav className='header-nav'>\n        <Hamburger handler={handleHamburger} />\n        <div className='logo'>\n          <NavLink to='/'>Mellowgram</NavLink>\n        </div>\n        <div className='HEADER__search'>\n          <ul className='nav-search'>\n            <li className='nav-item search-field'>\n              <AsyncSelect\n                handler={handleChange}\n                selectedValue={selectedValue}\n              />\n            </li>\n          </ul>\n        </div>\n        <ul className={open ? 'nav-items show' : 'nav-items'}>\n          <li className={open ? 'nav-item fade open' : 'nav-item'}>\n            <NavLink to='/about'>About us</NavLink>\n          </li>\n          <li className={open ? 'disabled' : ''}>|</li>\n          <li className={open ? 'nav-item fade open' : 'nav-item'}>\n            {authorized.isAuthenticated ? (\n              <NavLink to='/direct'>\n                <div className='Header__direct'>\n                  <i className='fa fa-paper-plane' aria-hidden='true'></i>\n                  {unreadCount ? (\n                    <Badge\n                      size='smaller'\n                      status='danger'\n                      content={getTotalUnread(chats)}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </NavLink>\n            ) : (\n              <NavLink to='/login'>Login</NavLink>\n            )}\n          </li>\n          <li className={open ? 'nav-item fade open' : 'nav-item'}>\n            {authorized.isAuthenticated ? (\n              <Select\n                id='settings'\n                label='Settings'\n                defaultVal='Settings'\n                options={categoryOptions}\n              />\n            ) : (\n              <NavLink to='/signup'>Sign up</NavLink>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nimport useFetch from '../hooks/useFetch';\n\nimport LoginInput from '../components/LoginInput';\nimport Header from '../components/Header/Header';\n\nconst Login = () => {\n  const history = useHistory();\n\n  const [form, setForm] = useState({ username: '', password: '' });\n\n  const { loading, error, request } = useFetch();\n\n  const updateStateHandler = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const submitHandler = async () => {\n    setForm({ username: '', password: '' });\n\n    const responce = await request('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(form),\n    });\n\n    if (responce.success) {\n      history.push(`/`);\n      return window.location.reload(true);\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div>\n        <LoginInput\n          err={error}\n          form={form}\n          changeHandler={updateStateHandler}\n          submitHandler={submitHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport '../styles/loginInput.css';\n\nimport '../styles/input.css';\nimport '../styles/btn.css';\n\n\nconst SignupInput = ({ err, form, changeHandler, submitHandler }) => {\n  return (\n    <div className='containerInput'>\n      <div className='image'>\n        <h1>\n          Welcome To <span className='welcome'>Mellowgram</span>\n        </h1>\n      </div>\n      <div className='content'>\n        <h3>Sign up to meet new friends.</h3>\n        <div className='login'>Login with</div>\n        <div className='links links-signup'>\n          <div className='google'>\n            <i className='fa fa-google'>\n              <span>Google</span>\n            </i>\n          </div>\n          <div className='facebook'>\n            <i className='fa fa-facebook-f'>\n              <span>Facebook</span>\n            </i>\n          </div>\n          <div className='instagram' onClick={() => console.log('instagram')}>\n            <i className='fa fa-instagram'>\n              <span>Instagram</span>\n            </i>\n          </div>\n        </div>\n        <span>OR</span>\n        <div className='form-group form-group-signup'>\n          <label>Email</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='email'\n            id='txt'\n            aria-describedby='helpId'\n            value={form.email}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Full Name</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='fullName'\n            id='txt'\n            value={form.fullName}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Username</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='username'\n            id='txt'\n            value={form.username}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Password</label>\n          <br />\n          <input\n            type='password'\n            className='form-control'\n            name='password'\n            id='txt'\n            value={form.password}\n            onChange={changeHandler}\n          />\n        </div>\n\n        <button type='button' className='btn green' onClick={submitHandler}>\n          Sign up\n        </button>\n        {err && <h4 className='fp login-error'>{err}</h4>}\n        <div className='signup signup-signup'>\n          Have an account? &#8203;\n          <a href='/login'>Log in</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupInput;\n","import React, { useState } from 'react';\nimport SignupInput from '../components/SignupInput';\nimport Header from '../components/Header/Header';\nimport { useHistory } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\n\nconst Signup = () => {\n  const history = useHistory();\n\n  const [form, setForm] = useState({\n    email: '',\n    fullName: '',\n    username: '',\n    password: '',\n  });\n\n  const { loading, error, request } = useFetch();\n\n  console.log({ form });\n  console.log({ loading, error });\n\n  const updateStateHandler = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const submitHandler = async () => {\n    setForm({ email: '', fullName: '', username: '', password: '' });\n\n    const responce = await request('/api/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(form),\n    });\n    console.log({ responce });\n\n    if (responce.success) {\n      return history.push('/login');\n    }\n\n    return\n  };\n\n  return (\n    <div>\n      <Header authorized={{isAuthenticated: false}}/>\n\n      <SignupInput\n        err={error}\n        form={form}\n        changeHandler={updateStateHandler}\n        submitHandler={submitHandler}\n      />\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport Header from '../components/Header/Header';\n\nimport '../styles/notFound.css';\n\nconst NotFound = () => {\n  return (\n    <div className='nf'>\n      <div>\n        <Header />\n      </div>\n      <div className='not-available'>\n        <h2> Sorry, this page isn't available.</h2>\n        <div className='not-available-detail'>\n          The link you followed may be broken, or the page may have been\n          removed. &#8203;\n          <a href='/'>Go back to Mellowgram.</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\n\nimport '../../styles/toast.css';\n\nconst ToastNewMsg = ({ username, picture, context }) => {\n  return (\n    <div className='toast_container'>\n      <div className='toast_title'>\n        <img src={picture} className='toast__img'></img>\n        <h3>{username}</h3>\n      </div>\n      <div className='toast_message'>\n        <p>{context}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ToastNewMsg;\n","import React from 'react';\n\nconst ExpSingle = ({ params }) => {\n  const { year, company, profession, achievements } = params;\n  return (\n    <div className='card-item' data-year={year}>\n      <div className='card-item-title'>\n        {profession} <span>{company}</span>\n      </div>\n      <div className='card-item-desc'>{achievements}</div>\n    </div>\n  );\n};\n\nexport default ExpSingle;\n","import React from 'react';\nimport ExpSingle from './ExpSingle';\n\nconst Experience = ({ experience }) => {\n  return (\n    <div className='card-timeline'>\n      {experience.map((single) => {\n        return <ExpSingle key={single.id} params={single} />;\n      })}\n    </div>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\n\nimport '../../styles/followingBar.css';\n\nimport { useHistory } from 'react-router-dom';\n\nconst UserRow = ({ picture, username }) => {\n  const history = useHistory();\n\n  const handleClickLink = () => {\n    return history.push(`${username}`);\n  };\n\n  return (\n    <div className='FOLLOWING_BAR_USER' onClick={handleClickLink}>\n      <img\n        src={picture}\n        alt='avatar'\n        className='FOLLOWING_BAR_USER_profile_picture'\n        style={{ marginTop: '0px' }}\n      />\n      <div className='FOLLOWING_BAR_USER__header'>\n        <h3 className='FOLLOWING_BAR_USER__username'>{username}</h3>\n      </div>\n    </div>\n  );\n};\n\nfunction FollowingBar({ following, followedBy }) {\n\n  return (\n    <div className='USER_INFO__followingBar'>\n      <div className='FOLLOWING_BAR_FOLLOWED_BY'>\n        <h3>followed by</h3>\n        <div className='FOLLOWED_BAR_BODY'>\n          {followedBy.users.map((user, i) => (\n            <UserRow key={i} username={user.username} picture={user.picture} />\n          ))}\n        </div>\n      </div>\n      <div className='FOLLOWING_BAR_FOLLOWING'>\n        <h3>following</h3>\n        <div className='FOLLOWING_BAR_BODY'>\n          {following.users.map((user, i) => (\n            <UserRow key={i} username={user.username} picture={user.picture} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowingBar;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\n\nimport '../../styles/picturesBar.css';\n\nfunction PicturesBar({ setSelectedImg }) {\n  const pictures = [\n    { id: 1, url: 'https://as01.epimg.net/futbol/imagenes/2019/03/14/champions/1552569020_031070_1552569560_noticia_normal.jpg' },\n    { id: 2, url: '/api/public/uploads/user_dloading.jpg' },\n    { id: 3, url: '/api/public/uploads/N6NCsEnf_6U9RvrfYNXpb.jpg' },\n    { id: 4, url: '/api/public/uploads/user_tsunamipapi.jpg' },\n    { id: 5, url: '/api/public/uploads/user_dloading.jpg' },\n    { id: 6, url: '/api/public/uploads/N6NCsEnf_6U9RvrfYNXpb.jpg' },\n    { id: 7, url: '/api/public/uploads/user_tsunamipapi.jpg' },\n    { id: 8, url: 'https://as01.epimg.net/futbol/imagenes/2019/03/14/champions/1552569020_031070_1552569560_noticia_normal.jpg' },\n  ];\n\n  return (\n    <div className='USER_INFO__picturesBar'>\n      <div className='USER_INFO_picturesBar_header'>\n        <h3 className='USER_INFO__picturesBar__title'>My pictures &#8203; </h3>\n        <div className='USER_INFO__picturesBar__add'>\n          <div className='UPLOAD_btn_upload ADD_PICTURE'>\n            <input type='file' id='UPLOAD_PROFILE_PICTURE' name='' />\n            <i className='fa fa-plus' aria-hidden='true'></i>\n          </div>\n        </div>\n      </div>\n      <div className='img-grid'>\n        {pictures &&\n          pictures.map((doc) => (\n            <motion.div\n              className='img-wrap'\n              key={doc.id}\n              layout\n              onClick={() => setSelectedImg(doc.url)}\n            >\n              <motion.img\n                src={doc.url}\n                alt='uploaded pic'\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 1 }}\n              />\n            </motion.div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PicturesBar;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\n\nimport '../../styles/picturesBar.css';\n\nconst PictureModal = ({ setSelectedImg, selectedImg }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  };\n\n  return (\n    <motion.div\n      className='backdrop'\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img\n        src={selectedImg}\n        alt='enlarged pic'\n        initial={{ y: '-100vh' }}\n        animate={{ y: 0 }}\n      />\n      <div className='modal_actions'>\n        <label>\n          <div className='update_picture'>\n            <input type='file'></input>\n            <i\n              class='fa fa-refresh delete_picture_button'\n              aria-hidden='true'\n            ></i>\n            <p>&#8203; Load new picture</p>\n          </div>\n        </label>\n        <div className='remove_picture'>\n          <i class='fa fa-trash delete_picture_button' aria-hidden='true'></i>\n          <p>&#8203; Remove picture</p>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default PictureModal;\n","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport useFetch from '../../../hooks/useFetch';\n\nimport '../../../styles/btn.css';\nimport {\n  addPost,\n  createLikesOnAddPost,\n  editPost,\n} from '../../../redux/actions';\n\nfunction PostInput({\n  id,\n  modal,\n  username,\n  fullname,\n  picture,\n  placeholder,\n  handleEdit,\n}) {\n  const dispatch = useDispatch();\n\n  const [caption, setCaption] = useState(placeholder || '');\n\n  const { request } = useFetch();\n\n  const submitHandler = async () => {\n    if (!modal) {\n      const result = await request('/api/post/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ caption }),\n      });\n\n      setCaption('');\n\n      if (result.success) {\n        dispatch(addPost({ post: result.rows }));\n        dispatch(createLikesOnAddPost(result.rows.post_id));\n      }\n    }\n\n    if (modal) {\n      const result = await request(`/api/post/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ caption }),\n      });\n\n      if (result.success) {\n        dispatch(editPost(id, caption));\n      }\n      handleEdit(null);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <div className='POST__body POSTINPUT '>\n          <div className='POST__title'>\n            <div className='POST__title__left'>\n              <img\n                src={picture}\n                alt='avatar'\n                className='POST__profile_picture'\n                style={{ marginTop: '0' }}\n              />\n              <div className='POST__header'>\n                <h3 className='POST__fullname'>{fullname}</h3>\n                <h4 className='POST__username'>@{username}</h4>\n              </div>\n            </div>\n          </div>\n          <div className='POST__context'>\n            <textarea\n              value={caption}\n              name='message'\n              autoFocus\n              id='message'\n              rows='4'\n              className='form-input'\n              onChange={(e) => setCaption(e.target.value)}\n            ></textarea>\n            <button className='green' onClick={submitHandler}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PostInput;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/rootReducer';\n\nimport './index.css';\nimport App from './App';\n\nlet store;\n\n\n\n//REDUX TOOLS should be disabled for Production\n\nif(process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer, compose(\n    applyMiddleware(thunk),\n\n  ));\n} else {\n  store = createStore(rootReducer, compose(\n    applyMiddleware(thunk),\n\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ));\n}\n\nconst app = (\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useFetch from '../../hooks/useFetch';\nimport { updateBio } from '../../redux/actions';\n\nconst EditBioInput = ({ bio, closeModal }) => {\n  const { request } = useFetch();\n  const dispatch = useDispatch();\n\n  const [newBio, setNewBio] = useState(bio || '');\n\n  const submitBio = async () => {\n    const result = await request('/api/user/bio', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ bio: newBio }),\n    });\n\n    if (result.success) {\n      console.log('Bio updated');\n      closeModal(null);\n      dispatch(updateBio({ newBio }));\n      setNewBio('');\n    }\n  };\n\n  return (\n    <div>\n      <textarea\n        value={newBio}\n        name='message'\n        autoFocus\n        id='message'\n        rows='4'\n        className='form-input'\n        onChange={(e) => setNewBio(e.target.value)}\n      ></textarea>\n      <button className='green' onClick={submitBio}>\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default EditBioInput;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\n\nimport '../../styles/modal.css';\nimport PostInput from './Post/PostInput';\nimport EditBioInput from './EditBioInput';\n\nconst EditModal = ({ handleEdit, info, isBio }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      handleEdit(null);\n    }\n  };\n\n  console.log({ info, isBio });\n\n  return (\n    <motion.div\n      className='backdrop'\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.div\n        className='LIKESMODAL_CONTENT EDIT'\n        initial={{ y: '-100vh' }}\n        animate={{ y: 0 }}\n      >\n        {isBio && <EditBioInput bio={info} closeModal={handleEdit} />}\n\n        {!isBio && (\n          <PostInput\n            id={info.id}\n            modal={true}\n            username={info.username}\n            fullname={info.fullname}\n            picture={info.picture}\n            placeholder={info.text}\n            handleEdit={handleEdit}\n          />\n        )}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default EditModal;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  setFollowedBy,\n  setFollowing,\n  deleteFollow,\n  addFollow,\n} from '../../redux/actions';\n\nimport useFetch from '../../hooks/useFetch';\n\nimport equal from 'deep-equal';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport ToastNewMsg from './ToastNewMsg';\nimport Exprerience from './Experience';\nimport FollowingBar from './FollowingBar';\nimport PicturesBar from './PicturesBar';\nimport PictureModal from './PictureModal';\nimport EditModal from './EditModal';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../styles/user.css';\nimport '../../styles/btn.css';\n\nconst UserInfo = ({ startMessagingHandler, setOpenDialog }) => {\n  const history = useHistory();\n\n  const { request } = useFetch();\n  const dispatch = useDispatch();\n\n  const loggedInUser = useSelector((state) => state.loggedInUser);\n  const followingLoggedIn = useSelector((state) => state.loggedInFollows);\n  const following = useSelector((state) => state.following);\n  const followedBy = useSelector((state) => state.followedBy);\n\n  const [newMsg, setNewMsg] = useState({});\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [followingThisUser, setFollowingThisUser] = useState(false);\n  const [editBioModal, setEditBioModal] = useState(false);\n\n  const showNotify = useRef(false);\n  let same = useRef(true);\n\n  let btnClassName = 'green';\n\n  const info = useSelector(\n    (state) => state.currentPage,\n    (prev, curr) => {\n      same.current = equal(prev, curr);\n      return equal(prev, curr);\n    }\n  );\n\n  const isAlreadyFollowed = (id) => {\n    const { users } = followingLoggedIn;\n    const ids = users.map((userObj) => userObj.person_id);\n    return setFollowingThisUser(ids.includes(id));\n  };\n\n  useEffect(() => {\n    if (followingLoggedIn.user) {\n      isAlreadyFollowed(info.id);\n    }\n  }, [followingLoggedIn]);\n\n  const fetchFollowers = useCallback(\n    async (info, signal) => {\n      const responce = await request(\n        `/api/follow/followers/${info.username}`,\n        {},\n        signal\n      );\n      if (responce.success) {\n        dispatch(setFollowedBy({ users: responce.data, user: info.username }));\n      }\n    },\n    [dispatch, setFollowedBy, request]\n  );\n\n  const fetchFollowing = useCallback(\n    async (info, signal) => {\n      const responce = await request(\n        `/api/follow/following/${info.username}`,\n        {},\n        signal\n      );\n      if (responce.success) {\n        dispatch(setFollowing({ users: responce.data, user: info.username }));\n      }\n    },\n    [request, dispatch, setFollowing]\n  );\n\n  const followHandler = async () => {\n    if (followingThisUser) {\n      const responce = await request(`/api/follow/${info.id}`, {\n        method: 'DELETE',\n      });\n      if (responce.success) {\n        dispatch(\n          deleteFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: {\n              id: info.id,\n              picture: info.picture,\n              username: info.username,\n            },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowing((prev) => !prev);\n      }\n    } else {\n      const responce = await request(`/api/follow/${info.id}`, {\n        method: 'POST',\n      });\n      if (responce.success) {\n        dispatch(\n          addFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: {\n              id: info.id,\n              picture: info.picture,\n              username: info.username,\n            },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowingThisUser((prev) => !prev);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (info.id && !same.current) {\n      fetchFollowers(info, signal);\n      fetchFollowing(info, signal);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [info.id]);\n\n  const experience = [\n    {\n      id: 1,\n      year: 2021,\n      company: 'Spotify',\n      profession: 'JS Developer',\n      achievements: 'Developed new versions',\n    },\n    {\n      id: 2,\n      year: 2022,\n      company: 'Spotify',\n      profession: 'JS Developer',\n      achievements: 'New products',\n    },\n    {\n      id: 3,\n      year: 2023,\n      company: 'Spotify',\n      profession: 'JS Developer',\n      achievements: 'New app',\n    },\n  ];\n\n  const [btnAbout, setBtnAbout] = useState('is-active');\n  const [btnExprerience, setBtnExprerience] = useState('');\n  const [btnContact, setBtnContact] = useState('');\n  const [cardClasses, setCardClasses] = useState('card');\n  const [sectionAbout, setSectionAbout] = useState('card-section is-active');\n  const [sectionExperience, setSectionExperience] = useState('card-section');\n  const [sectionContact, setSectionContact] = useState('card-section');\n  const [dataState, setDataState] = useState('#about');\n\n  const handleButtonClick = (e) => {\n    const targetSection = e.target.getAttribute('data-section');\n    if (targetSection !== '#about') {\n      setCardClasses((prev) => (prev += ' is-active'));\n    } else {\n      setCardClasses((prev) => {\n        return prev.replace(/is-active/g, ' ');\n      });\n    }\n    setDataState(targetSection);\n    setSectionAbout('card-section');\n    setSectionContact('card-section');\n    setSectionExperience('card-section');\n    setBtnAbout('');\n    setBtnExprerience('');\n    setBtnContact('');\n    if (targetSection === '#experience') {\n      setSectionExperience((prev) => (prev += ' is-active'));\n      setBtnExprerience('is-active');\n    } else if (targetSection === '#about') {\n      setSectionAbout((prev) => (prev += ' is-active'));\n      setBtnAbout('is-active');\n    } else {\n      setSectionContact((prev) => (prev += ' is-active'));\n      setBtnContact('is-active');\n    }\n  };\n\n  const handleEditClick = () => {\n    setEditBioModal(true);\n  };\n\n  const notifyNewMessage = (msgInfo) => {\n    showNotify.current = true;\n    toast.dark(\n      <ToastNewMsg\n        username={msgInfo.username}\n        context={msgInfo.context}\n        picture={msgInfo.picture}\n      />,\n      {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        onClick: () => history.push('/direct'),\n      }\n    );\n    setOpenDialog(msgInfo.chatId);\n  };\n\n  if (followingThisUser) btnClassName += ' LIKESMODAL_BTN_followed';\n\n  if (!info) return <div></div>;\n\n  if (\n    !followedBy.user ||\n    followedBy.user !== info.username ||\n    !following.user ||\n    following.user !== info.username\n  )\n    return <div></div>;\n\n  console.log({ info });\n\n  return (\n    <div className='USER_INFO__container'>\n      <FollowingBar followedBy={followedBy} following={following} />\n      {Object.keys(newMsg).length && !showNotify.current\n        ? notifyNewMessage(newMsg)\n        : null}\n      <ToastContainer\n        position='top-center'\n        autoClose={5000}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n      />\n      <div className='USER_INFO_CENTER'>\n        {loggedInUser.id !== info.id && (\n          <div className='USER_INFO_CENTER_TOP'>\n            <button className={btnClassName} onClick={followHandler}>\n              {followingThisUser ? 'Following' : 'Follow'}\n            </button>\n            <button\n              className='green USER_INFO_MESSAGE'\n              onClick={() => {\n                startMessagingHandler({ me: loggedInUser, other: info });\n                history.push('/direct');\n              }}\n            >\n              Message\n            </button>\n          </div>\n        )}\n        <div className={cardClasses} data-state={dataState}>\n          <div className='card-header'>\n            <div className='card-cover'></div>\n            <img className='card-avatar' src={info.picture} alt='avatar' />\n            <h1 className='card-fullname'>{info.fullname}</h1>\n            <h2 className='card-jobtitle'>{info.occupation}</h2>\n          </div>\n          <div className='card-main'>\n            <div className={sectionAbout} id='about'>\n              <div className='card-content'>\n                <div className='card-subtitle'>\n                  <p>ABOUT</p>\n                  {loggedInUser.id === info.id && (\n                    <i className='fa fa-edit' onClick={handleEditClick}></i>\n                  )}\n                </div>\n                <p className='card-desc'>\n                  {info.bio || \"The user hasn't provided bio information\"}\n                </p>\n              </div>\n              <div className='card-social'>\n                <a href='#'>\n                  <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M15.997 3.985h2.191V.169C17.81.117 16.51 0 14.996 0c-3.159 0-5.323 1.987-5.323 5.639V9H6.187v4.266h3.486V24h4.274V13.267h3.345l.531-4.266h-3.877V6.062c.001-1.233.333-2.077 2.051-2.077z' />\n                  </svg>\n                </a>\n                <a href='#'>\n                  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'>\n                    <path d='M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z' />\n                  </svg>\n                </a>\n                <a href='#'>\n                  <svg viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M301 256c0 24.852-20.148 45-45 45s-45-20.148-45-45 20.148-45 45-45 45 20.148 45 45zm0 0' />\n                    <path d='M332 120H180c-33.086 0-60 26.914-60 60v152c0 33.086 26.914 60 60 60h152c33.086 0 60-26.914 60-60V180c0-33.086-26.914-60-60-60zm-76 211c-41.355 0-75-33.645-75-75s33.645-75 75-75 75 33.645 75 75-33.645 75-75 75zm86-146c-8.285 0-15-6.715-15-15s6.715-15 15-15 15 6.715 15 15-6.715 15-15 15zm0 0' />\n                    <path d='M377 0H135C60.562 0 0 60.563 0 135v242c0 74.438 60.563 135 135 135h242c74.438 0 135-60.563 135-135V135C512 60.562 451.437 0 377 0zm45 332c0 49.625-40.375 90-90 90H180c-49.625 0-90-40.375-90-90V180c0-49.625 40.375-90 90-90h152c49.625 0 90 40.375 90 90zm0 0' />\n                  </svg>\n                </a>\n                <a href='#'>\n                  <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M23.994 24v-.001H24v-8.802c0-4.306-.927-7.623-5.961-7.623-2.42 0-4.044 1.328-4.707 2.587h-.07V7.976H8.489v16.023h4.97v-7.934c0-2.089.396-4.109 2.983-4.109 2.549 0 2.587 2.384 2.587 4.243V24zM.396 7.977h4.976V24H.396zM2.882 0C1.291 0 0 1.291 0 2.882s1.291 2.909 2.882 2.909 2.882-1.318 2.882-2.909A2.884 2.884 0 002.882 0z' />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className={sectionExperience} id='experience'>\n              <div className='card-content'>\n                <div className='card-subtitle'>WORK EXPERIENCE</div>\n\n                <Exprerience experience={experience} />\n              </div>\n            </div>\n            <div className={sectionContact} id='contact'>\n              <div className='card-content'>\n                <div className='card-subtitle'>CONTACT</div>\n                <div className='card-contact-wrapper'>\n                  <div className='card-contact'>\n                    <svg\n                      xmlns='http://www.w3.org/2000/svg'\n                      viewBox='0 0 24 24'\n                      fill='none'\n                      stroke='currentColor'\n                      strokeWidth='2'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    >\n                      <path d='M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z' />\n                      <circle cx='12' cy='10' r='3' />\n                    </svg>\n                    {info.based_in || 'Not provided'}\n                  </div>\n                  <div className='card-contact card-contact-center'>\n                    <svg\n                      className='svg-middle'\n                      xmlns='http://www.w3.org/2000/svg'\n                      viewBox='0 0 24 24'\n                      fill='none'\n                      stroke='currentColor'\n                      strokeWidth='2'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    >\n                      <path d='M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z' />\n                    </svg>\n                    {info.phone_number || 'Not provided'}\n                  </div>\n                  <div className='card-contact'>\n                    <svg\n                      xmlns='http://www.w3.org/2000/svg'\n                      viewBox='0 0 24 24'\n                      fill='none'\n                      stroke='currentColor'\n                      strokeWidth='2'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    >\n                      <path d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z' />\n                      <path d='M22 6l-10 7L2 6' />\n                    </svg>\n                    {info.email}\n                  </div>\n                  <button className='green'>WORK</button>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className='card-buttons'>\n              <button\n                data-section='#about'\n                className={btnAbout}\n                onClick={handleButtonClick}\n              >\n                ABOUT\n              </button>\n              <button\n                className={btnExprerience}\n                data-section='#experience'\n                onClick={handleButtonClick}\n              >\n                EXPERIENCE\n              </button>\n              <button\n                className={btnContact}\n                data-section='#contact'\n                onClick={handleButtonClick}\n              >\n                CONTACT\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <PicturesBar setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <PictureModal\n          selectedImg={selectedImg}\n          setSelectedImg={setSelectedImg}\n        />\n      )}\n      {editBioModal && (\n        <EditModal handleEdit={setEditBioModal} info={info.bio} isBio={true} />\n      )}\n    </div>\n  );\n};\n\nexport default UserInfo;\n","import React, { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport equal from 'deep-equal';\nimport useFetch from './../../hooks/useFetch';\nimport { deleteFollow, addFollow } from '../../redux/actions';\nimport '../../styles/modal.css';\n\nconst FollowRow = ({ id, username, picture, alreadyFollowed }) => {\n  const { request } = useFetch();\n  const history = useHistory();\n\n  const [following, setFollowing] = useState(alreadyFollowed);\n\n  const loggedInUser = useSelector(\n    (state) => state.loggedInUser,\n    (prev, curr) => equal(prev, curr)\n  );\n\n  const info = useSelector(\n    (state) => state.currentPage,\n    (prev, curr) => {\n      return equal(prev, curr);\n    }\n  );\n\n  const dispatch = useDispatch();\n\n  const followHandler = async () => {\n    console.log({ following, id });\n    if (following) {\n      const responce = await request(`/api/follow/${id}`, { method: 'DELETE' });\n      if (responce.success) {\n        dispatch(\n          deleteFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: { id, picture, username },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowing((prev) => !prev);\n      }\n    } else {\n      const responce = await request(`/api/follow/${id}`, { method: 'POST' });\n      if (responce.success) {\n        dispatch(\n          addFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: { id, picture, username },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowing((prev) => !prev);\n      }\n    }\n  };\n\n  let btnClassName = 'green';\n\n  if (following) btnClassName += ' LIKESMODAL_BTN_followed';\n\n  return (\n    <div className='LIKESMODAL_ROW'>\n      <div className='LIKESMODAL__title'>\n        {/* <NavLink to={`/${username}`}> */}\n        <div\n          className='LIKESMODAL__title__left'\n          onClick={() => {\n            history.push(`/${username}`);\n          }}\n        >\n          <img\n            src={picture}\n            alt='avatar'\n            className='LIKESMODAL__profile_picture'\n            style={{ marginTop: '0px' }}\n          />\n          <div className='LIKESMODAL__header'>\n            <h3 className='LIKESMODAL__fullname'>{username}</h3>\n          </div>\n        </div>\n        {id !== loggedInUser.id && (\n          <div className='LIKESMODAL__title__right'>\n            <button className={btnClassName} onClick={followHandler}>\n              {following ? 'Following' : 'Follow'}\n            </button>\n          </div>\n        )}\n        {/* </NavLink> */}\n      </div>\n    </div>\n  );\n};\n\nexport default FollowRow;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { motion } from 'framer-motion';\n\nimport FollowRow from './FollowRow';\n\nimport '../../styles/modal.css';\n\nconst LikesModal = ({ setSelectedImg, likes }) => {\n  const following = useSelector((state) => state.loggedInFollows);\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  };\n\n  const isAlreadyFollowed = (id) => {\n    const { users } = following;\n    const ids = users.map((userObj) => userObj.person_id);\n    return ids.includes(id);\n  };\n\n  return (\n    <motion.div\n      className='backdrop'\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.div\n        className='LIKESMODAL_CONTENT'\n        initial={{ y: '-100vh' }}\n        animate={{ y: 0 }}\n      >\n        {likes.data &&\n          likes.data.map((user) => (\n            <FollowRow\n              key={user.person_id}\n              id={user.person_id}\n              picture={user.picture}\n              username={user.username}\n              alreadyFollowed={isAlreadyFollowed(user.person_id)}\n            />\n          ))}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default LikesModal;\n","import React, { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport useFetch from '../../../hooks/useFetch';\nimport {\n  onLike,\n  decrementNumberOfLikes,\n  incrementNumberOfLikes,\n} from '../../../redux/actions';\n\nconst Post = ({\n  id,\n  picture,\n  fullname,\n  username,\n  text,\n  numberOfLikes,\n  likes,\n  postedAt,\n  showSettings,\n  loggedInfo,\n  setSelectedLikes,\n  deletePostHandler,\n  editPostHandler,\n}) => {\n  const dispatch = useDispatch();\n\n  const { request } = useFetch();\n\n  const [liked, setLiked] = useState(likes?.alreadyLiked);\n  let likeButtonClasses = liked ? 'fa fa-heart liked' : 'fa fa-heart';\n\n  useEffect(() => {\n    setLiked(likes?.alreadyLiked);\n  }, [likes]);\n\n  const handleLike = async () => {\n    const method = liked ? 'DELETE' : 'POST';\n\n    const res = await request(`/api/like/${id}`, {\n      method,\n    });\n\n    if (res?.success) {\n      if (liked) {\n        dispatch(decrementNumberOfLikes(id));\n      } else {\n        dispatch(incrementNumberOfLikes(id));\n      }\n      dispatch(onLike({ ...loggedInfo, id }));\n      setLiked((prev) => !prev);\n    }\n  };\n\n  if (!likes) return <div></div>;\n\n  return (\n    <div>\n      <div className='POST__body'>\n        <div className='POST__title'>\n          <div className='POST__title__left'>\n            <img src={picture} alt='avatar' className='POST__profile_picture' />\n            <div className='POST__header'>\n              <h3 className='POST__fullname'>{fullname}</h3>\n              <h4 className='POST__username'>@{username}</h4>\n            </div>\n          </div>\n          {showSettings && (\n            <div className='POST__title__right'>\n              <i\n                className='fa fa-remove'\n                aria-hidden='true'\n                style={{ color: 'red' }}\n                onClick={deletePostHandler.bind(null, id)}\n              ></i>\n              <i\n                className='fa fa-edit'\n                aria-hidden='true'\n                onClick={editPostHandler.bind(null, {\n                  id,\n                  picture,\n                  username,\n                  fullname,\n                  text,\n                })}\n              ></i>\n            </div>\n          )}\n        </div>\n        <div className='POST__context'>\n          <p>{text}</p>\n          <div className='POST__actions'>\n            <div className='POST__like_section'>\n              <div className='POST__like_button'>\n                <i\n                  className={likeButtonClasses}\n                  aria-hidden='true'\n                  onClick={handleLike}\n                ></i>\n                {liked ? <h4>&#8203; Liked</h4> : <h4>&#8203; Like &#8203;</h4>}\n              </div>\n              <h4 className='POST_number_of_likes'>{numberOfLikes} Likes </h4>\n\n              <div className='POST__liked_by'>\n                <h4>Liked by: </h4>\n                <div\n                  className='POST__liked_by_images'\n                  onClick={() => setSelectedLikes(likes)}\n                >\n                  <img\n                    src={\n                      likes.data.length\n                        ? likes.data[0].picture\n                        : '/api/public/uploads/blank.jpg'\n                    }\n                    alt='avatar'\n                  />\n                  <img\n                    src={\n                      likes.data.length > 1\n                        ? likes.data[1].picture\n                        : '/api/public/uploads/blank.jpg'\n                    }\n                    alt='avatar'\n                  />\n                  <img\n                    src={\n                      likes.data.length > 2\n                        ? likes.data[2].picture\n                        : '/api/public/uploads/blank.jpg'\n                    }\n                    alt='avatar'\n                  />\n                </div>\n              </div>\n            </div>\n            <h4 className='POST__creation_time'>{postedAt}</h4>\n          </div>\n        </div>\n      </div>\n      {/* <hr className='hr' /> */}\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport LikesModal from '../LikesModal';\n\nimport equal from 'deep-equal';\n\nimport useFetch from '../../../hooks/useFetch';\n\nimport {\n  setPosts,\n  loadMorePosts,\n  setLikes,\n  loadMoreLikes,\n  deletePost,\n} from '../../../redux/actions';\n\nimport Post from './Post';\nimport PostInput from './PostInput';\n\nimport '../../../styles/posts.css';\n\nimport { sleep } from '../../../helpers/index';\nimport EditModal from '../EditModal';\n\nconst Posts = () => {\n  let same = useRef(true);\n\n  const [hasMore, setHasMore] = useState(true);\n\n  const [selectedLikes, setSelectedLikes] = useState(null);\n\n  const [editModal, setEditModal] = useState(null);\n\n  const dispatch = useDispatch();\n  const { request } = useFetch();\n\n  const currentPage = useSelector(\n    (state) => state.currentPage,\n    (prev, curr) => {\n      same.current = equal(prev, curr);\n      return equal(prev, curr);\n    }\n  );\n  const loggedInUser = useSelector(\n    (state) => state.loggedInUser,\n    (prev, curr) => equal(prev, curr)\n  );\n  const posts = Object.values(\n    useSelector(\n      (state) => state.posts,\n      (prev, curr) => {\n        return equal(prev, curr);\n      }\n    )\n  ).sort();\n\n  const likes = useSelector(\n    (state) => state.likes,\n    (prev, curr) => {\n      return equal(prev, curr);\n    }\n  );\n\n  const deletePostHandler = async (id) => {\n    const responce = await request(`/api/post/${id}`, { method: 'DELETE' });\n\n    if (responce.success) {\n      dispatch(deletePost(id));\n    }\n  };\n\n  const editPostHandler = (info) => {\n    console.log('editing', info.id);\n    setEditModal(info);\n  };\n\n  const [isParsed, setIsParsed] = useState(false);\n\n  const offset = useRef(0);\n\n  const loadLikes = useCallback(async (arrOfPosts) => {\n    const ids = arrOfPosts.map((post) => post.post_id);\n    const requests = ids.map((id) => request(`/api/like/${id}`));\n    const res = await Promise.all(requests);\n    return res;\n  }, []);\n\n  const loadPosts = useCallback(\n    async (signal) => {\n      if (currentPage.id && !isParsed) {\n        const res = await request(\n          `/api/post/${currentPage.username}?limit=5&offset=0`,\n          {},\n          signal\n        );\n        if (res.success) {\n          setIsParsed(true);\n          dispatch(setPosts({ posts: res.posts, user: currentPage.username }));\n          const likes = await loadLikes(res.posts);\n          dispatch(setLikes({ likes }));\n        }\n      }\n    },\n    [currentPage.id]\n  );\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (!same.current) {\n      loadPosts(signal);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [loadPosts]);\n\n  const fetchMoreData = async () => {\n    offset.current += 5;\n    const res = await request(\n      `/api/post/${currentPage.username}?limit=5&offset=${offset.current}`\n    );\n\n    const likes = await loadLikes(res.posts);\n\n    await sleep(300);\n\n    if (!res.posts.length) {\n      setHasMore(false);\n      return;\n    }\n\n    dispatch(\n      loadMorePosts({\n        posts: res.posts,\n      })\n    );\n    dispatch(loadMoreLikes({ likes }));\n  };\n\n  if (posts[0] === null && hasMore) setHasMore(false);\n  if (posts[posts.length - 1] !== currentPage.username) return <div></div>;\n  if (!Object.keys(likes).length) return <div></div>;\n\n  return (\n    <div className='POSTS__container'>\n      {currentPage.id === loggedInUser.id && (\n        <PostInput\n          picture={currentPage.picture}\n          fullname={currentPage.fullname}\n          username={currentPage.username}\n        />\n      )}\n\n      <InfiniteScroll\n        dataLength={posts.length}\n        next={fetchMoreData}\n        hasMore={hasMore}\n        loader={<h4>Loading...</h4>}\n      >\n        {posts\n          .reverse()\n          .slice(1)\n          .map((post) => {\n            return (\n              <Post\n                key={post.post_id}\n                id={post.post_id}\n                picture={currentPage.picture}\n                fullname={currentPage.fullname}\n                username={currentPage.username}\n                text={post.caption}\n                numberOfLikes={post.number_of_likes}\n                postedAt={post.created_at}\n                showSettings={currentPage.id === loggedInUser.id}\n                likes={likes[post.post_id]}\n                loggedInfo={{\n                  user_id: loggedInUser.id,\n                  username: loggedInUser.username,\n                  picture: loggedInUser.picture,\n                }}\n                setSelectedLikes={setSelectedLikes}\n                deletePostHandler={deletePostHandler}\n                editPostHandler={editPostHandler}\n              />\n            );\n          })}\n      </InfiniteScroll>\n      {selectedLikes && (\n        <LikesModal setSelectedImg={setSelectedLikes} likes={selectedLikes} />\n      )}\n\n      {editModal && <EditModal handleEdit={setEditModal} info={editModal} />}\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useEffect, useState, useCallback } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentPage } from '../redux/actions';\n\nimport useFetch from '../hooks/useFetch';\n\nimport Header from '../components/Header/Header';\nimport NotFound from './NotFound';\nimport UserInfo from '../components/User/UserInfo';\nimport Posts from '../components/User/Post/Posts';\n\nimport '../styles/user.css';\nconst User = ({\n  match,\n  startMessagingHandler,\n  setOpenDialog,\n}) => {\n  const dispatch = useDispatch();\n\n  const { username } = match.params;\n  const [userPage, setUserPage] = useState(null);\n\n  const { loading, request } = useFetch();\n\n  const parseInfo = useCallback(async () => {\n    const json = await request(`/api/user/${username}`);\n    if (json.success) {\n      const {\n        based_in,\n        bio,\n        email,\n        fullname,\n        number_of_posts,\n        occupation,\n        phone_number,\n        picture,\n      } = json.info;\n      const id = json.info.person_id;\n      dispatch(\n        setCurrentPage({\n          id,\n          bio,\n          username,\n          based_in,\n          email,\n          fullname,\n          number_of_posts,\n          occupation,\n          phone_number,\n          picture,\n        })\n      );\n    } else {\n      setUserPage(undefined);\n    }\n  }, [username, request, dispatch]);\n\n  useEffect(() => {\n    parseInfo();\n  }, [username, parseInfo]);\n\n  if (userPage === undefined) return <NotFound />;\n\n  if (loading) return <div></div>;\n\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n\n      <UserInfo\n        startMessagingHandler={startMessagingHandler}\n        setOpenDialog={setOpenDialog}\n      />\n      <Posts />\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport {\n  makeStyles,\n  withStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from '@material-ui/core';\n\nimport { adjustToTable } from '../helpers';\n\nimport '../styles/input.css';\nimport '../styles/table.css';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'iCiel Gotham',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n\nconst StyledTableCellField = withStyles((theme) => ({\n  root: {\n    border: 'none',\n    borderColor: 'black',\n  },\n  body: {\n    fontSize: 14,\n    backgroundColor: 'rgb(44, 44, 44)',\n    color: 'rgb(177, 176, 176)',\n  },\n}))(TableCell);\n\nconst StyledTableCellValue = withStyles((theme) => ({\n  root: {\n    border: 'none',\n    borderColor: 'black',\n  },\n  body: {\n    fontSize: 14,\n    backgroundColor: 'rgb(44, 44, 44)',\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    font: 'iCiel Gotham',\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n  },\n});\n\nconst SimpleTable = ({ tab, data, handler }) => {\n  const classes = useStyles();\n  const infoRows = adjustToTable(data);\n  return (\n    <ThemeProvider theme={theme}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableBody>\n            {infoRows.map((row) => (\n              <StyledTableRow key={row.field}>\n                <StyledTableCellField align='left'>\n                  {row.field}\n                </StyledTableCellField>\n                <StyledTableCellValue align='left'>\n                  {tab === 'overview' ? (\n                    row.value\n                  ) : (\n                    <input\n                      type={row.field === 'Password' ? 'password' : 'text'}\n                      id='txt'\n                      name={row.field}\n                      value={row.value}\n                      onChange={handler}\n                    />\n                  )}\n                </StyledTableCellValue>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default SimpleTable;\n","import React, { useState } from 'react';\n\nimport '../styles/uploadButton.css';\n\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport {updateProfilePicture}  from '../redux/actions'\n\n//TODO: need to handle loading photos as well\n\nconst UploadButton = () => {\n  const [newImage, setNewImage] = useState(null);\n  const [reset, setReset] = useState(false);\n  const [removed, setRemoved] = useState(false);\n\n  const {username, picture} = useSelector(state => state.loggedInUser)\n  const dispatch = useDispatch()\n  console.log({username, picture})\n\n  const deleteImage = () => {\n    setRemoved(() => true);\n  };\n\n  const resetUploaded = (e) => {\n    e.preventDefault();\n    setNewImage(null);\n  };\n\n\n  const setProfilePhoto = async (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n    fd.append('profilePhoto', newImage);\n    const method = removed ? 'DELETE' : 'POST';\n    let url = `http://localhost:3000/api/user/${username}/addPicture`;\n    if (removed) {\n      url = `http://localhost:3000/api/user/${username}/deletePicture`;\n    }\n    const response = await fetch(url, {\n      method,\n      body: fd,\n    });\n    const data = await response.json();\n    console.log(data);\n    dispatch(updateProfilePicture(data.src))\n    setNewImage(null);\n  };\n\n  const selectImage = (event) => {\n    let file = event.target.files[0];\n    setNewImage(file);\n  };\n\n  return (\n    <div>\n      <div class='UPLOAD_panel'>\n        <div class='UPLOAD_button_outer'>\n          {newImage ? (\n            <div className='newPictureBtns'>\n              <button className='green' onClick={setProfilePhoto}>\n                Submit\n              </button>\n              <button className='green red' onClick={resetUploaded}>\n                Reset\n              </button>\n            </div>\n          ) : (\n            <div class='UPLOAD_btn_upload'>\n              <input\n                type='file'\n                id='UPLOAD_PROFILE_PICTURE'\n                name=''\n                onChange={selectImage}\n              />\n              Upload New Image\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadButton;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateProfileInfo } from '../redux/actions';\nimport useFetch from '../hooks/useFetch';\n\nimport Table from './Table';\nimport UploadButton from './UploadButton';\n\nimport { deepCopy, deleteProperties } from '../helpers';\n\nimport '../styles/table.css';\nimport '../styles/btn.css';\n\nconst SettingsCard = () => {\n  const dispatch = useDispatch();\n  const { request, error } = useFetch();\n\n  const info = useSelector((state) => state.loggedInUser);\n\n  const [openTab, setOpenTab] = useState(0);\n  const [edit, setEdit] = useState({\n    username: info.username,\n    based_in: info.based_in,\n    email: info.email,\n    fullname: info.fullname,\n    occupation: info.occupation,\n    phone_number: info.phone_number,\n  });\n  const [updatedInfo, setUpdatedInfo] = useState(false);\n\n  const [passwordToDelete, setPasswordToDelete] = useState('');\n\n  const [wrongPassword, setWrongPassword] = useState(false);\n  \n  const switchTab = (index) => setOpenTab(index);\n  \n  const editHandlerOnChange = (e) => {\n    const field = e.target.name;\n    if (updatedInfo) setUpdatedInfo(false);\n    const { value } = e.target;\n    setEdit((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const deleteHadlerOnChange = (e) => {\n    setPasswordToDelete(e.target?.value);\n  };\n\n  const submitEdit = async (e) => {\n    e.preventDefault();\n    const responce = await request('/api/user/info', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(edit),\n    });\n\n    if (responce?.success) {\n      setUpdatedInfo(true);\n    }\n\n    dispatch(updateProfileInfo(edit));\n  };\n\n  const deleteHandlerOnClick = async () => {\n    const responce = await request('/api/user/delete', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ password: passwordToDelete }),\n    });\n\n    if (responce?.success) {\n      window.location.href = '/login';\n      window.location.reload(true);\n    }\n    setWrongPassword(true);\n    setPasswordToDelete('');\n  };\n\n  const copy1 = deepCopy(info);\n\n  const adjustedOverwiew = deleteProperties(copy1, [\n    'id',\n    'ready',\n    'isAuthenticated',\n    'picture',\n  ]);\n\n\n  return (\n    <div className='settings-container'>\n      <div className='left-column'>\n        <ul>\n          <li onClick={switchTab.bind(null, 0)}>\n            <i className='fa fa-user'></i>Overview\n          </li>\n          <hr class='HRsettings' />\n          <li onClick={switchTab.bind(null, 1)}>\n            <i className='fa fa-lock'></i>Edit Profile\n          </li>\n          <hr class='HRsettings' />\n          <li onClick={switchTab.bind(null, 2)}>\n            <i className='fa fa-lock'></i>Change Password\n          </li>\n          <hr class='HRsettings' />\n          <li onClick={switchTab.bind(null, 3)}>\n            <i className='fa fa-minus-circle'></i>Delete profile\n          </li>\n        </ul>\n      </div>\n      <div className='settings-tab'>\n        {openTab === 0 && (\n          <div className='settings-overview'>\n            <h1>Account overview</h1>\n            <div className='settings-overview-img'>\n              <img src={info.picture} alt='avatar'></img>\n              <UploadButton />\n            </div>\n            <div className='settings-overview-table'>\n              <Table tab='overview' data={adjustedOverwiew} />\n            </div>\n          </div>\n        )}\n        {openTab === 1 && (\n          <form className='settings-form'>\n            <div className='settings-overview'>\n              <h1>Edit profile</h1>\n              <Table tab='edit' data={edit} handler={editHandlerOnChange} />\n              <button className='btn green' onClick={submitEdit}>\n                Submit\n              </button>\n              {error && (\n                <h2 style={{ color: 'red', marginTop: '10px' }}>\n                  Error: {error}\n                </h2>\n              )}\n              {updatedInfo && (\n                <h2 style={{ color: 'green', marginTop: '10px' }}>\n                  Information updated\n                </h2>\n              )}\n            </div>\n          </form>\n        )}\n        {openTab === 2 && (\n          <form onSubmit={() => console.log('Submitted')}>\n            <h1>Change password</h1>\n            <Table\n              tab='edit'\n              data={{\n                'Old Password': '',\n                'New Password': '',\n                'Confirm new password': '',\n              }}\n            />\n            <button className='btn green'>Submit</button>\n          </form>\n        )}\n        {openTab === 3 && (\n          <form>\n            <h1>Delete your profile</h1>\n            <h2>\n              Are you sure you want to delete your profile ?<br /> All your\n              matchs will be lost...\n            </h2>\n            <div className='input-group'>\n              <Table\n                tab='edit'\n                data={{\n                  Password: passwordToDelete,\n                }}\n                handler={deleteHadlerOnChange}\n              />\n              <button\n                type='button'\n                className='green'\n                onClick={deleteHandlerOnClick}\n              >\n                Submit\n              </button>\n              {wrongPassword && (\n                <h2 style={{ color: 'red', marginTop: '10px' }}>\n                  Wrong password\n                </h2>\n              )}\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsCard;\n","import React from 'react';\nimport '../styles/account.css';\n\nimport SettingsCard from '../components/SettingsCard';\nimport Header from '../components/Header/Header';\n\nconst Settings = () => {\n  return (\n    <div>\n      <Header />\n      <SettingsCard />\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport Header from '../components/Header/Header';\n\nconst About = () => {\n  return (\n    <div>\n      <Header />\n      About page\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport Badge from './Badge';\n\nimport '../../styles/direct.css';\n\nimport { prepareText, adjustTime } from '../../helpers/msg';\n\nconst ChatRow = ({\n  chat_id,\n  person_id,\n  name,\n  picture,\n  latestMessage,\n  unreadMessagesCount,\n  openDialog,\n  handleChatClick,\n  empty,\n}) => {\n  const loggedInUser = useSelector((state) => state.loggedInUser);\n  const onlineUsers = useSelector((state) => state.onlineUsers);\n\n  const className =\n    name === openDialog\n      ? 'CHAT_ROW__container CHAT_ROW__container_active'\n      : 'CHAT_ROW__container';\n\n  if (empty)\n    return (\n      <div>\n        <p>You have no chats</p>\n      </div>\n    );\n\n  return (\n    <div>\n      <div className={className} onClick={handleChatClick.bind(null, chat_id)}>\n        <div className='CHAT_ROW__left'>\n          <img src={picture}></img>\n        </div>\n        <div className='CHAT_ROW__center'>\n          <div className='CHAT_ROW_TITLE'>\n            <h4>{name}</h4>\n            {onlineUsers.ids.includes(person_id.toString()) ? (\n              <i className='fa fa-circle CHAT_ROW_ONLINE'></i>\n            ) : (\n              ''\n            )}\n          </div>\n          <h5>\n            {loggedInUser.id === latestMessage?.sender_id && 'You: '}\n            {prepareText(latestMessage?.context)}\n          </h5>\n        </div>\n        <div className='CHAT_ROW__right'>\n          <p>\n            {latestMessage?.send_at === 'now'\n              ? 'now'\n              : adjustTime(latestMessage?.send_at)}\n          </p>\n          {unreadMessagesCount ? (\n            <Badge\n              size='smaller'\n              status='danger'\n              content={unreadMessagesCount}\n            />\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n      <hr className='hr_chat'></hr>\n    </div>\n  );\n};\n\nexport default ChatRow;\n","export const sortChatsByLatestMessage = (a, b) => {\n  const compare = a.latestMessage?.send_at < b.latestMessage?.send_at ? 1 : -1;\n  return compare;\n};\n\nexport const sortChats = (chats, sortFunction) => {\n  const emptyChats = chats.filter((element) => !element.latestMessage);\n  const notEmpty = chats.filter((element) => element.latestMessage);\n  notEmpty.sort(sortFunction);\n  return [...notEmpty, ...emptyChats];\n};\n","import React from 'react';\n\nimport ChatRow from './ChatRow';\n\nimport { sortChats, sortChatsByLatestMessage } from '../../helpers/sorting';\n\nimport '../../styles/direct.css';\n\nconst Chats = ({ chats, openDialog, handleChatClick, empty }) => {\n  const sortedChats = sortChats(chats, sortChatsByLatestMessage);\n\n  return (\n    <div>\n      {sortedChats.map((chat) => (\n        <ChatRow\n          key={chat.id}\n          chat_id={chat.room_id}\n          name={chat.username}\n          person_id={chat.person_id}\n          picture={chat.picture}\n          latestMessage={chat.latestMessage}\n          unreadMessagesCount={chat.unread}\n          openDialog={openDialog}\n          handleChatClick={handleChatClick}\n          empty={empty}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chats;\n","import React from 'react';\n\nimport '../../styles/hrCentered.css';\n\nconst DateHr = ({ date }) => {\n  return (\n    <div>\n      <hr className='hr-centered-text' data-content={date}></hr>\n    </div>\n  );\n};\n\nexport default DateHr;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\nimport DateHr from './DateHr';\n\nconst Message = ({ type, context, isOwner, date }) => {\n  let className = 'MESSAGES__chat-msg ';\n\n  if (isOwner) className += 'MESSAGES__owner';\n\n  if (type) return <DateHr date={date} />;\n\n  return (\n    <motion.div layout className={className}>\n      <div className='MESSAGES__chat-msg-content'>\n        <div class='MESSAGES__chat-msg-text'>\n          <div className='MESSAGES__chat-msg-text-context'>{context}</div>\n          <div className='MESSAGES__chat-msg-date'>{date}</div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Message from './Message';\n\nimport '../../styles/messages.css';\n\nconst Messages = ({\n  data,\n  textInput,\n  setOpenDialog,\n  handleMessageSend,\n  handleChange,\n  empty,\n}) => {\n  const loggedInUser = useSelector((state) => state.loggedInUser);\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\n  };\n\n  useEffect(scrollToBottom, [data?.messages?.length]);\n\n  if (!data)\n    return (\n      <div className='MESSAGES__container'>\n        <div ref={messagesEndRef} />\n      </div>\n    );\n\n  return (\n    <div className='MESSAGES__container'>\n      <div className='MESSAGES__title'>\n        <i\n          className='fa fa-caret-left MESSAGES_back_button'\n          onClick={() => setOpenDialog(null)}\n        ></i>\n        <h4>{data.username}</h4>\n        <div className='MESSAGES_title_picture'>\n          <img src={data.picture}></img>\n        </div>\n      </div>\n      <div className='MESSAGES__body'>\n        {data.messages.map((msg) => (\n          <Message\n            key={msg.id}\n            type={msg.type}\n            context={msg.text}\n            isOwner={+msg.from === +loggedInUser.id}\n            date={msg.date}\n          />\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className='MESSAGES__send'>\n        <textarea\n          value={textInput}\n          onChange={handleChange}\n          name='message'\n          autoFocus\n          rows='1'\n          className='form-input MESSAGES_INPUT'\n        ></textarea>\n        <i\n          class='fa fa-paper-plane MESSAGES_SEND'\n          onClick={handleMessageSend.bind(null, data.room_id, loggedInUser.id)}\n        ></i>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Header from '../components/Header/Header';\nimport Chats from '../components/Direct/Chats';\nimport Messages from '../components/Direct/Messages';\n\nimport '../styles/direct.css';\n\nconst Direct = ({\n  textInput,\n  dialog,\n  openDialog,\n  handleChatClick,\n  handleChange,\n  handleMessageSend,\n  setOpenDialog,\n}) => {\n  const chats = Object.values(useSelector((state) => state.chats));\n  const messages = Object.values(useSelector((state) => state.messages));\n\n  useEffect(() => {\n    setOpenDialog(null);\n  }, []);\n\n  if (!chats.length || !messages.length) return <div></div>;\n\n  const notOpenSide = 'DIRECT_SIDE_NOT_ACTIVE';\n\n  return (\n    <div className='DIRECT__page'>\n      <Header />\n      <div className='DIRECT__component'>\n        <div\n          className={\n            dialog ? `DIRECT__left_side ${notOpenSide}` : 'DIRECT__left_side'\n          }\n        >\n          <Chats\n            chats={chats}\n            openDialog={openDialog}\n            handleChatClick={handleChatClick}\n            empty={chats[0] === true ? true : false}\n          />\n        </div>\n        <div\n          className={\n            dialog ? 'DIRECT__right_side' : `DIRECT__right_side ${notOpenSide}`\n          }\n        >\n          <Messages\n            data={\n              openDialog\n                ? messages.filter((msgs) => +msgs.room_id === +openDialog)[0]\n                : null\n            }\n            textInput={textInput}\n            handleMessageSend={handleMessageSend}\n            handleChange={handleChange}\n            setOpenDialog={setOpenDialog}\n            empty={messages[0] === true ? true : false}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Direct;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport equal from 'deep-equal';\n\nimport {\n  setLoggedInFollowing,\n  getChats,\n  getMessages,\n  setUuid,\n  addMessage,\n  resetUnreadCounter,\n  setOnline,\n  addChat,\n} from './redux/actions';\n\nimport useFetch from './hooks/useFetch';\nimport useAuth from './hooks/useAuth';\n\nimport Login from './pages/Login';\nimport Header from './components/Header/Header';\nimport Signup from './pages/Signup';\nimport User from './pages/User';\nimport NotFound from './pages/NotFound';\nimport Settings from './pages/Settings';\nimport About from './pages/About';\nimport Direct from './pages/Direct';\n\nimport './App.css';\n//TODO WHEN I RECEIVE A MESSAGE AND I'M INSIDE THIS CHAT, IT SHOULDN'T BE TREATED AS UNREAD\n\nconst ws = new WebSocket(`wss://mellowgram.herokuapp.com/`);\n// const ws = new WebSocket(`ws://localhost:5000`);\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const { request } = useFetch();\n  const { loading } = useAuth();\n\n  const [textInput, setTextInput] = useState('');\n  const [openDialog, setOpenDialog] = useState(null);\n\n  const userInfo = useSelector((state) => state.loggedInUser);\n  const chats = Object.values(useSelector((state) => state.chats));\n\n  const handleChange = (e) => {\n    setTextInput(e.target.value);\n  };\n\n  const handleMessageSend = (roomId, senderId) => {\n    if (textInput) {\n      ws.send(\n        JSON.stringify({\n          action: 'SEND_MESSAGE',\n          roomId,\n          senderId,\n          context: textInput,\n          uuid: userInfo.uuid,\n        })\n      );\n      dispatch(\n        addMessage({\n          info: {\n            messageId: '//Do not know yet',\n            roomId,\n            senderId,\n            context: textInput,\n            date: 'now',\n          },\n          me: userInfo,\n        })\n      );\n    }\n    setTextInput('');\n  };\n\n  const handleChatClick = (chat_id) => {\n    const room = chats.filter((chat) => chat.room_id === chat_id)[0];\n    setTextInput('');\n    setOpenDialog(chat_id);\n\n    if (room.unread) {\n      dispatch(resetUnreadCounter({ chatId: chat_id }));\n\n      ws.send(\n        JSON.stringify({\n          action: 'SET_READ',\n          chatId: chat_id,\n          userId: userInfo.id,\n        })\n      );\n    }\n  };\n\n  const startMessagingHandler = ({ me, other }) => {\n    ws.send(JSON.stringify({ action: 'START_CHAT', me, other }));\n  };\n\n  const fetchFollowing = useCallback(\n    async (info, signal) => {\n      if (info.id) {\n        const responce = await request(\n          `/api/follow/following/${userInfo.username}`,\n          {},\n          signal\n        );\n        if (responce.success) {\n          dispatch(\n            setLoggedInFollowing({\n              users: responce.data,\n              user: userInfo.username,\n            })\n          );\n        }\n      }\n    },\n    [request, userInfo.id]\n  );\n\n  useEffect(() => {\n    // ws.onopen = () => {\n    //   console.log('Connection established');\n    // };\n    ws.onmessage = (evt) => {\n      const message = JSON.parse(evt.data);\n      console.log({ message });\n      const { action } = message;\n      switch (action) {\n        case 'INFORMATION_IS_READY':\n          ws.send(JSON.stringify({ action: 'GET_CHATS', id: userInfo.id }));\n          ws.send(\n            JSON.stringify({ action: 'GET_ONLINE', user_id: userInfo.id })\n          );\n          break;\n\n        case 'GET_CHATS':\n          dispatch(\n            getChats({\n              chats: message.payload.rooms,\n              messages: message.payload.messages,\n              me: message.payload.id,\n            })\n          );\n          dispatch(\n            getMessages({\n              messages: message.payload.messages,\n              chats: message.payload.rooms,\n            })\n          );\n          dispatch(setUuid({ uuid: message.payload.uuid }));\n          break;\n\n        case 'GET_ONLINE':\n          dispatch(setOnline({ onlineIds: message.payload }));\n          break;\n\n        case 'SEND_MESSAGE':\n          const { messageInfo } = message;\n          dispatch(addMessage({ info: messageInfo, me: userInfo }));\n          break;\n\n        case 'START_CHAT': {\n          const { chat } = message;\n          dispatch(addChat({ chat }));\n          setOpenDialog(chat.room_id);\n          break;\n        }\n\n        default:\n          break;\n      }\n    };\n\n    ws.onclose = () => {\n      console.log('Connection closed');\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchFollowing(userInfo);\n  }, [fetchFollowing]);\n\n  if (loading) return <div></div>;\n\n  if (userInfo.isAuthenticated) {\n    return (\n      <Router>\n        <div className='container'>\n          <Switch>\n            <Route\n              exact\n              path='/header'\n              render={(props) => <Header {...props} />}\n            />\n            <Redirect from='/' exact to={`/${userInfo.username}`} />\n            <Redirect from='/login' exact to={`/${userInfo.username}`} />\n            <Redirect from='/signup' exact to={`/${userInfo.username}`} />\n            <Route\n              exact\n              path='/account'\n              render={(props) => <Settings {...props} />}\n            />\n            <Route\n              exact\n              path='/about'\n              render={(props) => <About {...props} />}\n            />\n            <Route\n              exact\n              path='/direct'\n              render={(props) => (\n                <Direct\n                  {...props}\n                  dialog={openDialog}\n                  textInput={textInput}\n                  openDialog={openDialog}\n                  handleChatClick={handleChatClick}\n                  handleChange={handleChange}\n                  handleMessageSend={handleMessageSend}\n                  setOpenDialog={setOpenDialog}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/:username'\n              render={(props) => (\n                <User\n                  {...props}\n                  startMessagingHandler={startMessagingHandler}\n                  setOpenDialog={setOpenDialog}\n                />\n              )}\n            />\n\n            <Route render={(props) => <NotFound {...props} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  } else {\n    return (\n      <Router>\n        <div className='container'>\n          <Switch>\n            <Redirect path='/' exact to='/login' />\n            <Route\n              exact\n              path='/signup'\n              render={(props) => <Signup {...props} />}\n            />\n            <Route\n              exact\n              path='/header'\n              render={(props) => <Header {...props} />}\n            />\n\n            <Route\n              exact\n              path='/login'\n              render={(props) => <Login {...props} />}\n            />\n            <Route\n              exact\n              path='/about'\n              render={(props) => <About {...props} />}\n            />\n            <Route\n              exact\n              path='/:username'\n              render={(props) => <User {...props} />}\n            />\n            <Route render={(props) => <NotFound {...props} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n};\n\nexport default App;\n"],"sourceRoot":""}