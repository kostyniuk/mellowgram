{"version":3,"sources":["redux/userReducer.js","redux/types.js","redux/currentPageReducer.js","redux/postReducer.js","redux/likeReducer.js","redux/followingReducer.js","redux/followedByReducer.js","redux/loggedInFollows.js","helpers/index.js","redux/chatReducer.js","helpers/msg.js","redux/messagesReducer.js","redux/onlineUsers.js","redux/rootReducer.js","redux/actions.js","hooks/useFetch.js","hooks/useAuth.js","components/LoginInput.js","components/Header/SettingsDropdown.js","components/Direct/Badge.js","components/Header/AsyncSelect.js","components/Header/Header.js","pages/Login.js","components/SignupInput.js","pages/Signup.js","pages/NotFound.js","components/User/ToastNewMsg.js","components/User/ExpSingle.js","components/User/Experience.js","components/User/FollowingBar.js","components/User/PicturesBar.js","components/User/PictureModal.js","components/User/Post/PostInput.js","index.js","components/User/EditBioInput.js","components/User/EditModal.js","components/User/FollowRow.js","components/User/LikesModal.js","components/User/InterestBar.js","components/User/UserInfo.js","components/User/Post/Post.js","components/User/Post/Posts.js","pages/User.js","components/Table.js","components/UploadButton.js","components/Settings/Overview.js","components/Settings/EditProfile.js","components/SelectInterests.js","components/Settings/EditInterests.js","components/Settings/ChangePassword.js","components/Settings/DeleteProfile.js","components/Settings/Tabs.js","components/SettingsCard.js","pages/Settings.js","pages/About.js","components/Direct/ChatRow.js","helpers/sorting.js","components/Direct/Chats.js","components/Direct/DateHr.js","components/Direct/Message.js","components/Direct/Messages.js","pages/Direct.js","App.js"],"names":["initialState","isAuthenticated","id","bio","username","based_in","email","fullname","number_of_posts","occupation","phone_number","picture","interests","ready","userReducer","state","action","type","payload","uuid","currentPageReducer","newBio","user","postReducer","posts","final","length","forEach","post","post_id","number_of_likes","console","log","newCaption","caption","likeReducer","likes","loaded","user_id","likedUsers","data","filter","obj","person_id","push","alreadyLiked","newLike","followingReducer","users","followedByReducer","myPage","producer","loggedInFollows","consumer","sleep","msec","Promise","resolve","setTimeout","arrToObj","arr","prop","getTotalUnread","chats","reduce","prev","cur","unread","chatReducer","messages","me","transformed","addNumOfUnread","chatObj","message","sender_id","is_read","map","Object","keys","includes","room_id","toString","patched","info","temp","JSON","parse","stringify","roomId","latestMessage","message_id","messageId","senderId","context","send_at","date","chat","chatId","reseted","adjustTime","split","slice","num","i","Number","join","addTimeSeparator","monthNames","current","currentMessageDate","previousMessageDate","day","Date","getDate","month","getMonth","year","getFullYear","previousMessage","messagesReducer","adjustedMessages","sort","a","b","from","text","currentChat","withSeparators","ids","onlineIds","rootReducer","combineReducers","loggedInUser","loggedInUserReducer","currentPage","following","followedBy","chatsReducer","onlineUsers","onlineUsersReducer","updateProfilePicture","incrementNumberOfLikes","decrementNumberOfLikes","createLikesOnAddPost","deletePost","editPost","setFollowing","setFollowedBy","addFollow","deleteFollow","addMessage","useFetch","useState","loading","setLoading","error","setError","request","useCallback","url","params","method","signal","fetch","responce","json","success","msg","useAuth","dispatch","useDispatch","fetchUser","resInterests","useEffect","LoginInput","form","changeHandler","submitHandler","err","className","name","aria-describedby","value","onChange","password","href","onClick","Dropdown","options","isOpen","toggleOpen","selected","setSelected","tabIndex","option","key","data-value","data-display-text","display","Select","defaultVal","label","history","useHistory","open","setOpen","select","setSelect","logoutHandler","window","location","reload","pathname","Badge","size","status","content","colourStyles","control","styles","backgroundColor","isDisabled","isFocused","isSelected","color","chroma","cursor","alpha","css","multiValue","multiValueLabel","multiValueRemove","AsyncSelectCustom","handler","timeId","promiseOptions","inputValue","debounce","timeout","callback","clearTimeout","bind","placeholder","cacheOptions","noOptionsMessage","loadOptions","categoryOptions","Hamburger","Header","selectedValue","setSelectedValue","authorized","useSelector","values","unreadCount","to","AsyncSelect","e","aria-hidden","Login","setForm","headers","body","target","SignupInput","fullName","Signup","NotFound","ToastNewMsg","src","ExpSingle","company","profession","achievements","data-year","Experience","experience","single","FollowingBar","PicturesBar","setSelectedImg","pictures","doc","div","layout","img","alt","initial","opacity","animate","transition","delay","PictureModal","selectedImg","classList","contains","y","class","PostInput","store","modal","handleEdit","setCaption","result","rows","style","marginTop","autoFocus","EditBioInput","closeModal","setNewBio","submitBio","EditModal","isBio","FollowRow","alreadyFollowed","curr","equal","followHandler","btnClassName","LikesModal","closeHandler","title","userObj","InterestBar","interest","interest_color","interest_emoji","interest_name","UserInfo","startMessagingHandler","setOpenDialog","followingLoggedIn","newMsg","followingThisUser","setFollowingThisUser","editBioModal","setEditBioModal","followModal","setFollowModal","showNotify","useRef","same","isAlreadyFollowed","fetchFollowers","fetchFollowing","fetchInterests","abortController","AbortController","abort","msgInfo","btnAbout","setBtnAbout","btnExprerience","setBtnExprerience","btnContact","setBtnContact","cardClasses","setCardClasses","sectionAbout","setSectionAbout","sectionExperience","setSectionExperience","sectionContact","setSectionContact","dataState","setDataState","handleButtonClick","targetSection","getAttribute","replace","showFollow","charAt","toUpperCase","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","newestOnTop","rtl","other","data-state","viewBox","xmlns","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","data-section","Post","numberOfLikes","postedAt","showSettings","loggedInfo","setSelectedLikes","deletePostHandler","editPostHandler","liked","setLiked","likeButtonClasses","handleLike","res","Posts","hasMore","setHasMore","selectedLikes","editModal","setEditModal","isParsed","setIsParsed","offset","loadLikes","arrOfPosts","requests","all","loadPosts","fetchMoreData","dataLength","next","loader","reverse","created_at","User","match","userPage","setUserPage","parseInfo","theme","createMuiTheme","typography","fontFamily","StyledTableCellField","withStyles","root","border","borderColor","fontSize","TableCell","StyledTableCellValue","palette","common","white","StyledTableRow","font","hover","TableRow","useStyles","makeStyles","table","minWidth","SimpleTable","tab","classes","infoRows","field","ThemeProvider","TableContainer","component","Paper","Table","aria-label","TableBody","row","align","UploadButton","newImage","setNewImage","removed","setProfilePhoto","event","preventDefault","fd","FormData","append","response","file","files","Overview","adjustedOverwiew","EditProfile","edit","editHandlerOnChange","submitEdit","updatedInfo","groupStyles","alignItems","justifyContent","padding","margin","groupBadgeStyles","borderRadius","fontWeight","lineHeight","textAlign","SelectInterests","setSelectActivities","loggedInInterests","alreadyInterests","setAlreadyInterests","setInterests","distinguishAlreadyInterests","loggedInInterestsIds","myInterest","interest_id","section","filtered","index","labels","Array","Set","interest_category","groupedOptions","optionsCurrent","defaultValue","fetched","isMulti","formatGroupLabel","classNamePrefix","EditInterests","sendNewActivities","selectedActivities","ChangePassword","onSubmit","DeleteProfile","deleteHadlerOnChange","deleteHandlerOnClick","wrongPassword","passwordToDelete","Password","Tabs","switchTab","SettingsCard","openTab","setOpenTab","setEdit","setUpdatedInfo","setPasswordToDelete","setWrongPassword","interests_ids","props","deleteProperties","Settings","About","ChatRow","str","chat_id","unreadMessagesCount","openDialog","handleChatClick","empty","substring","concat","sortChatsByLatestMessage","Chats","sortedChats","sortFunction","emptyChats","element","notEmpty","sortChats","DateHr","data-content","Message","isOwner","Messages","textInput","handleMessageSend","handleChange","messagesEndRef","scrollIntoView","behavior","ref","Direct","dialog","msgs","ws","WebSocket","App","setTextInput","userInfo","send","room","userId","onmessage","evt","rooms","messageInfo","onclose","exact","path","render","createStore","compose","applyMiddleware","thunk","app","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.507aca32.chunk.js","sourcesContent":["import {\n  AUTH_USER,\n  UPDATE_PROFILE_PICTURE,\n  UPDATE_PROFILE_INFO,\n  SET_UUID,\n} from './types';\n\nconst initialState = {\n  isAuthenticated: false,\n  id: null,\n  bio: null,\n  username: null,\n  based_in: null,\n  email: null,\n  fullname: null,\n  number_of_posts: null,\n  occupation: null,\n  phone_number: null,\n  picture: null,\n  interests: null,\n  ready: false,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_USER:\n      return {\n        ...state,\n        isAuthenticated: true,\n        id: action.payload.id,\n        bio: action.payload.bio,\n        username: action.payload.username,\n        based_in: action.payload.based_in,\n        email: action.payload.email,\n        fullname: action.payload.fullname,\n        number_of_posts: action.payload.number_of_posts,\n        occupation: action.payload.occupation,\n        phone_number: action.payload.phone_number,\n        picture: action.payload.picture,\n        interests: action.payload.interests,\n        ready: true,\n      };\n    case UPDATE_PROFILE_PICTURE: {\n      return {\n        ...state,\n        picture: action.payload.picture,\n        ready: true,\n      };\n    }\n    case UPDATE_PROFILE_INFO: {\n      return {\n        ...state,\n        username: action.payload.username,\n        based_in: action.payload.based_in,\n        email: action.payload.email,\n        fullname: action.payload.fullname,\n        occupation: action.payload.occupation,\n        phone_number: action.payload.phone_number,\n        ready: true,\n      };\n    }\n\n    case SET_UUID: {\n      return { ...state, uuid: action.payload.uuid };\n    }\n\n    default: {\n      return { ...state, ready: true };\n    }\n  }\n};\n\nexport default userReducer;\n","export const AUTH_USER = 'AUTH_USER';\nexport const NOT_AUTH_USER = 'NOT_AUTH_USER';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const UPDATE_PROFILE_PICTURE = 'UPDATE_PROFILE_PICTURE';\nexport const UPDATE_PROFILE_INFO = 'UPDATE_PROFILE_INFO';\nexport const SET_POSTS = 'SET_POSTS';\nexport const ADD_POST = 'ADD_POST';\nexport const LOAD_MORE_POSTS = 'LOAD_MORE_POSTS';\nexport const SET_LIKES = 'SET_LIKES';\nexport const LOAD_MORE_LIKES = 'LOAD_MORE_LIKES';\nexport const ON_LIKE = 'ON_LIKE';\nexport const INCREMENT_NUMBER_OF_LIKES = 'INCREMENT_NUMBER_OF_LIKES';\nexport const DECREMENT_NUMBER_OF_LIKES = 'DECREMENT_NUMBER_OF_LIKES';\nexport const CREATE_LIKES_ON_ADD_POST = 'CREATE_LIKES_ON_ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const EDIT_POST = 'EDIT_POST';\nexport const SET_FOLLOWING = 'SET_FOLLOWING';\nexport const SET_FOLLOWED_BY = 'SET_FOLLOWED_BY';\nexport const SET_LOGGED_IN_FOLLOWING = 'SET_LOGGED_IN_FOLLOWING';\nexport const ADD_FOLLOW = 'ADD_FOLLOW';\nexport const DELETE_FOLLOW = 'DELETE_FOLLOW';\nexport const GET_CHATS = 'GET_CHATS';\nexport const GET_MESSAGES = 'GET_MESSAGES';\nexport const SET_UUID = 'SET_UUID';\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const RESET_UNREAD_COUNTER = 'RESET_UNREAD_COUNTER';\nexport const SET_ONLINE = 'SET_ONLINE';\nexport const ADD_CHAT = 'ADD_CHAT';\nexport const UPDATE_BIO = 'UPDATE_BIO';\nexport const ADD_INTERESTS = 'ADD_INTERESTS'\n","import { UPDATE_BIO, ADD_INTERESTS } from './types';\n\nconst initialState = {\n  id: null,\n  bio: null,\n  username: null,\n  based_in: null,\n  email: null,\n  fullname: null,\n  number_of_posts: null,\n  occupation: null,\n  phone_number: null,\n  picture: null,\n  ready: false,\n  interests: null,\n};\n\nconst currentPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CURRENT_PAGE':\n      return {\n        ...state,\n        id: action.payload.id,\n        bio: action.payload.bio,\n        username: action.payload.username,\n        based_in: action.payload.based_in,\n        email: action.payload.email,\n        fullname: action.payload.fullname,\n        number_of_posts: action.payload.number_of_posts,\n        occupation: action.payload.occupation,\n        phone_number: action.payload.phone_number,\n        picture: action.payload.picture,\n        ready: true,\n      };\n\n    case UPDATE_BIO: {\n      return { ...state, bio: action.payload.newBio };\n    }\n\n    case ADD_INTERESTS: {\n      const { interests } = action.payload;\n\n      return { ...state, interests };\n    }\n\n    default: {\n      return { ...state, ready: true };\n    }\n  }\n};\n\nexport default currentPageReducer;\n","import {\n  SET_POSTS,\n  ADD_POST,\n  LOAD_MORE_POSTS,\n  INCREMENT_NUMBER_OF_LIKES,\n  DECREMENT_NUMBER_OF_LIKES,\n  DELETE_POST,\n  EDIT_POST,\n} from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_POSTS:\n      const { posts, user } = action.payload;\n      let final = {};\n\n      if (posts.length === 0) {\n        return { user };\n      }\n\n      posts.forEach((post) => {\n        final[post.post_id] = post;\n      });\n\n      return { ...final, user };\n\n    case ADD_POST: {\n      const { post } = action.payload;\n\n      const final = {};\n\n      final[post.post_id] = post;\n\n      return { ...state, ...final, user: state.user };\n    }\n\n    case LOAD_MORE_POSTS: {\n      const { posts } = action.payload;\n      let final = {};\n      posts.forEach((post) => {\n        final[post.post_id] = post;\n      });\n\n      return { ...state, ...final, user: state.user };\n    }\n\n    case INCREMENT_NUMBER_OF_LIKES: {\n      const { id } = action.payload;\n\n      const { number_of_likes } = state[id];\n\n      const post = state[id];\n\n      return {\n        ...state,\n        [id]: { ...post, number_of_likes: number_of_likes + 1 },\n      };\n    }\n\n    case DECREMENT_NUMBER_OF_LIKES: {\n      const { id } = action.payload;\n\n      const { number_of_likes } = state[id];\n\n      const post = state[id];\n\n      return {\n        ...state,\n        [id]: { ...post, number_of_likes: number_of_likes - 1 },\n      };\n    }\n\n    case DELETE_POST: {\n      const { id } = action.payload;\n\n      console.log({ id, state });\n\n      const final = { ...state };\n\n      delete final[id];\n\n      console.log({ final });\n\n      return final;\n    }\n\n    case EDIT_POST: {\n      const { id, newCaption } = action.payload;\n\n      const final = { ...state };\n\n      final[id].caption = newCaption;\n\n      return final;\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default postReducer;\n","import {\n  SET_LIKES,\n  LOAD_MORE_LIKES,\n  ON_LIKE,\n  CREATE_LIKES_ON_ADD_POST,\n} from './types';\n\nconst initialState = {};\n\nconst likeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIKES:\n      const { likes } = action.payload;\n\n      let final = {};\n\n      if (likes.length === 0) {\n        return { loaded: true };\n      }\n\n      likes.forEach((post) => {\n        final[post.id] = post;\n      });\n\n      return final;\n\n    case LOAD_MORE_LIKES: {\n      const { likes } = action.payload;\n      let final = {};\n\n      likes.forEach((post) => {\n        final[post.id] = post;\n      });\n\n      return { ...state, ...final };\n    }\n\n    case ON_LIKE: {\n      const { user_id, id } = action.payload;\n\n      const likedUsers = state[id].data;\n\n      const final = likedUsers.filter((obj) => {\n        return obj.person_id !== action.payload.user_id;\n      });\n\n      if (likedUsers.length === final.length) {\n        final.push({\n          person_id: +user_id,\n          picture: action.payload.picture,\n          username: action.payload.username,\n        });\n        return { ...state, [id]: { id, data: final, alreadyLiked: true } };\n      } else {\n        return { ...state, [id]: { id, data: final, alreadyLiked: false } };\n      }\n    }\n\n    case CREATE_LIKES_ON_ADD_POST: {\n      const { id } = action.payload;\n\n      const newLike = {\n        id,\n        data: [],\n        alreadyLiked: false,\n      };\n\n      return { ...state, [id]: newLike };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default likeReducer;\n","import { SET_FOLLOWING } from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst followingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FOLLOWING: {\n      const { users, user } = action.payload;\n\n      return { ...state, users, user };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default followingReducer;\n","import { SET_FOLLOWED_BY, ADD_FOLLOW, DELETE_FOLLOW } from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst followedByReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FOLLOWED_BY: {\n      const { users, user } = action.payload;\n\n      return { ...state, users, user };\n    }\n\n    //need to provide parametr to distinguish where I am now, if my own page - following, else - followedBy\n\n    case ADD_FOLLOW: {\n      const { myPage } = action.payload;\n\n      const { id, picture, username } = action.payload.producer;\n\n      let { users } = state;\n      users.push({ person_id: id, picture, username });\n\n      console.log({myPage})\n\n      return { ...state, users };\n    }\n\n    case DELETE_FOLLOW: {\n      const { myPage } = action.payload;\n\n      const { id } = action.payload.producer;\n      let { users } = state;\n\n      console.log({myPage})\n\n      users = users.filter((user) => user.person_id !== id);\n\n      return { ...state, users };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default followedByReducer;\n","import { SET_LOGGED_IN_FOLLOWING, ADD_FOLLOW, DELETE_FOLLOW } from './types';\n\nconst initialState = {\n  user: null,\n};\n\nconst loggedInFollows = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGGED_IN_FOLLOWING: {\n      const { users, user } = action.payload;\n\n      return { ...state, users, user };\n    }\n\n    case ADD_FOLLOW: {\n      const { id, picture, username } = action.payload.consumer;\n      const { myPage } = action.payload;\n\n      if (myPage) return state;\n\n      let { users } = state;\n      users.push({ person_id: id, picture, username });\n\n      return { ...state, users };\n    }\n\n    case DELETE_FOLLOW: {\n      const { id } = action.payload.consumer;\n      const { myPage } = action.payload;\n\n      let { users } = state;\n      users = users.filter((user) => user.person_id !== id);\n\n      return { ...state, users };\n    }\n    default: {\n      return { ...state, ready: true };\n    }\n  }\n};\n\nexport default loggedInFollows;\n","export const deleteProperties = (obj, props) => {\n  props.map((prop) => delete obj[prop]);\n  return obj;\n};\n\nexport const deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\nexport const adjustToTable = (obj) =>\n  Object.keys(obj).map((field, i) => ({ field, value: obj[field] }));\n\nexport const sleep = (msec) =>\n  new Promise((resolve) => {\n    setTimeout(resolve, msec);\n  });\n\nexport const arrToObj = (arr, prop = 'post_id') => {\n  let final = {};\n  if (!arr) return {};\n  arr.forEach((post) => {\n    final[post[prop]] = post;\n  });\n\n  return final;\n};\n\nexport const getTotalUnread = (chats) => {\n  return chats.reduce((prev, cur) => {\n    return cur.unread + prev;\n  }, 0);\n};\n","import {\n  GET_CHATS,\n  ADD_MESSAGE,\n  RESET_UNREAD_COUNTER,\n  SET_ONLINE,\n  ADD_CHAT,\n} from './types';\nimport { arrToObj } from '../helpers/index';\nconst initialState = {};\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CHATS: {\n      const { chats, messages, me } = action.payload;\n\n      const transformed = arrToObj(chats, 'room_id');\n\n      const addNumOfUnread = (messages) => {\n        let final = { ...transformed };\n\n        for (const chatObj in final) {\n          final[chatObj] = { ...final[chatObj], unread: 0 };\n        }\n\n        if (!messages.length) return { ...state, ...final };\n\n        messages\n          .filter((message) => +message.sender_id !== +me)\n          .filter((message) => !message.is_read)\n          .map((message) => {\n            if (Object.keys(final).includes(message.room_id.toString())) {\n              final[message.room_id].unread++;\n            }\n          });\n\n        return final;\n      };\n\n      const patched = addNumOfUnread(messages);\n\n      return { ...state, ...patched };\n    }\n\n    case ADD_MESSAGE: {\n      const { info, me } = action.payload;\n\n      const temp = JSON.parse(JSON.stringify(state));\n      temp[info.roomId].latestMessage = {\n        message_id: info.messageId,\n        room_id: info.roomId,\n        sender_id: info.senderId,\n        context: info.context,\n        send_at: info.date,\n        is_read: true,\n      };\n\n      if (+me.id !== +info.senderId) {\n        temp[info.roomId].unread += 1;\n      }\n\n      return { ...state, ...temp };\n    }\n\n    case ADD_CHAT: {\n      const { chat } = action.payload;\n\n      const transformed = arrToObj([chat], 'room_id');\n\n      return { ...state, ...transformed };\n    }\n\n    case RESET_UNREAD_COUNTER: {\n      const { chatId } = action.payload;\n\n      const reseted = JSON.parse(JSON.stringify(state));\n\n      reseted[chatId].unread = 0;\n\n      return { ...state, ...reseted };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default chatReducer;\n","export const adjustTime = (date) => {\n  if (!date) return null;\n\n  const withoutTimeZone = date\n    .split('T')[1]\n    .split('.')[0]\n    .split(':')\n    .slice(0, 2);\n\n  const myTime = withoutTimeZone.map((num, i) => {\n    if (i === 0) {\n      return (Number(num) + 6).toString();\n    }\n    return num;\n  });\n\n  return myTime.join(':');\n};\n\nexport const prepareText = (str) => {\n  if (!str) return 'No messages yet';\n\n  if (str.length > 34) {\n    return str.toString().substring(0, 36).concat('...');\n  } else {\n    return str;\n  }\n};\n\nexport const addTimeSeparator = (messages) => {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const reduced = messages.reduce((prev, current) => {\n    const currentMessageDate = {};\n    const previousMessageDate = {};\n\n    currentMessageDate.day = new Date(current.date).getDate();\n    currentMessageDate.month = new Date(current.date).getMonth();\n    currentMessageDate.year = new Date(current.date).getFullYear();\n\n    const previousMessage = prev[prev.length - 1];\n\n    if (prev.length === 0)\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          }`,\n        },\n        current,\n      ];\n\n    previousMessageDate.day = new Date(previousMessage.date).getDate();\n    previousMessageDate.month = new Date(previousMessage.date).getMonth();\n    previousMessageDate.year = new Date(previousMessage.date).getFullYear();\n\n    if (previousMessageDate.day !== currentMessageDate.day) {\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          room_id: current.room_id,\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          }`,\n        },\n        current,\n      ];\n    }\n\n    if (previousMessageDate.month !== currentMessageDate.month) {\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          }`,\n        },\n        current,\n      ];\n    }\n\n    if (previousMessageDate.year !== currentMessageDate.year) {\n      return [\n        ...prev,\n        {\n          type: 'separator',\n          date: `${currentMessageDate.day} ${\n            monthNames[currentMessageDate.month]\n          } ${currentMessageDate.year}`,\n        },\n        current,\n      ];\n    }\n\n    return [...prev, current];\n  }, []);\n\n  return reduced;\n};\n","import { GET_MESSAGES, ADD_MESSAGE, ADD_CHAT } from './types';\nimport { arrToObj } from '../helpers/index';\nimport { adjustTime, addTimeSeparator } from '../helpers/msg';\n\nconst initialState = {};\n\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MESSAGES: {\n      const { messages, chats } = action.payload;\n\n      const adjustedMessages = messages\n        .sort((a, b) => a.message_id - b.message_id)\n        .map((message) => ({\n          message_id: message.message_id,\n          room_id: message.room_id,\n          from: message.sender_id,\n          text: message.context,\n          date: message.send_at,\n        }));\n\n      const final = chats.map((chat) => {\n        const currentChat = adjustedMessages.filter(\n          (message) => +message.room_id === +chat.room_id\n        );\n\n        return {\n          room_id: +chat.room_id,\n          username: chat.username,\n          picture: chat.picture,\n          messages: currentChat,\n        };\n      });\n\n      let withSeparators = final.map((chat) => {\n        chat.messages = addTimeSeparator(chat.messages);\n        return chat;\n      });\n\n      withSeparators = withSeparators.map((chat) => {\n        chat.messages = chat.messages.map((message) => {\n          if (!message.type) return { ...message, date: adjustTime(message.date) };\n          return message;\n        });\n        return chat;\n      });\n\n      const obj = arrToObj(withSeparators, 'room_id');\n      return { ...state, ...obj };\n    }\n\n    case ADD_MESSAGE: {\n      const { info } = action.payload;\n\n      const temp = { ...state };\n\n      temp[info.roomId].messages.push({\n        message_id: info.messageId,\n        room_id: info.roomId,\n        from: info.senderId,\n        text: info.context,\n        date: info.date,\n      });\n\n      return { ...state, ...temp };\n    }\n\n    case ADD_CHAT: {\n      const { chat } = action.payload;\n\n      const { latestMessage, unread, person_id, ...messages } = chat;\n\n      messages.messages = [];\n\n      const transformed = arrToObj([messages], 'room_id');\n\n      return { ...state, ...transformed };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default messagesReducer;\n","import { SET_ONLINE } from './types';\nconst initialState = { ids: [] };\n\nconst chatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ONLINE: {\n      const { onlineIds } = action.payload;\n      console.log({ onlineIds });\n      return { ...state, ids: onlineIds };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default chatReducer;\n","import { combineReducers } from 'redux';\n\nimport loggedInUserReducer from './userReducer';\nimport currentPageReducer from './currentPageReducer';\nimport postReducer from './postReducer';\nimport likeReducer from './likeReducer';\nimport followingReducer from './followingReducer';\nimport followedByReducer from './followedByReducer';\nimport loggedInFollows from './loggedInFollows';\nimport chatsReducer from './chatReducer';\nimport messagesReducer from './messagesReducer';\nimport onlineUsersReducer from './onlineUsers';\n\nconst rootReducer = combineReducers({\n  loggedInUser: loggedInUserReducer,\n  loggedInFollows: loggedInFollows,\n  currentPage: currentPageReducer,\n  posts: postReducer,\n  likes: likeReducer,\n  following: followingReducer,\n  followedBy: followedByReducer,\n  chats: chatsReducer,\n  messages: messagesReducer,\n  onlineUsers: onlineUsersReducer,\n});\n\nexport default rootReducer;\n","import {\n  AUTH_USER,\n  NOT_AUTH_USER,\n  SET_CURRENT_PAGE,\n  UPDATE_PROFILE_PICTURE,\n  UPDATE_PROFILE_INFO,\n  SET_POSTS,\n  ADD_POST,\n  LOAD_MORE_POSTS,\n  SET_LIKES,\n  LOAD_MORE_LIKES,\n  ON_LIKE,\n  UPDATE_NUMBER_OF_LIKES,\n  INCREMENT_NUMBER_OF_LIKES,\n  DECREMENT_NUMBER_OF_LIKES,\n  CREATE_LIKES_ON_ADD_POST,\n  DELETE_POST,\n  EDIT_POST,\n  SET_FOLLOWING,\n  SET_FOLLOWED_BY,\n  SET_LOGGED_IN_FOLLOWING,\n  ADD_FOLLOW,\n  DELETE_FOLLOW,\n  GET_CHATS,\n  GET_MESSAGES,\n  SET_UUID,\n  ADD_MESSAGE,\n  RESET_UNREAD_COUNTER,\n  SET_ONLINE,\n  ADD_CHAT,\n  UPDATE_BIO,\n  ADD_INTERESTS,\n} from './types';\n\nexport const authUser = ({\n  id,\n  bio,\n  username,\n  based_in,\n  email,\n  fullname,\n  number_of_posts,\n  occupation,\n  phone_number,\n  picture,\n  interests\n}) => ({\n  type: AUTH_USER,\n  payload: {\n    id,\n    bio,\n    username,\n    based_in,\n    email,\n    fullname,\n    number_of_posts,\n    occupation,\n    phone_number,\n    picture,\n    interests\n  },\n});\n\nexport const notAuthUser = () => ({\n  type: NOT_AUTH_USER,\n});\n\nexport const setCurrentPage = ({\n  id,\n  bio,\n  username,\n  based_in,\n  email,\n  fullname,\n  number_of_posts,\n  occupation,\n  phone_number,\n  picture,\n}) => ({\n  type: SET_CURRENT_PAGE,\n  payload: {\n    id,\n    bio,\n    username,\n    based_in,\n    email,\n    fullname,\n    number_of_posts,\n    occupation,\n    phone_number,\n    picture,\n  },\n});\n\nexport const updateProfilePicture = (picture) => ({\n  type: UPDATE_PROFILE_PICTURE,\n  payload: { picture },\n});\n\nexport const updateProfileInfo = ({\n  username,\n  based_in,\n  email,\n  fullname,\n  occupation,\n  phone_number,\n}) => ({\n  type: UPDATE_PROFILE_INFO,\n  payload: { username, based_in, email, fullname, occupation, phone_number },\n});\n\nexport const setPosts = ({ posts, user }) => ({\n  type: SET_POSTS,\n  payload: { posts, user },\n});\n\nexport const addPost = ({ post }) => ({\n  type: ADD_POST,\n  payload: { post },\n});\n\nexport const loadMorePosts = ({ posts }) => ({\n  type: LOAD_MORE_POSTS,\n  payload: { posts },\n});\n\nexport const setLikes = ({ likes }) => ({\n  type: SET_LIKES,\n  payload: { likes },\n});\n\nexport const loadMoreLikes = ({ likes }) => ({\n  type: LOAD_MORE_LIKES,\n  payload: { likes },\n});\n\nexport const onLike = (info) => ({\n  type: ON_LIKE,\n  payload: info,\n});\n\nexport const incrementNumberOfLikes = (id) => ({\n  type: INCREMENT_NUMBER_OF_LIKES,\n  payload: { id },\n});\n\nexport const decrementNumberOfLikes = (id) => ({\n  type: DECREMENT_NUMBER_OF_LIKES,\n  payload: { id },\n});\n\nexport const createLikesOnAddPost = (id) => ({\n  type: CREATE_LIKES_ON_ADD_POST,\n  payload: { id },\n});\n\nexport const deletePost = (id) => ({\n  type: DELETE_POST,\n  payload: { id },\n});\n\nexport const editPost = (id, newCaption) => ({\n  type: EDIT_POST,\n  payload: { id, newCaption },\n});\n\nexport const setFollowing = ({ users, user }) => ({\n  type: SET_FOLLOWING,\n  payload: { users, user },\n});\n\nexport const setFollowedBy = ({ users, user }) => ({\n  type: SET_FOLLOWED_BY,\n  payload: { users, user },\n});\n\nexport const setLoggedInFollowing = ({ users, user }) => ({\n  type: SET_LOGGED_IN_FOLLOWING,\n  payload: { users, user },\n});\n\nexport const addFollow = ({ producer, consumer, myPage }) => ({\n  type: ADD_FOLLOW,\n  payload: { producer, consumer, myPage },\n});\n\nexport const deleteFollow = ({ producer, consumer, myPage }) => ({\n  type: DELETE_FOLLOW,\n  payload: { producer, consumer, myPage },\n});\n\nexport const getChats = ({ chats, messages, me }) => ({\n  type: GET_CHATS,\n  payload: { chats, messages, me },\n});\n\nexport const getMessages = ({ messages, chats }) => ({\n  type: GET_MESSAGES,\n  payload: { messages, chats },\n});\n\nexport const setUuid = ({ uuid }) => ({\n  type: SET_UUID,\n  payload: { uuid },\n});\n\nexport const addMessage = ({ info, me }) => ({\n  type: ADD_MESSAGE,\n  payload: { info, me },\n});\n\nexport const resetUnreadCounter = ({ chatId }) => ({\n  type: RESET_UNREAD_COUNTER,\n  payload: { chatId },\n});\n\nexport const setOnline = ({ onlineIds }) => ({\n  type: SET_ONLINE,\n  payload: { onlineIds },\n});\n\nexport const addChat = ({ chat }) => ({\n  type: ADD_CHAT,\n  payload: { chat },\n});\n\nexport const updateBio = ({ newBio }) => ({\n  type: UPDATE_BIO,\n  payload: { newBio },\n});\n\nexport const addInterests = ({ interests }) => ({\n  type: ADD_INTERESTS,\n  payload: { interests },\n});\n","import { useState, useCallback } from 'react';\n\nconst useFetch = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const request = useCallback(async (url, params = { method: 'GET' }, signal) => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const responce = await fetch(url, params, signal);\n      // if (!responce.ok) {\n      //   setError(true);\n      //   throw new Error('Something wrong with your request');\n      // }\n      const json = await responce.json();\n\n      if (json.success) {\n        return json;\n      }\n\n      setError(json.msg);\n      return json;\n    } catch (e) {\n      setError(e);\n      console.log(e);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return { loading, error, request };\n};\n\nexport default useFetch;\n","import { useEffect, useCallback, useState } from 'react';\nimport useFetch from './useFetch';\n\nimport { useDispatch } from 'react-redux';\nimport { authUser, notAuthUser } from '../redux/actions';\n\nconst useAuth = () => {\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(true);\n\n  const { error, request } = useFetch();\n\n  const fetchUser = useCallback(async () => {\n    try {\n      const responce = await request('/api/whoami');\n\n      if (responce.success) {\n        const json = await request(`/api/user/${responce.data.username}`);\n        const { id, username } = responce.data;\n\n        const resInterests = await request(`/api/interest/${username}`);\n\n        const { interests } = resInterests;\n\n        const {\n          based_in,\n          bio,\n          email,\n          fullname,\n          number_of_posts,\n          occupation,\n          phone_number,\n          picture,\n        } = json.info;\n        dispatch(\n          authUser({\n            id,\n            bio,\n            username,\n            based_in,\n            email,\n            fullname,\n            number_of_posts,\n            occupation,\n            phone_number,\n            picture,\n            interests,\n          })\n        );\n      } else {\n        dispatch(notAuthUser());\n      }\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [request, dispatch]);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n\n  return { loading };\n};\n\nexport default useAuth;\n","import React from 'react';\n\nimport '../styles/loginInput.css';\nimport '../styles/input.css';\nimport '../styles/btn.css';\n\nconst LoginInput = ({ form, changeHandler, submitHandler, err }) => {\n  return (\n    <div className='containerInput'>\n      <div className='image'>\n        <h1>\n          Welcome To <span className='welcome'>Mellowgram</span>\n        </h1>\n      </div>\n      <div className='content'>\n        <h1>Login</h1>\n        <div className='form-group'>\n          <label>Username</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='username'\n            id='txt'\n            aria-describedby='helpId'\n            value={form.username}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Password</label>\n          <br />\n          <input\n            type='password'\n            className='form-control'\n            name='password'\n            id='txt'\n            value={form.password}\n            onChange={changeHandler}\n          />\n        </div>\n        <a className='fp' href='/accounts/password/reset'>\n          Forgot Password?\n        </a>\n        <br />\n        <button type='button' className='btn green' onClick={submitHandler}>\n          Login\n        </button>\n        {err && <h4 className='fp login-error'>{err}</h4>}\n        <hr />\n        <div className='login'>Or login with</div>\n        <div className='links'>\n          <div className='google'>\n            <i className='fa fa-google'>\n              <span>Google</span>\n            </i>\n          </div>\n          <div className='facebook'>\n            <i className='fa fa-facebook-f'>\n              <span>Facebook</span>\n            </i>\n          </div>\n          <div className='instagram' onClick={() => console.log('instagram')}>\n            <i className='fa fa-instagram'>\n              <span>Instagram</span>\n            </i>\n          </div>\n        </div>\n        <div className='signup'>\n          Don't have an account? &#8203;\n          <a href='/signup'>Sign up</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginInput;\n","import React, { useState } from 'react';\n\nimport '../../styles/settingsDropdown.css';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport useFetch from '../../hooks/useFetch';\n\nconst Select = ({ id, label, defaultVal, options }) => {\n  const history = useHistory();\n  const { error, request } = useFetch();\n\n  const [open, setOpen] = useState(false);\n  const [select, setSelect] = useState('');\n\n  const logoutHandler = async () => {\n    const json = await request('/api/logout');\n    history.push('/');\n    window.location.reload(true);\n  };\n\n  if (select === 'Account') {\n    if (history.location.pathname !== '/account') {\n      setSelect('');\n      history.push('/account');\n    }\n  }\n\n  if (select === 'Log Out') {\n    logoutHandler();\n  }\n\n  return (\n    <div className='fieldset'>\n      <div className='form-element a-header'>\n        <span>\n          <select id={id}>\n            {options.map((option, i) => (\n              <option\n                value={option.value}\n                key={i}\n                data-display-text={option.display}\n              >\n                {option.text}\n              </option>\n            ))}\n          </select>\n          <Dropdown\n            options={options}\n            isOpen={open}\n            toggleOpen={() => setOpen(!open)}\n            selected={defaultVal}\n            setSelected={setSelect}\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst Dropdown = ({ options, isOpen, toggleOpen, selected, setSelected }) => (\n  <div\n    className={`dropdown${isOpen ? ' open' : ''}`}\n    onClick={toggleOpen}\n    tabIndex='0'\n  >\n    <span className='current'>{selected}</span>\n    <div className='list'>\n      <ul>\n        {options.map((option, i) => (\n          <li\n            key={i}\n            className={`option${option.text === selected ? ' selected' : ''}`}\n            data-value={option.value}\n            data-display-text={option.display}\n            onClick={() => setSelected(option.text)}\n          >\n            {option.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nexport default Select;\n","import React from 'react';\n\nimport '../../styles/badge.css';\n\nconst Badge = ({ size, status, content }) => {\n  return (\n    <div>\n      <span className={`badge badge--${status} badge--${size}`}>{content}</span>\n    </div>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\n\nimport chroma from 'chroma-js';\n\nimport AsyncSelect from 'react-select/async';\n\nimport useFetch from '../../hooks/useFetch';\n\nconst colourStyles = {\n  control: (styles) => ({ ...styles, backgroundColor: 'inherit' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    console.log({ data });\n\n    console.log({ isSelected });\n\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: isFocused ? 'rgb(23, 148, 67)' : 'black',\n      color: isFocused ? '#fff' : '#fff',\n      cursor: isDisabled ? 'not-allowed' : 'default',\n\n      ':active': {\n        ...styles[':active'],\n        backgroundColor:\n          !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\n      },\n    };\n  },\n  multiValue: (styles, { data }) => {\n    const color = chroma(data.color);\n    return {\n      ...styles,\n      backgroundColor: color.alpha(0.2).css(),\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    color: data.color,\n    ':hover': {\n      backgroundColor: data.color,\n      color: 'white',\n    },\n  }),\n};\n\nconst AsyncSelectCustom = ({ handler }) => {\n  const { request } = useFetch();\n  let timeId = null;\n\n  const promiseOptions = async (inputValue) => {\n    const debounce = (timeout, callback) =>\n      new Promise((resolve) => {\n        clearTimeout(timeId);\n        timeId = setTimeout(async () => {\n          const responce = await callback();\n          console.log({ responce });\n          resolve(responce.map((user) => ({ ...user, color: 'grey' })));\n        }, timeout);\n      });\n    return await debounce(\n      500,\n      request.bind(null, `/api/findUser/${inputValue}`)\n    );\n  };\n\n  return (\n    <AsyncSelect\n      placeholder='Search...'\n      cacheOptions\n      styles={colourStyles}\n      noOptionsMessage={() => 'No such user'}\n      loadOptions={promiseOptions}\n      onChange={handler}\n    />\n  );\n};\n\nexport default AsyncSelectCustom;\n","import React, { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport equal from 'deep-equal';\n\nimport Select from './SettingsDropdown';\nimport Badge from '../Direct/Badge';\nimport AsyncSelect from './AsyncSelect';\n\nimport { getTotalUnread } from '../../helpers/index';\n\nimport '../../styles/header.css';\n\nconst categoryOptions = [\n  { text: 'Account', value: 'account', selected: false },\n  { text: 'Log Out', value: 'logout', selected: false },\n];\n\nconst Hamburger = ({ handler }) => {\n  return (\n    <div className='hamburger' onClick={handler}>\n      <span className='line'></span>\n      <span className='line'></span>\n      <span className='line'></span>\n    </div>\n  );\n};\n\nconst Header = () => {\n  const history = useHistory();\n  \n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const authorized = useSelector((state) => state.loggedInUser);\n  const chats = Object.values(useSelector((state) => state.chats));\n\n  const unreadCount = getTotalUnread(chats);\n\n  const handleHamburger = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const handleChange = (e) => {\n    setSelectedValue(e.value);\n  };\n\n  if (selectedValue) {\n    history.push(`/${selectedValue}`); // no return !!!\n  }\n\n  return (\n    <div>\n      <nav className='header-nav'>\n        <Hamburger handler={handleHamburger} />\n        <div className='logo'>\n          <NavLink to='/'>Mellowgram</NavLink>\n        </div>\n        <div className='HEADER__search'>\n          <ul className='nav-search'>\n            <li className='nav-item search-field'>\n              <AsyncSelect\n                handler={handleChange}\n                selectedValue={selectedValue}\n              />\n            </li>\n          </ul>\n        </div>\n        <ul className={open ? 'nav-items show' : 'nav-items'}>\n          <li className={open ? 'nav-item fade open' : 'nav-item'}>\n            <NavLink to='/about'>About us</NavLink>\n          </li>\n          <li className={open ? 'disabled' : ''}>|</li>\n          <li className={open ? 'nav-item fade open' : 'nav-item'}>\n            {authorized.isAuthenticated ? (\n              <NavLink to='/direct'>\n                <div className='Header__direct'>\n                  <i className='fa fa-paper-plane' aria-hidden='true'></i>\n                  {unreadCount ? (\n                    <Badge\n                      size='smaller'\n                      status='danger'\n                      content={getTotalUnread(chats)}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </div>\n              </NavLink>\n            ) : (\n              <NavLink to='/login'>Login</NavLink>\n            )}\n          </li>\n          <li className={open ? 'nav-item fade open' : 'nav-item'}>\n            {authorized.isAuthenticated ? (\n              <Select\n                id='settings'\n                label='Settings'\n                defaultVal='Settings'\n                options={categoryOptions}\n              />\n            ) : (\n              <NavLink to='/signup'>Sign up</NavLink>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\n\nimport { useHistory } from 'react-router-dom';\n\nimport useFetch from '../hooks/useFetch';\n\nimport LoginInput from '../components/LoginInput';\nimport Header from '../components/Header/Header';\n\nconst Login = () => {\n  const history = useHistory();\n\n  const [form, setForm] = useState({ username: '', password: '' });\n\n  const { loading, error, request } = useFetch();\n\n  const updateStateHandler = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const submitHandler = async () => {\n    setForm({ username: '', password: '' });\n\n    const responce = await request('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(form),\n    });\n\n    if (responce.success) {\n      history.push(`/`);\n      return window.location.reload(true);\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <div>\n        <LoginInput\n          err={error}\n          form={form}\n          changeHandler={updateStateHandler}\n          submitHandler={submitHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport '../styles/loginInput.css';\n\nimport '../styles/input.css';\nimport '../styles/btn.css';\n\n\nconst SignupInput = ({ err, form, changeHandler, submitHandler }) => {\n  return (\n    <div className='containerInput'>\n      <div className='image'>\n        <h1>\n          Welcome To <span className='welcome'>Mellowgram</span>\n        </h1>\n      </div>\n      <div className='content'>\n        <h3>Sign up to meet new friends.</h3>\n        <div className='login'>Login with</div>\n        <div className='links links-signup'>\n          <div className='google'>\n            <i className='fa fa-google'>\n              <span>Google</span>\n            </i>\n          </div>\n          <div className='facebook'>\n            <i className='fa fa-facebook-f'>\n              <span>Facebook</span>\n            </i>\n          </div>\n          <div className='instagram' onClick={() => console.log('instagram')}>\n            <i className='fa fa-instagram'>\n              <span>Instagram</span>\n            </i>\n          </div>\n        </div>\n        <span>OR</span>\n        <div className='form-group form-group-signup'>\n          <label>Email</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='email'\n            id='txt'\n            aria-describedby='helpId'\n            value={form.email}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Full Name</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='fullName'\n            id='txt'\n            value={form.fullName}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Username</label>\n          <br />\n          <input\n            type='text'\n            className='form-control'\n            name='username'\n            id='txt'\n            value={form.username}\n            onChange={changeHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <label>Password</label>\n          <br />\n          <input\n            type='password'\n            className='form-control'\n            name='password'\n            id='txt'\n            value={form.password}\n            onChange={changeHandler}\n          />\n        </div>\n\n        <button type='button' className='btn green' onClick={submitHandler}>\n          Sign up\n        </button>\n        {err && <h4 className='fp login-error'>{err}</h4>}\n        <div className='signup signup-signup'>\n          Have an account? &#8203;\n          <a href='/login'>Log in</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupInput;\n","import React, { useState } from 'react';\nimport SignupInput from '../components/SignupInput';\nimport Header from '../components/Header/Header';\nimport { useHistory } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\n\nconst Signup = () => {\n  const history = useHistory();\n\n  const [form, setForm] = useState({\n    email: '',\n    fullName: '',\n    username: '',\n    password: '',\n  });\n\n  const { loading, error, request } = useFetch();\n\n  console.log({ form });\n  console.log({ loading, error });\n\n  const updateStateHandler = (e) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const submitHandler = async () => {\n    setForm({ email: '', fullName: '', username: '', password: '' });\n\n    const responce = await request('/api/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(form),\n    });\n    console.log({ responce });\n\n    if (responce.success) {\n      return history.push('/login');\n    }\n\n    return\n  };\n\n  return (\n    <div>\n      <Header authorized={{isAuthenticated: false}}/>\n\n      <SignupInput\n        err={error}\n        form={form}\n        changeHandler={updateStateHandler}\n        submitHandler={submitHandler}\n      />\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport Header from '../components/Header/Header';\n\nimport '../styles/notFound.css';\n\nconst NotFound = () => {\n  return (\n    <div className='nf'>\n      <div>\n        <Header />\n      </div>\n      <div className='not-available'>\n        <h2> Sorry, this page isn't available.</h2>\n        <div className='not-available-detail'>\n          The link you followed may be broken, or the page may have been\n          removed. &#8203;\n          <a href='/'>Go back to Mellowgram.</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\n\nimport '../../styles/toast.css';\n\nconst ToastNewMsg = ({ username, picture, context }) => {\n  return (\n    <div className='toast_container'>\n      <div className='toast_title'>\n        <img src={picture} className='toast__img'></img>\n        <h3>{username}</h3>\n      </div>\n      <div className='toast_message'>\n        <p>{context}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ToastNewMsg;\n","import React from 'react';\n\nconst ExpSingle = ({ params }) => {\n  const { year, company, profession, achievements } = params;\n  return (\n    <div className='card-item' data-year={year}>\n      <div className='card-item-title'>\n        {profession} <span>{company}</span>\n      </div>\n      <div className='card-item-desc'>{achievements}</div>\n    </div>\n  );\n};\n\nexport default ExpSingle;\n","import React from 'react';\nimport ExpSingle from './ExpSingle';\n\nconst Experience = ({ experience }) => {\n  return (\n    <div className='card-timeline'>\n      {experience.map((single) => {\n        return <ExpSingle key={single.id} params={single} />;\n      })}\n    </div>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\n\nimport '../../styles/followingBar.css';\n\nimport { useHistory } from 'react-router-dom';\n\nconst UserRow = ({ picture, username }) => {\n  const history = useHistory();\n\n  const handleClickLink = () => {\n    return history.push(`${username}`);\n  };\n\n  return (\n    <div className='FOLLOWING_BAR_USER' onClick={handleClickLink}>\n      <img\n        src={picture}\n        alt='avatar'\n        className='FOLLOWING_BAR_USER_profile_picture'\n        style={{ marginTop: '0px' }}\n      />\n      <div className='FOLLOWING_BAR_USER__header'>\n        <h3 className='FOLLOWING_BAR_USER__username'>{username}</h3>\n      </div>\n    </div>\n  );\n};\n\nfunction FollowingBar({ following, followedBy }) {\n\n  return (\n    <div className='USER_INFO__followingBar'>\n      <div className='FOLLOWING_BAR_FOLLOWED_BY'>\n        <h3>followed by</h3>\n        <div className='FOLLOWED_BAR_BODY'>\n          {followedBy.users.map((user, i) => (\n            <UserRow key={i} username={user.username} picture={user.picture} />\n          ))}\n        </div>\n      </div>\n      <div className='FOLLOWING_BAR_FOLLOWING'>\n        <h3>following</h3>\n        <div className='FOLLOWING_BAR_BODY'>\n          {following.users.map((user, i) => (\n            <UserRow key={i} username={user.username} picture={user.picture} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowingBar;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\n\nimport '../../styles/picturesBar.css';\n\nfunction PicturesBar({ setSelectedImg }) {\n  const pictures = [\n    { id: 1, url: 'https://as01.epimg.net/futbol/imagenes/2019/03/14/champions/1552569020_031070_1552569560_noticia_normal.jpg' },\n    { id: 2, url: '/api/public/uploads/user_dloading.jpg' },\n    { id: 3, url: '/api/public/uploads/N6NCsEnf_6U9RvrfYNXpb.jpg' },\n    { id: 4, url: '/api/public/uploads/user_tsunamipapi.jpg' },\n    { id: 5, url: '/api/public/uploads/user_dloading.jpg' },\n    { id: 6, url: '/api/public/uploads/N6NCsEnf_6U9RvrfYNXpb.jpg' },\n    { id: 7, url: '/api/public/uploads/user_tsunamipapi.jpg' },\n    { id: 8, url: 'https://as01.epimg.net/futbol/imagenes/2019/03/14/champions/1552569020_031070_1552569560_noticia_normal.jpg' },\n  ];\n\n  return (\n    <div className='USER_INFO__picturesBar'>\n      <div className='USER_INFO_picturesBar_header'>\n        <h3 className='USER_INFO__picturesBar__title'>My pictures &#8203; </h3>\n        <div className='USER_INFO__picturesBar__add'>\n          <div className='UPLOAD_btn_upload ADD_PICTURE'>\n            <input type='file' id='UPLOAD_PROFILE_PICTURE' name='' />\n            <i className='fa fa-plus' aria-hidden='true'></i>\n          </div>\n        </div>\n      </div>\n      <div className='img-grid'>\n        {pictures &&\n          pictures.map((doc) => (\n            <motion.div\n              className='img-wrap'\n              key={doc.id}\n              layout\n              onClick={() => setSelectedImg(doc.url)}\n            >\n              <motion.img\n                src={doc.url}\n                alt='uploaded pic'\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 1 }}\n              />\n            </motion.div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PicturesBar;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\n\nimport '../../styles/picturesBar.css';\n\nconst PictureModal = ({ setSelectedImg, selectedImg }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  };\n\n  return (\n    <motion.div\n      className='backdrop'\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img\n        src={selectedImg}\n        alt='enlarged pic'\n        initial={{ y: '-100vh' }}\n        animate={{ y: 0 }}\n      />\n      <div className='modal_actions'>\n        <label>\n          <div className='update_picture'>\n            <input type='file'></input>\n            <i\n              class='fa fa-refresh delete_picture_button'\n              aria-hidden='true'\n            ></i>\n            <p>&#8203; Load new picture</p>\n          </div>\n        </label>\n        <div className='remove_picture'>\n          <i class='fa fa-trash delete_picture_button' aria-hidden='true'></i>\n          <p>&#8203; Remove picture</p>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default PictureModal;\n","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport useFetch from '../../../hooks/useFetch';\n\nimport '../../../styles/btn.css';\nimport {\n  addPost,\n  createLikesOnAddPost,\n  editPost,\n} from '../../../redux/actions';\n\nfunction PostInput({\n  id,\n  modal,\n  username,\n  fullname,\n  picture,\n  placeholder,\n  handleEdit,\n}) {\n  const dispatch = useDispatch();\n\n  const [caption, setCaption] = useState(placeholder || '');\n\n  const { request } = useFetch();\n\n  const submitHandler = async () => {\n    if (!modal) {\n      const result = await request('/api/post/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ caption }),\n      });\n\n      setCaption('');\n\n      if (result.success) {\n        dispatch(addPost({ post: result.rows }));\n        dispatch(createLikesOnAddPost(result.rows.post_id));\n      }\n    }\n\n    if (modal) {\n      const result = await request(`/api/post/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ caption }),\n      });\n\n      if (result.success) {\n        dispatch(editPost(id, caption));\n      }\n      handleEdit(null);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <div className='POST__body POSTINPUT '>\n          <div className='POST__title'>\n            <div className='POST__title__left'>\n              <img\n                src={picture}\n                alt='avatar'\n                className='POST__profile_picture'\n                style={{ marginTop: '0' }}\n              />\n              <div className='POST__header'>\n                <h3 className='POST__fullname'>{fullname}</h3>\n                <h4 className='POST__username'>@{username}</h4>\n              </div>\n            </div>\n          </div>\n          <div className='POST__context'>\n            <textarea\n              value={caption}\n              name='message'\n              autoFocus\n              id='message'\n              rows='4'\n              className='form-input'\n              onChange={(e) => setCaption(e.target.value)}\n            ></textarea>\n            <button className='green' onClick={submitHandler}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PostInput;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/rootReducer';\n\nimport './index.css';\nimport App from './App';\n\nlet store;\n\n\n\n//REDUX TOOLS should be disabled for Production\n\nif(process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer, compose(\n    applyMiddleware(thunk),\n\n  ));\n} else {\n  store = createStore(rootReducer, compose(\n    applyMiddleware(thunk),\n\n      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ));\n}\n\nconst app = (\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useFetch from '../../hooks/useFetch';\nimport { updateBio } from '../../redux/actions';\n\nconst EditBioInput = ({ bio, closeModal }) => {\n  const { request } = useFetch();\n  const dispatch = useDispatch();\n\n  const [newBio, setNewBio] = useState(bio || '');\n\n  const submitBio = async () => {\n    const result = await request('/api/user/bio', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ bio: newBio }),\n    });\n\n    if (result.success) {\n      console.log('Bio updated');\n      closeModal(null);\n      dispatch(updateBio({ newBio }));\n      setNewBio('');\n    }\n  };\n\n  return (\n    <div>\n      <textarea\n        value={newBio}\n        name='message'\n        autoFocus\n        id='message'\n        rows='4'\n        className='form-input'\n        onChange={(e) => setNewBio(e.target.value)}\n      ></textarea>\n      <button className='green' onClick={submitBio}>\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default EditBioInput;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\n\nimport '../../styles/modal.css';\nimport PostInput from './Post/PostInput';\nimport EditBioInput from './EditBioInput';\n\nconst EditModal = ({ handleEdit, info, isBio }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      handleEdit(null);\n    }\n  };\n\n  console.log({ info, isBio });\n\n  return (\n    <motion.div\n      className='backdrop'\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.div\n        className='LIKESMODAL_CONTENT EDIT'\n        initial={{ y: '-100vh' }}\n        animate={{ y: 0 }}\n      >\n        {isBio && <EditBioInput bio={info} closeModal={handleEdit} />}\n\n        {!isBio && (\n          <PostInput\n            id={info.id}\n            modal={true}\n            username={info.username}\n            fullname={info.fullname}\n            picture={info.picture}\n            placeholder={info.text}\n            handleEdit={handleEdit}\n          />\n        )}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default EditModal;\n","import React, { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport equal from 'deep-equal';\nimport useFetch from './../../hooks/useFetch';\nimport { deleteFollow, addFollow } from '../../redux/actions';\nimport '../../styles/modal.css';\n\nconst FollowRow = ({ id, username, picture, alreadyFollowed }) => {\n  const { request } = useFetch();\n  const history = useHistory();\n\n  const [following, setFollowing] = useState(alreadyFollowed);\n\n  const loggedInUser = useSelector(\n    (state) => state.loggedInUser,\n    (prev, curr) => equal(prev, curr)\n  );\n\n  const info = useSelector(\n    (state) => state.currentPage,\n    (prev, curr) => {\n      return equal(prev, curr);\n    }\n  );\n\n  const dispatch = useDispatch();\n\n  const followHandler = async () => {\n    console.log({ following, id });\n    if (following) {\n      const responce = await request(`/api/follow/${id}`, { method: 'DELETE' });\n      if (responce.success) {\n        dispatch(\n          deleteFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: { id, picture, username },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowing((prev) => !prev);\n      }\n    } else {\n      const responce = await request(`/api/follow/${id}`, { method: 'POST' });\n      if (responce.success) {\n        dispatch(\n          addFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: { id, picture, username },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowing((prev) => !prev);\n      }\n    }\n  };\n\n  let btnClassName = 'green';\n\n  if (following) btnClassName += ' LIKESMODAL_BTN_followed';\n\n  return (\n    <div className='LIKESMODAL_ROW'>\n      <div className='LIKESMODAL__title'>\n        {/* <NavLink to={`/${username}`}> */}\n        <div\n          className='LIKESMODAL__title__left'\n          onClick={() => {\n            history.push(`/${username}`);\n          }}\n        >\n          <img\n            src={picture}\n            alt='avatar'\n            className='LIKESMODAL__profile_picture'\n            style={{ marginTop: '0px' }}\n          />\n          <div className='LIKESMODAL__header'>\n            <h3 className='LIKESMODAL__fullname'>{username}</h3>\n          </div>\n        </div>\n        {id !== loggedInUser.id && (\n          <div className='LIKESMODAL__title__right'>\n            <button className={btnClassName} onClick={followHandler}>\n              {following ? 'Following' : 'Follow'}\n            </button>\n          </div>\n        )}\n        {/* </NavLink> */}\n      </div>\n    </div>\n  );\n};\n\nexport default FollowRow;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { motion } from 'framer-motion';\n\nimport FollowRow from './FollowRow';\n\nimport '../../styles/modal.css';\n\nconst LikesModal = ({ closeHandler, info, title = 'test' }) => {\n  const following = useSelector((state) => state.loggedInFollows);\n\n  console.log({ info });\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      closeHandler(null);\n    }\n  };\n\n  const isAlreadyFollowed = (id) => {\n    const { users } = following;\n    const ids = users.map((userObj) => userObj.person_id);\n    return ids.includes(id);\n  };\n\n  return (\n    <motion.div\n      className='backdrop'\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.div\n        className='LIKESMODAL_CONTENT'\n        initial={{ y: '-100vh' }}\n        animate={{ y: 0 }}\n      >\n        <div className='LIKES_MODAL_TITLE'>\n          <h3>{title}</h3>\n          <hr className='hr'></hr>\n        </div>\n        {info.data &&\n          info.data.map((user) => (\n            <FollowRow\n              key={user.person_id}\n              id={user.person_id}\n              picture={user.picture}\n              username={user.username}\n              alreadyFollowed={isAlreadyFollowed(user.person_id)}\n            />\n          ))}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default LikesModal;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport '../../styles/followingBar.css';\nimport { useHistory } from 'react-router-dom';\n\nconst InterestBar = () => {\n  const history = useHistory();\n\n  const currentPage = useSelector((state) => state.currentPage);\n  const loggedInUser = useSelector((state) => state.loggedInUser);\n\n  const { interests } = currentPage;\n\n  console.log({ interests, currentPage });\n\n  const redirectToSettings = () => {\n    history.push('/account');\n  };\n\n  if (!interests) return <div className='USER_INFO__followingBar'></div>;\n\n  return (\n    <div className='USER_INFO__followingBar'>\n      <div className='INTEREST_BAR_CONTAINER'>\n        <div className='INTEREST_BAR_TITLE'>\n          {interests.length || loggedInUser.id !== currentPage.id ? <h3>Interests</h3> : null}\n        </div>\n        <div className='INTEREST_BAR_BODY'>\n          <ul>\n            {interests.map((interest) => (\n              <li\n                style={{\n                  backgroundColor: interest.interest_color,\n                  opacity: '.8',\n                  color: 'black',\n                }}\n              >{`${interest.interest_emoji} ${interest.interest_name}`}</li>\n            ))}\n          </ul>\n          {!interests.length && loggedInUser.id === currentPage.id && (\n            <div className='INTEREST_BAR_NO_INTERESTS'>\n              <h3>No interests yet</h3>\n              <i\n                class='fa fa-plus'\n                aria-hidden='true'\n                onClick={redirectToSettings}\n              ></i>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InterestBar;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  setFollowedBy,\n  setFollowing,\n  deleteFollow,\n  addFollow,\n  addInterests,\n  resetUnreadCounter,\n} from '../../redux/actions';\n\nimport useFetch from '../../hooks/useFetch';\n\nimport equal from 'deep-equal';\n\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport ToastNewMsg from './ToastNewMsg';\nimport Exprerience from './Experience';\nimport FollowingBar from './FollowingBar';\nimport PicturesBar from './PicturesBar';\nimport PictureModal from './PictureModal';\nimport EditModal from './EditModal';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../styles/user.css';\nimport '../../styles/btn.css';\nimport LikesModal from './LikesModal';\nimport InterestBar from './InterestBar';\n\nconst UserInfo = ({ startMessagingHandler, setOpenDialog }) => {\n  const history = useHistory();\n\n  const { request } = useFetch();\n  const dispatch = useDispatch();\n\n  const loggedInUser = useSelector((state) => state.loggedInUser);\n  const followingLoggedIn = useSelector((state) => state.loggedInFollows);\n  const following = useSelector((state) => state.following);\n  const followedBy = useSelector((state) => state.followedBy);\n\n  const [newMsg, setNewMsg] = useState({});\n  const [selectedImg, setSelectedImg] = useState(null);\n  const [followingThisUser, setFollowingThisUser] = useState(false);\n  const [editBioModal, setEditBioModal] = useState(false);\n\n  const [followModal, setFollowModal] = useState(null);\n\n  const showNotify = useRef(false);\n  let same = useRef(true);\n\n  let btnClassName = 'green';\n\n  const info = useSelector(\n    (state) => state.currentPage,\n    (prev, curr) => {\n      same.current = equal(prev, curr);\n      return equal(prev, curr);\n    }\n  );\n\n  const isAlreadyFollowed = (id) => {\n    const { users } = followingLoggedIn;\n    const ids = users.map((userObj) => userObj.person_id);\n    return setFollowingThisUser(ids.includes(id));\n  };\n\n  useEffect(() => {\n    if (followingLoggedIn.user) {\n      isAlreadyFollowed(info.id);\n    }\n  }, [followingLoggedIn]);\n\n  const fetchFollowers = useCallback(\n    async (info, signal) => {\n      const responce = await request(\n        `/api/follow/followers/${info.username}`,\n        {},\n        signal\n      );\n      if (responce.success) {\n        dispatch(setFollowedBy({ users: responce.data, user: info.username }));\n      }\n    },\n    [dispatch, setFollowedBy, request]\n  );\n\n  const fetchFollowing = useCallback(\n    async (info, signal) => {\n      const responce = await request(\n        `/api/follow/following/${info.username}`,\n        {},\n        signal\n      );\n      if (responce.success) {\n        dispatch(setFollowing({ users: responce.data, user: info.username }));\n      }\n    },\n    [request, dispatch, setFollowing]\n  );\n\n  const fetchInterests = useCallback(\n    async (info, signal) => {\n      const responce = await request(\n        `/api/interest/${info.username}`,\n        {},\n        signal\n      );\n      if (responce.success) {\n        dispatch(addInterests({ interests: responce.interests }));\n      }\n    },\n    [request, dispatch]\n  );\n\n  const followHandler = async () => {\n    if (followingThisUser) {\n      const responce = await request(`/api/follow/${info.id}`, {\n        method: 'DELETE',\n      });\n      if (responce.success) {\n        dispatch(\n          deleteFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: {\n              id: info.id,\n              picture: info.picture,\n              username: info.username,\n            },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowing((prev) => !prev);\n      }\n    } else {\n      const responce = await request(`/api/follow/${info.id}`, {\n        method: 'POST',\n      });\n      if (responce.success) {\n        dispatch(\n          addFollow({\n            producer: {\n              id: loggedInUser.id,\n              username: loggedInUser.username,\n              picture: loggedInUser.picture,\n            },\n            consumer: {\n              id: info.id,\n              picture: info.picture,\n              username: info.username,\n            },\n            myPage: loggedInUser.id === info.id,\n          })\n        );\n        setFollowingThisUser((prev) => !prev);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (info.id && !same.current) {\n      fetchFollowers(info, signal);\n      fetchFollowing(info, signal);\n      fetchInterests(info, signal);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [info.id]);\n\n  const experience = [\n    {\n      id: 1,\n      year: 2021,\n      company: 'Spotify',\n      profession: 'JS Developer',\n      achievements: 'Developed new versions',\n    },\n    {\n      id: 2,\n      year: 2022,\n      company: 'Spotify',\n      profession: 'JS Developer',\n      achievements: 'New products',\n    },\n    {\n      id: 3,\n      year: 2023,\n      company: 'Spotify',\n      profession: 'JS Developer',\n      achievements: 'New app',\n    },\n  ];\n\n  const [btnAbout, setBtnAbout] = useState('is-active');\n  const [btnExprerience, setBtnExprerience] = useState('');\n  const [btnContact, setBtnContact] = useState('');\n  const [cardClasses, setCardClasses] = useState('card');\n  const [sectionAbout, setSectionAbout] = useState('card-section is-active');\n  const [sectionExperience, setSectionExperience] = useState('card-section');\n  const [sectionContact, setSectionContact] = useState('card-section');\n  const [dataState, setDataState] = useState('#about');\n\n  const handleButtonClick = (e) => {\n    const targetSection = e.target.getAttribute('data-section');\n    if (targetSection !== '#about') {\n      setCardClasses((prev) => (prev += ' is-active'));\n    } else {\n      setCardClasses((prev) => {\n        return prev.replace(/is-active/g, ' ');\n      });\n    }\n    setDataState(targetSection);\n    setSectionAbout('card-section');\n    setSectionContact('card-section');\n    setSectionExperience('card-section');\n    setBtnAbout('');\n    setBtnExprerience('');\n    setBtnContact('');\n    if (targetSection === '#experience') {\n      setSectionExperience((prev) => (prev += ' is-active'));\n      setBtnExprerience('is-active');\n    } else if (targetSection === '#about') {\n      setSectionAbout((prev) => (prev += ' is-active'));\n      setBtnAbout('is-active');\n    } else {\n      setSectionContact((prev) => (prev += ' is-active'));\n      setBtnContact('is-active');\n    }\n  };\n\n  const handleEditClick = () => {\n    setEditBioModal(true);\n  };\n\n  const notifyNewMessage = (msgInfo) => {\n    showNotify.current = true;\n    toast.dark(\n      <ToastNewMsg\n        username={msgInfo.username}\n        context={msgInfo.context}\n        picture={msgInfo.picture}\n      />,\n      {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        onClick: () => history.push('/direct'),\n      }\n    );\n    setOpenDialog(msgInfo.chatId);\n  };\n\n  const showFollow = (type) => {\n    const obj = {};\n    obj.title = type.charAt(0).toUpperCase() + type.slice(1);\n\n    if (type === 'following') {\n      setFollowModal({ ...obj, data: following.users });\n    } else if (type === 'followers') {\n      setFollowModal({ ...obj, data: followedBy.users });\n    }\n  };\n\n  if (followingThisUser) btnClassName += ' LIKESMODAL_BTN_followed';\n\n  if (!info) return <div></div>;\n\n  if (\n    !followedBy.user ||\n    followedBy.user !== info.username ||\n    !following.user ||\n    following.user !== info.username\n  )\n    return <div></div>;\n\n  return (\n    <div className='USER_INFO__container'>\n      <InterestBar />\n      {/* <FollowingBar followedBy={followedBy} following={following} /> */}\n      {Object.keys(newMsg).length && !showNotify.current\n        ? notifyNewMessage(newMsg)\n        : null}\n      <ToastContainer\n        position='top-center'\n        autoClose={5000}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n      />\n      <div className='USER_INFO_CENTER'>\n        {loggedInUser.id !== info.id && (\n          <div className='USER_INFO_CENTER_TOP'>\n            <button className={btnClassName} onClick={followHandler}>\n              {followingThisUser ? 'Following' : 'Follow'}\n            </button>\n            <button\n              className='green USER_INFO_MESSAGE'\n              onClick={() => {\n                startMessagingHandler({ me: loggedInUser, other: info });\n                history.push('/direct');\n              }}\n            >\n              Message\n            </button>\n          </div>\n        )}\n        <div className={cardClasses} data-state={dataState}>\n          <div className='card-header'>\n            <div className='card-cover'></div>\n            <img className='card-avatar' src={info.picture} alt='avatar' />\n            <h1 className='card-fullname'>{info.fullname}</h1>\n            <h2 className='card-jobtitle'>{info.occupation}</h2>\n          </div>\n          <div className='card-main'>\n            <div className={sectionAbout} id='about'>\n              <div className='card-content'>\n                <div className='card-subtitle'>\n                  <p>ABOUT</p>\n                  {loggedInUser.id === info.id && (\n                    <i className='fa fa-edit' onClick={handleEditClick}></i>\n                  )}\n                </div>\n                <p className='card-desc'>\n                  {info.bio || \"The user hasn't provided bio information\"}\n                </p>\n              </div>\n              <div className='card-social'>\n                <a href='#'>\n                  <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M15.997 3.985h2.191V.169C17.81.117 16.51 0 14.996 0c-3.159 0-5.323 1.987-5.323 5.639V9H6.187v4.266h3.486V24h4.274V13.267h3.345l.531-4.266h-3.877V6.062c.001-1.233.333-2.077 2.051-2.077z' />\n                  </svg>\n                </a>\n                <a href='#'>\n                  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'>\n                    <path d='M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z' />\n                  </svg>\n                </a>\n                <a href='#'>\n                  <svg viewBox='0 0 512 512' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M301 256c0 24.852-20.148 45-45 45s-45-20.148-45-45 20.148-45 45-45 45 20.148 45 45zm0 0' />\n                    <path d='M332 120H180c-33.086 0-60 26.914-60 60v152c0 33.086 26.914 60 60 60h152c33.086 0 60-26.914 60-60V180c0-33.086-26.914-60-60-60zm-76 211c-41.355 0-75-33.645-75-75s33.645-75 75-75 75 33.645 75 75-33.645 75-75 75zm86-146c-8.285 0-15-6.715-15-15s6.715-15 15-15 15 6.715 15 15-6.715 15-15 15zm0 0' />\n                    <path d='M377 0H135C60.562 0 0 60.563 0 135v242c0 74.438 60.563 135 135 135h242c74.438 0 135-60.563 135-135V135C512 60.562 451.437 0 377 0zm45 332c0 49.625-40.375 90-90 90H180c-49.625 0-90-40.375-90-90V180c0-49.625 40.375-90 90-90h152c49.625 0 90 40.375 90 90zm0 0' />\n                  </svg>\n                </a>\n                <a href='#'>\n                  <svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n                    <path d='M23.994 24v-.001H24v-8.802c0-4.306-.927-7.623-5.961-7.623-2.42 0-4.044 1.328-4.707 2.587h-.07V7.976H8.489v16.023h4.97v-7.934c0-2.089.396-4.109 2.983-4.109 2.549 0 2.587 2.384 2.587 4.243V24zM.396 7.977h4.976V24H.396zM2.882 0C1.291 0 0 1.291 0 2.882s1.291 2.909 2.882 2.909 2.882-1.318 2.882-2.909A2.884 2.884 0 002.882 0z' />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className={sectionExperience} id='experience'>\n              <div className='card-content'>\n                <div className='card-subtitle'>WORK EXPERIENCE</div>\n\n                <Exprerience experience={experience} />\n              </div>\n            </div>\n            <div className={sectionContact} id='contact'>\n              <div className='card-content'>\n                <div className='card-subtitle'>CONTACT</div>\n                <div className='card-contact-wrapper'>\n                  <div className='card-contact'>\n                    <svg\n                      xmlns='http://www.w3.org/2000/svg'\n                      viewBox='0 0 24 24'\n                      fill='none'\n                      stroke='currentColor'\n                      strokeWidth='2'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    >\n                      <path d='M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z' />\n                      <circle cx='12' cy='10' r='3' />\n                    </svg>\n                    {info.based_in || 'Not provided'}\n                  </div>\n                  <div className='card-contact card-contact-center'>\n                    <svg\n                      className='svg-middle'\n                      xmlns='http://www.w3.org/2000/svg'\n                      viewBox='0 0 24 24'\n                      fill='none'\n                      stroke='currentColor'\n                      strokeWidth='2'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    >\n                      <path d='M22 16.92v3a2 2 0 01-2.18 2 19.79 19.79 0 01-8.63-3.07 19.5 19.5 0 01-6-6 19.79 19.79 0 01-3.07-8.67A2 2 0 014.11 2h3a2 2 0 012 1.72 12.84 12.84 0 00.7 2.81 2 2 0 01-.45 2.11L8.09 9.91a16 16 0 006 6l1.27-1.27a2 2 0 012.11-.45 12.84 12.84 0 002.81.7A2 2 0 0122 16.92z' />\n                    </svg>\n                    {info.phone_number || 'Not provided'}\n                  </div>\n                  <div className='card-contact'>\n                    <svg\n                      xmlns='http://www.w3.org/2000/svg'\n                      viewBox='0 0 24 24'\n                      fill='none'\n                      stroke='currentColor'\n                      strokeWidth='2'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                    >\n                      <path d='M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z' />\n                      <path d='M22 6l-10 7L2 6' />\n                    </svg>\n                    {info.email}\n                  </div>\n                  <button className='green'>WORK</button>\n                </div>\n              </div>\n            </div>\n            <hr />\n            <div className='card-buttons'>\n              <button\n                data-section='#about'\n                className={btnAbout}\n                onClick={handleButtonClick}\n              >\n                ABOUT\n              </button>\n              <button\n                className={btnExprerience}\n                data-section='#experience'\n                onClick={handleButtonClick}\n              >\n                EXPERIENCE\n              </button>\n              <button\n                className={btnContact}\n                data-section='#contact'\n                onClick={handleButtonClick}\n              >\n                CONTACT\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className='user_info_bottom'>\n          <button\n            className='green follow'\n            onClick={() => showFollow('followers')}\n          >\n            Followers\n          </button>\n          <button\n            className='green follow'\n            onClick={() => showFollow('following')}\n          >\n            Following\n          </button>\n        </div>\n      </div>\n      <PicturesBar setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <PictureModal\n          selectedImg={selectedImg}\n          setSelectedImg={setSelectedImg}\n        />\n      )}\n      {followModal && (\n        <LikesModal\n          info={followModal}\n          closeHandler={setFollowModal}\n          title={followModal.title}\n        />\n      )}\n      {editBioModal && (\n        <EditModal handleEdit={setEditBioModal} info={info.bio} isBio={true} />\n      )}\n    </div>\n  );\n};\n\nexport default UserInfo;\n","import React, { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport useFetch from '../../../hooks/useFetch';\nimport {\n  onLike,\n  decrementNumberOfLikes,\n  incrementNumberOfLikes,\n} from '../../../redux/actions';\n\nconst Post = ({\n  id,\n  picture,\n  fullname,\n  username,\n  text,\n  numberOfLikes,\n  likes,\n  postedAt,\n  showSettings,\n  loggedInfo,\n  setSelectedLikes,\n  deletePostHandler,\n  editPostHandler,\n}) => {\n  const dispatch = useDispatch();\n\n  const { request } = useFetch();\n\n  const [liked, setLiked] = useState(likes?.alreadyLiked);\n  let likeButtonClasses = liked ? 'fa fa-heart liked' : 'fa fa-heart';\n\n  useEffect(() => {\n    setLiked(likes?.alreadyLiked);\n  }, [likes]);\n\n  const handleLike = async () => {\n    const method = liked ? 'DELETE' : 'POST';\n\n    const res = await request(`/api/like/${id}`, {\n      method,\n    });\n\n    if (res?.success) {\n      if (liked) {\n        dispatch(decrementNumberOfLikes(id));\n      } else {\n        dispatch(incrementNumberOfLikes(id));\n      }\n      dispatch(onLike({ ...loggedInfo, id }));\n      setLiked((prev) => !prev);\n    }\n  };\n\n  if (!likes) return <div></div>;\n\n  return (\n    <div>\n      <div className='POST__body'>\n        <div className='POST__title'>\n          <div className='POST__title__left'>\n            <img src={picture} alt='avatar' className='POST__profile_picture' />\n            <div className='POST__header'>\n              <h3 className='POST__fullname'>{fullname}</h3>\n              <h4 className='POST__username'>@{username}</h4>\n            </div>\n          </div>\n          {showSettings && (\n            <div className='POST__title__right'>\n              <i\n                className='fa fa-remove'\n                aria-hidden='true'\n                style={{ color: 'red' }}\n                onClick={deletePostHandler.bind(null, id)}\n              ></i>\n              <i\n                className='fa fa-edit'\n                aria-hidden='true'\n                onClick={editPostHandler.bind(null, {\n                  id,\n                  picture,\n                  username,\n                  fullname,\n                  text,\n                })}\n              ></i>\n            </div>\n          )}\n        </div>\n        <div className='POST__context'>\n          <p>{text}</p>\n          <div className='POST__actions'>\n            <div className='POST__like_section'>\n              <div className='POST__like_button'>\n                <i\n                  className={likeButtonClasses}\n                  aria-hidden='true'\n                  onClick={handleLike}\n                ></i>\n                {liked ? <h4>&#8203; Liked</h4> : <h4>&#8203; Like &#8203;</h4>}\n              </div>\n              <h4 className='POST_number_of_likes'>{numberOfLikes} Likes </h4>\n\n              <div className='POST__liked_by'>\n                <h4>Liked by: </h4>\n                <div\n                  className='POST__liked_by_images'\n                  onClick={() => setSelectedLikes(likes)}\n                >\n                  <img\n                    src={\n                      likes.data.length\n                        ? likes.data[0].picture\n                        : '/api/public/uploads/blank.jpg'\n                    }\n                    alt='avatar'\n                  />\n                  <img\n                    src={\n                      likes.data.length > 1\n                        ? likes.data[1].picture\n                        : '/api/public/uploads/blank.jpg'\n                    }\n                    alt='avatar'\n                  />\n                  <img\n                    src={\n                      likes.data.length > 2\n                        ? likes.data[2].picture\n                        : '/api/public/uploads/blank.jpg'\n                    }\n                    alt='avatar'\n                  />\n                </div>\n              </div>\n            </div>\n            <h4 className='POST__creation_time'>{postedAt}</h4>\n          </div>\n        </div>\n      </div>\n      {/* <hr className='hr' /> */}\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { useEffect, useCallback, useState, useRef } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport LikesModal from '../LikesModal';\n\nimport equal from 'deep-equal';\n\nimport useFetch from '../../../hooks/useFetch';\n\nimport {\n  setPosts,\n  loadMorePosts,\n  setLikes,\n  loadMoreLikes,\n  deletePost,\n} from '../../../redux/actions';\n\nimport Post from './Post';\nimport PostInput from './PostInput';\n\nimport '../../../styles/posts.css';\n\nimport { sleep } from '../../../helpers/index';\nimport EditModal from '../EditModal';\n\nconst Posts = () => {\n  let same = useRef(true);\n\n  const [hasMore, setHasMore] = useState(true);\n\n  const [selectedLikes, setSelectedLikes] = useState(null);\n\n  const [editModal, setEditModal] = useState(null);\n\n  const dispatch = useDispatch();\n  const { request } = useFetch();\n\n  const currentPage = useSelector(\n    (state) => state.currentPage,\n    (prev, curr) => {\n      same.current = equal(prev, curr);\n      return equal(prev, curr);\n    }\n  );\n  const loggedInUser = useSelector(\n    (state) => state.loggedInUser,\n    (prev, curr) => equal(prev, curr)\n  );\n  const posts = Object.values(\n    useSelector(\n      (state) => state.posts,\n      (prev, curr) => {\n        return equal(prev, curr);\n      }\n    )\n  ).sort();\n\n  const likes = useSelector(\n    (state) => state.likes,\n    (prev, curr) => {\n      return equal(prev, curr);\n    }\n  );\n\n  const deletePostHandler = async (id) => {\n    const responce = await request(`/api/post/${id}`, { method: 'DELETE' });\n\n    if (responce.success) {\n      dispatch(deletePost(id));\n    }\n  };\n\n  const editPostHandler = (info) => {\n    console.log('editing', info.id);\n    setEditModal(info);\n  };\n\n  const [isParsed, setIsParsed] = useState(false);\n\n  const offset = useRef(0);\n\n  const loadLikes = useCallback(async (arrOfPosts) => {\n    const ids = arrOfPosts.map((post) => post.post_id);\n    const requests = ids.map((id) => request(`/api/like/${id}`));\n    const res = await Promise.all(requests);\n    return res;\n  }, []);\n\n  const loadPosts = useCallback(\n    async (signal) => {\n      if (currentPage.id && !isParsed) {\n        const res = await request(\n          `/api/post/${currentPage.username}?limit=5&offset=0`,\n          {},\n          signal\n        );\n        if (res.success) {\n          setIsParsed(true);\n          dispatch(setPosts({ posts: res.posts, user: currentPage.username }));\n          const likes = await loadLikes(res.posts);\n          dispatch(setLikes({ likes }));\n        }\n      }\n    },\n    [currentPage.id]\n  );\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (!same.current) {\n      loadPosts(signal);\n    }\n\n    return () => {\n      abortController.abort();\n    };\n  }, [loadPosts]);\n\n  const fetchMoreData = async () => {\n    offset.current += 5;\n    const res = await request(\n      `/api/post/${currentPage.username}?limit=5&offset=${offset.current}`\n    );\n\n    const likes = await loadLikes(res.posts);\n\n    await sleep(300);\n\n    if (!res.posts.length) {\n      setHasMore(false);\n      return;\n    }\n\n    dispatch(\n      loadMorePosts({\n        posts: res.posts,\n      })\n    );\n    dispatch(loadMoreLikes({ likes }));\n  };\n\n  if (posts[0] === null && hasMore) setHasMore(false);\n  if (posts[posts.length - 1] !== currentPage.username) return <div></div>;\n  if (!Object.keys(likes).length) return <div></div>;\n\n  return (\n    <div className='POSTS__container'>\n      {currentPage.id === loggedInUser.id && (\n        <PostInput\n          picture={currentPage.picture}\n          fullname={currentPage.fullname}\n          username={currentPage.username}\n        />\n      )}\n\n      <InfiniteScroll\n        dataLength={posts.length}\n        next={fetchMoreData}\n        hasMore={hasMore}\n        loader={<h4>Loading...</h4>}\n      >\n        {posts\n          .reverse()\n          .slice(1)\n          .map((post) => {\n            return (\n              <Post\n                key={post.post_id}\n                id={post.post_id}\n                picture={currentPage.picture}\n                fullname={currentPage.fullname}\n                username={currentPage.username}\n                text={post.caption}\n                numberOfLikes={post.number_of_likes}\n                postedAt={post.created_at}\n                showSettings={currentPage.id === loggedInUser.id}\n                likes={likes[post.post_id]}\n                loggedInfo={{\n                  user_id: loggedInUser.id,\n                  username: loggedInUser.username,\n                  picture: loggedInUser.picture,\n                }}\n                setSelectedLikes={setSelectedLikes}\n                deletePostHandler={deletePostHandler}\n                editPostHandler={editPostHandler}\n              />\n            );\n          })}\n      </InfiniteScroll>\n      {selectedLikes && (\n        <LikesModal closeHandler={setSelectedLikes} info={selectedLikes} title='Likes' />\n      )}\n\n      {editModal && <EditModal handleEdit={setEditModal} info={editModal} />}\n    </div>\n  );\n};\n\nexport default Posts;\n","import React, { useEffect, useState, useCallback } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { setCurrentPage } from '../redux/actions';\n\nimport useFetch from '../hooks/useFetch';\n\nimport Header from '../components/Header/Header';\nimport NotFound from './NotFound';\nimport UserInfo from '../components/User/UserInfo';\nimport Posts from '../components/User/Post/Posts';\n\nimport '../styles/user.css';\nconst User = ({\n  match,\n  startMessagingHandler,\n  setOpenDialog,\n}) => {\n  const dispatch = useDispatch();\n\n  const { username } = match.params;\n  const [userPage, setUserPage] = useState(null);\n\n  const { loading, request } = useFetch();\n\n  const parseInfo = useCallback(async () => {\n    const json = await request(`/api/user/${username}`);\n    if (json.success) {\n      const {\n        based_in,\n        bio,\n        email,\n        fullname,\n        number_of_posts,\n        occupation,\n        phone_number,\n        picture,\n      } = json.info;\n      const id = json.info.person_id;\n      dispatch(\n        setCurrentPage({\n          id,\n          bio,\n          username,\n          based_in,\n          email,\n          fullname,\n          number_of_posts,\n          occupation,\n          phone_number,\n          picture,\n        })\n      );\n    } else {\n      setUserPage(undefined);\n    }\n  }, [username, request, dispatch]);\n\n  useEffect(() => {\n    parseInfo();\n  }, [username, parseInfo]);\n\n  if (userPage === undefined) return <NotFound />;\n\n  if (loading) return <div></div>;\n\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n\n      <UserInfo\n        startMessagingHandler={startMessagingHandler}\n        setOpenDialog={setOpenDialog}\n      />\n      <Posts />\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport {\n  makeStyles,\n  withStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from '@material-ui/core/styles';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from '@material-ui/core';\n\nimport { adjustToTable } from '../helpers';\n\nimport '../styles/input.css';\nimport '../styles/table.css';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'iCiel Gotham',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n\nconst StyledTableCellField = withStyles((theme) => ({\n  root: {\n    border: 'none',\n    borderColor: 'black',\n  },\n  body: {\n    fontSize: 14,\n    backgroundColor: 'rgb(44, 44, 44)',\n    color: 'rgb(177, 176, 176)',\n  },\n}))(TableCell);\n\nconst StyledTableCellValue = withStyles((theme) => ({\n  root: {\n    border: 'none',\n    borderColor: 'black',\n  },\n  body: {\n    fontSize: 14,\n    backgroundColor: 'rgb(44, 44, 44)',\n    color: theme.palette.common.white,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    font: 'iCiel Gotham',\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 200,\n  },\n});\n\nconst SimpleTable = ({ tab, data, handler }) => {\n  const classes = useStyles();\n  const infoRows = adjustToTable(data);\n  return (\n    <ThemeProvider theme={theme}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label='simple table'>\n          <TableBody>\n            {infoRows.map((row) => (\n              <StyledTableRow key={row.field}>\n                <StyledTableCellField align='left'>\n                  {row.field}\n                </StyledTableCellField>\n                <StyledTableCellValue align='left'>\n                  {tab === 'overview' ? (\n                    row.value\n                  ) : (\n                    <input\n                      type={row.field === 'Password' ? 'password' : 'text'}\n                      id='txt'\n                      name={row.field}\n                      value={row.value}\n                      onChange={handler}\n                    />\n                  )}\n                </StyledTableCellValue>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default SimpleTable;\n","import React, { useState } from 'react';\n\nimport '../styles/uploadButton.css';\n\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport {updateProfilePicture}  from '../redux/actions'\n\n//TODO: need to handle loading photos as well\n\nconst UploadButton = () => {\n  const [newImage, setNewImage] = useState(null);\n  const [reset, setReset] = useState(false);\n  const [removed, setRemoved] = useState(false);\n\n  const {username, picture} = useSelector(state => state.loggedInUser)\n  const dispatch = useDispatch()\n  console.log({username, picture})\n\n  const deleteImage = () => {\n    setRemoved(() => true);\n  };\n\n  const resetUploaded = (e) => {\n    e.preventDefault();\n    setNewImage(null);\n  };\n\n\n  const setProfilePhoto = async (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n    fd.append('profilePhoto', newImage);\n    const method = removed ? 'DELETE' : 'POST';\n    let url = `http://localhost:3000/api/user/${username}/addPicture`;\n    if (removed) {\n      url = `http://localhost:3000/api/user/${username}/deletePicture`;\n    }\n    const response = await fetch(url, {\n      method,\n      body: fd,\n    });\n    const data = await response.json();\n    console.log(data);\n    dispatch(updateProfilePicture(data.src))\n    setNewImage(null);\n  };\n\n  const selectImage = (event) => {\n    let file = event.target.files[0];\n    setNewImage(file);\n  };\n\n  return (\n    <div>\n      <div class='UPLOAD_panel'>\n        <div class='UPLOAD_button_outer'>\n          {newImage ? (\n            <div className='newPictureBtns'>\n              <button className='green' onClick={setProfilePhoto}>\n                Submit\n              </button>\n              <button className='green red' onClick={resetUploaded}>\n                Reset\n              </button>\n            </div>\n          ) : (\n            <div class='UPLOAD_btn_upload'>\n              <input\n                type='file'\n                id='UPLOAD_PROFILE_PICTURE'\n                name=''\n                onChange={selectImage}\n              />\n              Upload New Image\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadButton;\n","import React from 'react';\n\nimport Table from '../Table';\nimport UploadButton from '../UploadButton';\n\nconst Overview = ({ info, adjustedOverwiew }) => {\n  return (\n    <div className='settings-overview'>\n      <h1>Account overview</h1>\n      <div className='settings-overview-img'>\n        <img src={info.picture} alt='avatar'></img>\n        <UploadButton />\n      </div>\n      <div className='settings-overview-table'>\n        <Table tab='overview' data={adjustedOverwiew} />\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n","import React from 'react';\n\nimport Table from '../Table';\n\nconst EditProfile = ({edit, editHandlerOnChange, submitEdit, error, updatedInfo}) => {\n  return (\n    <div className='settings-overview'>\n      <h1>Edit profile</h1>\n      <Table tab='edit' data={edit} handler={editHandlerOnChange} />\n      <button className='btn green' onClick={submitEdit}>\n        Submit\n      </button>\n      {error && (\n        <h2 style={{ color: 'red', marginTop: '10px' }}>Error: {error}</h2>\n      )}\n      {updatedInfo && (\n        <h2 style={{ color: 'green', marginTop: '10px' }}>\n          Information updated\n        </h2>\n      )}\n    </div>\n  );\n};\n\nexport default EditProfile;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport useFetch from '../hooks/useFetch';\n\nimport Select from 'react-select';\nimport chroma from 'chroma-js';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  colourStyles: {\n    control: (styles) => ({ ...styles, backgroundColor: 'black' }),\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      const color = chroma(data.color);\n      return {\n        ...styles,\n        backgroundColor: isDisabled\n          ? 'rgb(44, 44, 44)'\n          : isSelected\n          ? data.color\n          : 'rgb(44, 44, 44)',\n        color: '#ccc',\n\n        cursor: isDisabled ? 'not-allowed' : 'default',\n\n        ':active': {\n          ...styles[':active'],\n          backgroundColor:\n            !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\n        },\n      };\n    },\n    multiValue: (styles, { data }) => {\n      const color = chroma(data.color);\n      return {\n        ...styles,\n        backgroundColor: color.alpha(0.2).css(),\n      };\n    },\n    multiValueLabel: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n    }),\n    multiValueRemove: (styles, { data }) => ({\n      ...styles,\n      color: data.color,\n      ':hover': {\n        backgroundColor: data.color,\n        color: 'white',\n      },\n    }),\n  },\n  groupStyles: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    color: 'black',\n    fontSize: '1.1rem',\n    padding: '0px',\n    margin: '0px',\n  },\n  groupBadgeStyles: {\n    backgroundColor: '#000',\n    borderRadius: '2em',\n    color: '#fefefe',\n    display: 'inline-block',\n    fontSize: 12,\n    fontWeight: 'normal',\n    lineHeight: '1',\n    minWidth: 1,\n    padding: '0.16666666666667em 0.5em',\n    textAlign: 'center',\n  },\n};\n\nconst SelectInterests = ({ setSelectActivities }) => {\n  const loggedInInterests = useSelector(\n    (state) => state.loggedInUser.interests\n  );\n\n  const [alreadyInterests, setAlreadyInterests] = useState({\n    loaded: false,\n    data: [],\n  });\n\n  const { request } = useFetch();\n\n  const [interests, setInterests] = useState([]);\n\n  const distinguishAlreadyInterests = useCallback(() => {\n    const loggedInInterestsIds = loggedInInterests.map(\n      (myInterest) => +myInterest.interest_id\n    );\n    interests.map((section, i, arr) => {\n      const { options } = section;\n\n      const filtered = options.filter((interest) =>\n        loggedInInterestsIds.includes(+interest.id)\n      );\n\n      if (i !== arr.length - 1) {\n        filtered.map((interest, index, interests) => {\n          setAlreadyInterests((prev) => ({\n            ...prev,\n            data: [...prev.data, interest],\n          }));\n        });\n      } else {\n        if (!filtered.length) {\n          setAlreadyInterests((prev) => ({ ...prev, loaded: true }));\n        } else {\n          filtered.map((interest, index, interests) => {\n            setAlreadyInterests((prev) => ({\n              ...prev,\n              loaded: true,\n              data: [...prev.data, interest],\n            }));\n          });\n        }\n      }\n    });\n  }, [loggedInInterests, interests]);\n\n  useEffect(() => {\n    distinguishAlreadyInterests();\n  }, [distinguishAlreadyInterests]);\n\n  const formatGroupLabel = (data) => (\n    <div style={styles.groupStyles}>\n      <span>{data.label}</span>\n      <span style={styles.groupBadgeStyles}>{data.options.length}</span>\n    </div>\n  );\n\n  const fetchInterests = useCallback(async () => {\n    const responce = await request('/api/interest');\n    if (responce.success) {\n      const { interests } = responce;\n\n      const labels = Array.from(\n        new Set(interests.map((interest) => interest.interest_category))\n      );\n\n      const groupedOptions = labels.map((interest_category) => {\n        let optionsCurrent = interests.filter(\n          (interest) => interest.interest_category === interest_category\n        );\n\n        optionsCurrent = optionsCurrent.map((interest) => ({\n          id: interest.interest_id,\n          value: interest.interest_name,\n          label: `${interest.interest_emoji} ${interest.interest_name}`,\n          color: interest.interest_color,\n        }));\n\n        return {\n          label: interest_category,\n          options: optionsCurrent,\n        };\n      });\n\n      setInterests(groupedOptions);\n    }\n  }, [request]);\n\n  useEffect(() => {\n    fetchInterests();\n  }, [fetchInterests]);\n\n  if (!interests || !alreadyInterests.loaded) return null;\n\n  return (\n    <div>\n      <Select\n        defaultValue={!alreadyInterests.fetched ? alreadyInterests.data : []}\n        isMulti\n        styles={styles.colourStyles}\n        name='colors'\n        options={interests}\n        formatGroupLabel={formatGroupLabel}\n        className='basic-multi-select'\n        classNamePrefix='select'\n        onChange={(e) => setSelectActivities(e)}\n      />\n    </div>\n  );\n};\n\nexport default SelectInterests;\n","import React, { useState } from 'react';\nimport SelectInterests from '../SelectInterests';\n\nconst EditInterests = ({ sendNewActivities }) => {\n  const [selectedActivities, setSelectActivities] = useState(null);\n\n  return (\n    <div className='settings_edit_interests'>\n      <div>\n        <h1>Edit interests</h1>\n        <SelectInterests setSelectActivities={setSelectActivities} />\n      </div>\n      <button className='btn green' onClick={() => sendNewActivities(selectedActivities)}>\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default EditInterests;\n","import React from 'react';\n\nimport Table from '../Table';\n\nconst ChangePassword = () => {\n  return (\n    <div>\n      <form onSubmit={() => console.log('Submitted')}>\n        <h1>Change password</h1>\n        <Table\n          tab='edit'\n          data={{\n            'Old Password': '',\n            'New Password': '',\n            'Confirm new password': '',\n          }}\n        />\n        <button className='btn green'>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","import React from 'react';\n\nimport Table from '../Table';\n\n\nconst DeleteProfile = ({deleteHadlerOnChange, deleteHandlerOnClick, wrongPassword, passwordToDelete}) => {\n  return (\n    <div>\n      <form>\n        <h1>Delete your profile</h1>\n        <h2>\n          Are you sure you want to delete your profile ?<br /> All your matchs\n          will be lost...\n        </h2>\n        <div className='input-group'>\n          <Table\n            tab='edit'\n            data={{\n              Password: passwordToDelete,\n            }}\n            handler={deleteHadlerOnChange}\n          />\n          <button\n            type='button'\n            className='green'\n            onClick={deleteHandlerOnClick}\n          >\n            Submit\n          </button>\n          {wrongPassword && (\n            <h2 style={{ color: 'red', marginTop: '10px' }}>Wrong password</h2>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default DeleteProfile;\n","import React from 'react';\n\nconst Tabs = ({ switchTab }) => {\n  return (\n    <div>\n      <ul>\n        <li onClick={() => switchTab(0)}>\n          <i className='fa fa-user'></i>Overview\n        </li>\n        <hr class='HRsettings' />\n        <li onClick={() => switchTab(1)}>\n          <i className='fa fa-cog'></i>Edit Profile\n        </li>\n        <hr class='HRsettings' />\n        <li onClick={() => switchTab(2)}>\n          <i className='fa fa-list-alt'></i>Edit Interests\n        </li>\n        <hr class='HRsettings' />\n        <li onClick={() => switchTab(3)}>\n          <i className='fa fa-lock'></i>Change Password\n        </li>\n        <hr class='HRsettings' />\n        <li onClick={() => switchTab(4)}>\n          <i className='fa fa-minus-circle'></i>Delete profile\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { updateProfileInfo } from '../redux/actions';\nimport useFetch from '../hooks/useFetch';\n\nimport { deepCopy, deleteProperties } from '../helpers';\n\nimport '../styles/table.css';\nimport '../styles/btn.css';\nimport Overview from './Settings/Overview';\nimport EditProfile from './Settings/EditProfile';\nimport EditInterests from './Settings/EditInterests';\nimport ChangePassword from './Settings/ChangePassword';\nimport DeleteProfile from './Settings/DeleteProfile';\nimport Tabs from './Settings/Tabs';\n\nconst SettingsCard = () => {\n  const dispatch = useDispatch();\n  const { request, error } = useFetch();\n\n  const info = useSelector((state) => state.loggedInUser);\n\n  const [openTab, setOpenTab] = useState(0);\n  const [edit, setEdit] = useState({\n    username: info.username,\n    based_in: info.based_in,\n    email: info.email,\n    fullname: info.fullname,\n    occupation: info.occupation,\n    phone_number: info.phone_number,\n  });\n  const [updatedInfo, setUpdatedInfo] = useState(false);\n\n  const [passwordToDelete, setPasswordToDelete] = useState('');\n\n  const [wrongPassword, setWrongPassword] = useState(false);\n\n  const switchTab = (index) => setOpenTab(index);\n\n  const editHandlerOnChange = (e) => {\n    const field = e.target.name;\n    if (updatedInfo) setUpdatedInfo(false);\n    const { value } = e.target;\n    setEdit((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const deleteHadlerOnChange = (e) => {\n    setPasswordToDelete(e.target?.value);\n  };\n\n  const submitEdit = async (e) => {\n    e.preventDefault();\n    const responce = await request('/api/user/info', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(edit),\n    });\n\n    if (responce?.success) {\n      setUpdatedInfo(true);\n    }\n\n    dispatch(updateProfileInfo(edit));\n  };\n\n  const deleteHandlerOnClick = async () => {\n    const responce = await request('/api/user/delete', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ password: passwordToDelete }),\n    });\n\n    if (responce?.success) {\n      window.location.href = '/login';\n      window.location.reload(true);\n    }\n    setWrongPassword(true);\n    setPasswordToDelete('');\n  };\n\n  const sendNewActivities = async (e) => {\n    let interests_ids = [];\n\n    const method = e ? 'POST' : 'DELETE';\n\n    if (method === 'POST') {\n      interests_ids = e.map((interest) => interest.id);\n    }\n\n    const responce = await request('api/interest/', {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ interests_ids }),\n    });\n\n    console.log({ responce });\n    //TODO -> dispatch(editActivities({newActivities: e}))\n  };\n\n  const copy1 = deepCopy(info);\n\n  const adjustedOverwiew = deleteProperties(copy1, [\n    'id',\n    'ready',\n    'isAuthenticated',\n    'picture',\n    'interests',\n  ]);\n\n  return (\n    <div className='settings-container'>\n      <div className='left-column'>\n        <Tabs switchTab={switchTab} />\n      </div>\n      <div className='settings-tab'>\n        {openTab === 0 && (\n          <Overview info={info} adjustedOverwiew={adjustedOverwiew} />\n        )}\n        {openTab === 1 && (\n          <EditProfile\n            edit={edit}\n            editHandlerOnChange={editHandlerOnChange}\n            error={error}\n            submitEdit={submitEdit}\n            updatedInfo={updatedInfo}\n          />\n        )}\n        {openTab === 2 && (\n          <EditInterests sendNewActivities={sendNewActivities} />\n        )}\n        {openTab === 3 && <ChangePassword />}\n        {openTab === 4 && (\n          <DeleteProfile\n            deleteHadlerOnChange={deleteHadlerOnChange}\n            deleteHandlerOnClick={deleteHandlerOnClick}\n            wrongPassword={wrongPassword}\n            passwordToDelete={passwordToDelete}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsCard;\n","import React from 'react';\nimport '../styles/account.css';\n\nimport SettingsCard from '../components/SettingsCard';\nimport Header from '../components/Header/Header';\n\nconst Settings = () => {\n  return (\n    <div>\n      <Header />\n      <SettingsCard />\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport Header from '../components/Header/Header';\n\nconst About = () => {\n  return (\n    <div>\n      <Header />\n      About page\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport Badge from './Badge';\n\nimport '../../styles/direct.css';\n\nimport { prepareText, adjustTime } from '../../helpers/msg';\n\nconst ChatRow = ({\n  chat_id,\n  person_id,\n  name,\n  picture,\n  latestMessage,\n  unreadMessagesCount,\n  openDialog,\n  handleChatClick,\n  empty,\n}) => {\n  const loggedInUser = useSelector((state) => state.loggedInUser);\n  const onlineUsers = useSelector((state) => state.onlineUsers);\n\n  const className =\n    name === openDialog\n      ? 'CHAT_ROW__container CHAT_ROW__container_active'\n      : 'CHAT_ROW__container';\n\n  if (empty)\n    return (\n      <div>\n        <p>You have no chats</p>\n      </div>\n    );\n\n  return (\n    <div>\n      <div className={className} onClick={handleChatClick.bind(null, chat_id)}>\n        <div className='CHAT_ROW__left'>\n          <img src={picture}></img>\n        </div>\n        <div className='CHAT_ROW__center'>\n          <div className='CHAT_ROW_TITLE'>\n            <h4>{name}</h4>\n            {onlineUsers.ids.includes(person_id.toString()) ? (\n              <i className='fa fa-circle CHAT_ROW_ONLINE'></i>\n            ) : (\n              ''\n            )}\n          </div>\n          <h5>\n            {loggedInUser.id === latestMessage?.sender_id && 'You: '}\n            {prepareText(latestMessage?.context)}\n          </h5>\n        </div>\n        <div className='CHAT_ROW__right'>\n          <p>\n            {latestMessage?.send_at === 'now'\n              ? 'now'\n              : adjustTime(latestMessage?.send_at)}\n          </p>\n          {unreadMessagesCount ? (\n            <Badge\n              size='smaller'\n              status='danger'\n              content={unreadMessagesCount}\n            />\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n      <hr className='hr_chat'></hr>\n    </div>\n  );\n};\n\nexport default ChatRow;\n","export const sortChatsByLatestMessage = (a, b) => {\n  const compare = a.latestMessage?.send_at < b.latestMessage?.send_at ? 1 : -1;\n  return compare;\n};\n\nexport const sortChats = (chats, sortFunction) => {\n  const emptyChats = chats.filter((element) => !element.latestMessage);\n  const notEmpty = chats.filter((element) => element.latestMessage);\n  notEmpty.sort(sortFunction);\n  return [...notEmpty, ...emptyChats];\n};\n","import React from 'react';\n\nimport ChatRow from './ChatRow';\n\nimport { sortChats, sortChatsByLatestMessage } from '../../helpers/sorting';\n\nimport '../../styles/direct.css';\n\nconst Chats = ({ chats, openDialog, handleChatClick, empty }) => {\n  const sortedChats = sortChats(chats, sortChatsByLatestMessage);\n\n  return (\n    <div>\n      {sortedChats.map((chat) => (\n        <ChatRow\n          key={chat.id}\n          chat_id={chat.room_id}\n          name={chat.username}\n          person_id={chat.person_id}\n          picture={chat.picture}\n          latestMessage={chat.latestMessage}\n          unreadMessagesCount={chat.unread}\n          openDialog={openDialog}\n          handleChatClick={handleChatClick}\n          empty={empty}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chats;\n","import React from 'react';\n\nimport '../../styles/hrCentered.css';\n\nconst DateHr = ({ date }) => {\n  return (\n    <div>\n      <hr className='hr-centered-text' data-content={date}></hr>\n    </div>\n  );\n};\n\nexport default DateHr;\n","import React from 'react';\n\nimport { motion } from 'framer-motion';\nimport DateHr from './DateHr';\n\nconst Message = ({ type, context, isOwner, date }) => {\n  let className = 'MESSAGES__chat-msg ';\n\n  if (isOwner) className += 'MESSAGES__owner';\n\n  if (type) return <DateHr date={date} />;\n\n  return (\n    <motion.div layout className={className}>\n      <div className='MESSAGES__chat-msg-content'>\n        <div class='MESSAGES__chat-msg-text'>\n          <div className='MESSAGES__chat-msg-text-context'>{context}</div>\n          <div className='MESSAGES__chat-msg-date'>{date}</div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Message from './Message';\n\nimport '../../styles/messages.css';\n\nconst Messages = ({\n  data,\n  textInput,\n  setOpenDialog,\n  handleMessageSend,\n  handleChange,\n  empty,\n}) => {\n  const loggedInUser = useSelector((state) => state.loggedInUser);\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'auto' });\n  };\n\n  useEffect(scrollToBottom, [data?.messages?.length]);\n\n  if (!data)\n    return (\n      <div className='MESSAGES__container'>\n        <div ref={messagesEndRef} />\n      </div>\n    );\n\n  return (\n    <div className='MESSAGES__container'>\n      <div className='MESSAGES__title'>\n        <i\n          className='fa fa-caret-left MESSAGES_back_button'\n          onClick={() => setOpenDialog(null)}\n        ></i>\n        <h4>{data.username}</h4>\n        <div className='MESSAGES_title_picture'>\n          <img src={data.picture}></img>\n        </div>\n      </div>\n      <div className='MESSAGES__body'>\n        {data.messages.map((msg) => (\n          <Message\n            key={msg.id}\n            type={msg.type}\n            context={msg.text}\n            isOwner={+msg.from === +loggedInUser.id}\n            date={msg.date}\n          />\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className='MESSAGES__send'>\n        <textarea\n          value={textInput}\n          onChange={handleChange}\n          name='message'\n          autoFocus\n          rows='1'\n          className='form-input MESSAGES_INPUT'\n        ></textarea>\n        <i\n          class='fa fa-paper-plane MESSAGES_SEND'\n          onClick={handleMessageSend.bind(null, data.room_id, loggedInUser.id)}\n        ></i>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Header from '../components/Header/Header';\nimport Chats from '../components/Direct/Chats';\nimport Messages from '../components/Direct/Messages';\n\nimport '../styles/direct.css';\n\nconst Direct = ({\n  textInput,\n  dialog,\n  openDialog,\n  handleChatClick,\n  handleChange,\n  handleMessageSend,\n  setOpenDialog,\n}) => {\n  const chats = Object.values(useSelector((state) => state.chats));\n  const messages = Object.values(useSelector((state) => state.messages));\n\n  useEffect(() => {\n    setOpenDialog(null);\n  }, []);\n\n  if (!chats.length || !messages.length) return <div></div>;\n\n  const notOpenSide = 'DIRECT_SIDE_NOT_ACTIVE';\n\n  return (\n    <div className='DIRECT__page'>\n      <Header />\n      <div className='DIRECT__component'>\n        <div\n          className={\n            dialog ? `DIRECT__left_side ${notOpenSide}` : 'DIRECT__left_side'\n          }\n        >\n          <Chats\n            chats={chats}\n            openDialog={openDialog}\n            handleChatClick={handleChatClick}\n            empty={chats[0] === true ? true : false}\n          />\n        </div>\n        <div\n          className={\n            dialog ? 'DIRECT__right_side' : `DIRECT__right_side ${notOpenSide}`\n          }\n        >\n          <Messages\n            data={\n              openDialog\n                ? messages.filter((msgs) => +msgs.room_id === +openDialog)[0]\n                : null\n            }\n            textInput={textInput}\n            handleMessageSend={handleMessageSend}\n            handleChange={handleChange}\n            setOpenDialog={setOpenDialog}\n            empty={messages[0] === true ? true : false}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Direct;\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport {\n  setLoggedInFollowing,\n  getChats,\n  getMessages,\n  setUuid,\n  addMessage,\n  resetUnreadCounter,\n  setOnline,\n  addChat,\n} from './redux/actions';\n\nimport useFetch from './hooks/useFetch';\nimport useAuth from './hooks/useAuth';\n\nimport Login from './pages/Login';\nimport Header from './components/Header/Header';\nimport Signup from './pages/Signup';\nimport User from './pages/User';\nimport NotFound from './pages/NotFound';\nimport Settings from './pages/Settings';\nimport About from './pages/About';\nimport Direct from './pages/Direct';\n\nimport './App.css';\n//TODO WHEN I RECEIVE A MESSAGE AND I'M INSIDE THIS CHAT, IT SHOULDN'T BE TREATED AS UNREAD\n\nconst ws = new WebSocket(`wss://mellowgram.herokuapp.com/`);\n// const ws = new WebSocket(`ws://localhost:5000`);\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const { request } = useFetch();\n  const { loading } = useAuth();\n\n  const [textInput, setTextInput] = useState('');\n  const [openDialog, setOpenDialog] = useState(null);\n\n  const userInfo = useSelector((state) => state.loggedInUser);\n  const chats = Object.values(useSelector((state) => state.chats));\n\n  const handleChange = (e) => {\n    setTextInput(e.target.value);\n  };\n\n  const handleMessageSend = (roomId, senderId) => {\n    if (textInput) {\n      ws.send(\n        JSON.stringify({\n          action: 'SEND_MESSAGE',\n          roomId,\n          senderId,\n          context: textInput,\n          uuid: userInfo.uuid,\n        })\n      );\n      dispatch(\n        addMessage({\n          info: {\n            messageId: '//Do not know yet',\n            roomId,\n            senderId,\n            context: textInput,\n            date: 'now',\n          },\n          me: userInfo,\n        })\n      );\n    }\n    setTextInput('');\n  };\n\n  const handleChatClick = (chat_id) => {\n    const room = chats.filter((chat) => chat.room_id === chat_id)[0];\n    setTextInput('');\n    setOpenDialog(chat_id);\n\n    if (room.unread) {\n      dispatch(resetUnreadCounter({ chatId: chat_id }));\n\n      ws.send(\n        JSON.stringify({\n          action: 'SET_READ',\n          chatId: chat_id,\n          userId: userInfo.id,\n        })\n      );\n    }\n  };\n\n  const startMessagingHandler = ({ me, other }) => {\n    ws.send(JSON.stringify({ action: 'START_CHAT', me, other }));\n  };\n\n  const fetchFollowing = useCallback(\n    async (info, signal) => {\n      if (info.id) {\n        const responce = await request(\n          `/api/follow/following/${userInfo.username}`,\n          {},\n          signal\n        );\n        if (responce.success) {\n          dispatch(\n            setLoggedInFollowing({\n              users: responce.data,\n              user: userInfo.username,\n            })\n          );\n        }\n      }\n    },\n    [request, userInfo.id]\n  );\n\n  useEffect(() => {\n    // ws.onopen = () => {\n    //   console.log('Connection established');\n    // };\n    ws.onmessage = (evt) => {\n      const message = JSON.parse(evt.data);\n      console.log({ message });\n      const { action } = message;\n      switch (action) {\n        case 'INFORMATION_IS_READY':\n          ws.send(JSON.stringify({ action: 'GET_CHATS', id: userInfo.id }));\n          ws.send(\n            JSON.stringify({ action: 'GET_ONLINE', user_id: userInfo.id })\n          );\n          break;\n\n        case 'GET_CHATS':\n          dispatch(\n            getChats({\n              chats: message.payload.rooms,\n              messages: message.payload.messages,\n              me: message.payload.id,\n            })\n          );\n          dispatch(\n            getMessages({\n              messages: message.payload.messages,\n              chats: message.payload.rooms,\n            })\n          );\n          dispatch(setUuid({ uuid: message.payload.uuid }));\n          break;\n\n        case 'GET_ONLINE':\n          dispatch(setOnline({ onlineIds: message.payload }));\n          break;\n\n        case 'SEND_MESSAGE':\n          const { messageInfo } = message;\n          dispatch(addMessage({ info: messageInfo, me: userInfo }));\n          break;\n\n        case 'START_CHAT': {\n          const { chat } = message;\n          dispatch(addChat({ chat }));\n          setOpenDialog(chat.room_id);\n          break;\n        }\n\n        default:\n          break;\n      }\n    };\n\n    ws.onclose = () => {\n      console.log('Connection closed');\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchFollowing(userInfo);\n  }, [fetchFollowing]);\n\n  if (loading) return <div></div>;\n\n  if (userInfo.isAuthenticated) {\n    return (\n      <Router>\n        <div className='container'>\n          <Switch>\n            <Route\n              exact\n              path='/header'\n              render={(props) => <Header {...props} />}\n            />\n            <Redirect from='/' exact to={`/${userInfo.username}`} />\n            <Redirect from='/login' exact to={`/${userInfo.username}`} />\n            <Redirect from='/signup' exact to={`/${userInfo.username}`} />\n            <Route\n              exact\n              path='/account'\n              render={(props) => <Settings {...props} />}\n            />\n            <Route\n              exact\n              path='/about'\n              render={(props) => <About {...props} />}\n            />\n            <Route\n              exact\n              path='/direct'\n              render={(props) => (\n                <Direct\n                  {...props}\n                  dialog={openDialog}\n                  textInput={textInput}\n                  openDialog={openDialog}\n                  handleChatClick={handleChatClick}\n                  handleChange={handleChange}\n                  handleMessageSend={handleMessageSend}\n                  setOpenDialog={setOpenDialog}\n                />\n              )}\n            />\n            <Route\n              exact\n              path='/:username'\n              render={(props) => (\n                <User\n                  {...props}\n                  startMessagingHandler={startMessagingHandler}\n                  setOpenDialog={setOpenDialog}\n                />\n              )}\n            />\n\n            <Route render={(props) => <NotFound {...props} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  } else {\n    return (\n      <Router>\n        <div className='container'>\n          <Switch>\n            <Redirect path='/' exact to='/login' />\n            <Route\n              exact\n              path='/signup'\n              render={(props) => <Signup {...props} />}\n            />\n            <Route\n              exact\n              path='/header'\n              render={(props) => <Header {...props} />}\n            />\n\n            <Route\n              exact\n              path='/login'\n              render={(props) => <Login {...props} />}\n            />\n            <Route\n              exact\n              path='/about'\n              render={(props) => <About {...props} />}\n            />\n            <Route\n              exact\n              path='/:username'\n              render={(props) => <User {...props} />}\n            />\n            <Route render={(props) => <NotFound {...props} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n};\n\nexport default App;\n"],"sourceRoot":""}